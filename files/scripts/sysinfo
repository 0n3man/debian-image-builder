#!/bin/bash
CPU0=`lscpu | grep "Model name" | sed -n 1p | sed 's/Model name://g' | sed -r '1s/\s+//g'`
CPU0M=`lscpu | grep "CPU max MHz" | sed -n 1p | sed 's/CPU max MHz://g' | sed -r '1s/\s+//g' | sed 's/.0000//g'`
CPU1=`lscpu | grep "Model name" | sed -n 2p | sed 's/Model name://g' | sed -r '1s/\s+//g'`
CPU1M=`lscpu | grep "CPU max MHz" | sed -n 2p | sed 's/CPU max MHz://g' | sed -r '1s/\s+//g' | sed 's/.0000//g'`
if [[ -f "/sys/class/thermal/thermal_zone0/temp" ]]; then
	CPU0T=$(cat /sys/class/thermal/thermal_zone0/temp|cut -c1-2);
fi
if [[ -f "/sys/class/thermal/thermal_zone1/temp" ]]; then
	CPU1T=$(cat /sys/class/thermal/thermal_zone1/temp|cut -c1-2);
fi

run(){
cpu_hwinfo(){
if [[ `grep -w "0-5" "/sys/devices/system/cpu/present"` ]]; then
	echo -en "Processors:  "$CPU0; echo -en " @ $CPU0M"; echo -en "MHz $CPU0T°C";
	echo -en "," $CPU1; echo -en " @ $CPU1M"; echo -e "MHz $CPU1T°C";
else
	echo -en "Processor:   "$CPU0; echo -en " @ $CPU0M"; echo -e "MHz $CPU0T°C";
fi
}

echo -e "CPU Usage:  " `top -b -n1 | grep "Cpu(s)" | awk '{print $2 + $4}'`
if [[ -f "/sys/devices/system/cpu/present" ]]; then
	cpu_hwinfo;
else
	if [[ -f "/sys/class/thermal/thermal_zone0/temp" ]] && [[ -f "/sys/class/thermal/thermal_zone1/temp" ]]; then
		echo -e "Temperature:" $CPU0T°C $CPU1T°C
	else
		echo -e "Temperature:" $CPU0T°C
	fi
	echo -e "Cores:      " $(sudo cat /sys/devices/system/cpu/cpu*/cpufreq/cpuinfo_cur_freq);
fi
echo -e "Governor:   " $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)
echo -e "Memory:     " $(free -h | sed 's/i//g' | sed 's/Mem://g' | awk '{print $1" "$2}' | sed -n 'n;p')
echo -e "Entropy:    " $(cat /proc/sys/kernel/random/entropy_avail)
echo -e "Uptime:     " $(uptime)
}

update(){
if [ -f /usr/local/bin/sysinfo ]; then
	sudo mv /usr/local/bin/sysinfo /usr/local/bin/sysinfo.orig;
	sudo mv /usr/local/bin/smon /usr/local/bin/smon.orig;
	URL="https://raw.githubusercontent.com/pyavitz/debian-image-builder/feature/files/scripts/"
	sudo wget -cq ${URL}/sysinfo -P /usr/local/bin/;
	sudo wget -cq ${URL}/smon -P /usr/local/bin/;
	if [ -e /usr/local/bin/sysinfo ]; then
		sudo chmod +x /usr/local/bin/sysinfo;
		sudo rm -f /usr/local/bin/sysinfo.orig;
		ls -ls /usr/local/bin/sysinfo;
	else
		sudo mv /usr/local/bin/sysinfo.orig /usr/local/bin/sysinfo;
		echo -e "sysinfo [fail]" ;
	fi
	if [ -f /usr/local/bin/smon ]; then
		sudo chmod +x /usr/local/bin/smon;
		sudo rm -f /usr/local/bin/smon.orig;
		ls -ls /usr/local/bin/smon;
	else
		sudo mv /usr/local/bin/smon.orig /usr/local/bin/smon;
		echo -e "smon [fail]";
	fi
fi
}

if [ $# -eq 0 ]; then
	echo -e "Missing options!"
	echo "(run $0 -h for help)"
	echo ""
	exit 0
fi

while getopts "rhu" OPTION; do
	case $OPTION in

		r)
			ECHO="RUN"
			;;
		u)
			ECHO="UP"
			;;
		h)
			echo ""
			echo -e "   -r        Run"
			echo -e "   -u        Update"
			echo ""
			exit 0
			;;
	esac
done

if [ $ECHO = "RUN" ]; then
	run;
fi
if [ $ECHO = "UP" ]; then
	update;
fi
