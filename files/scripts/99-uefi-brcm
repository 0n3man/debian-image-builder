#!/bin/bash
# UEFI/GRUB post update file management

if [[ -f "/etc/opt/board.txt" ]]; then
	. /etc/opt/board.txt
else
	exit 0
fi

if [[ "$FSTYPE" == "ext4" ]]; then
	FSMOD="ext2"
	ROOT_FSTYPE="rootfstype=ext4"
fi
if [[ "$FSTYPE" == "btrfs" ]]; then
	FSMOD="btrfs"
	ROOT_FSTYPE="rootfstype=btrfs rootflags=subvol=@"	
fi
if [[ "$FSTYPE" == "xfs" ]]; then
	FSMOD="xfs"
	ROOT_FSTYPE="rootfstype=xfs"
fi

default_cfg(){
if [[ "$GPT" == "true" ]]; then PTYPE="gpt"; else PTYPE="msdos"; fi
cat <<EOF > /etc/opt/grub.cfg
set timeout=0
set default=0
menuentry "${DEFAULT_MOTD}" {
	insmod gzio
	insmod part_${PTYPE}
	insmod ${FSMOD}
	set root=hd0,${PTYPE}1
	echo "Loading kernel ..."
	linux /Image ${CONSOLE} rw root=LABEL=ROOTFS rootwait ${ROOT_FSTYPE} fsck.repair=yes loglevel=1 ${EXTRA}
	echo "Loading ramdisk ..."
	initrd /initrd.gz
	echo "Loading devicetree ..."
	devicetree /${DTB}.dtb
}
EOF
}

if [[ -f "/etc/opt/grub.cfg" ]]; then :; else default_cfg; fi
if [[ -d "/boot/${FAMILY}" ]]; then
	mkdir -p /boot/${FAMILY}/EFI/BOOT
	if [[ -f "/boot/${FAMILY}/EFI/BOOT/BOOTARM.EFI" ]]; then
		rm -f /boot/${FAMILY}/EFI/BOOT/BOOTARM.BAK;
		mv -f /boot/${FAMILY}/EFI/BOOT/BOOTARM.EFI /boot/${FAMILY}/EFI/BOOT/BOOTARM.BAK;
	fi
	if [[ -f "/boot/${FAMILY}/EFI/BOOT/BOOTAA64.EFI" ]]; then
		rm -f /boot/${FAMILY}/EFI/BOOT/BOOTAA64.BAK;
		mv -f /boot/${FAMILY}/EFI/BOOT/BOOTAA64.EFI /boot/${FAMILY}/EFI/BOOT/BOOTAA64.BAK;
	fi
	if [[ "$ARCH" == "arm" ]]; then
		grub-mkstandalone -O arm-efi -o /boot/${FAMILY}/EFI/BOOT/BOOTARM.EFI "/boot/grub/grub.cfg=/etc/opt/grub.cfg";
	fi
	if [[ "$ARCH" == "arm64" ]]; then
		grub-mkstandalone -O arm64-efi -o /boot/${FAMILY}/EFI/BOOT/BOOTAA64.EFI "/boot/grub/grub.cfg=/etc/opt/grub.cfg";
	fi
fi
