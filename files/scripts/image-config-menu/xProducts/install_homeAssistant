#!/bin/bash
clear -x
source /etc/opt/board.txt

echo "This was built to work with the odroid N2+.  It has also been tested with"
echo "the raspberry pi 4 and seems to work.  I do not use audio out of my smart"
echo "home controller so I have not vailidate that the HA audio container works"
echo "correctly.  Other than that this will give you a good platform for HA."
echo "If you use this build on a raspberry pi I'd recommend using an "A1" sd card.  On the" 
echo "odroid n2+ I recommend emmc.  The os is 64 bit, which matters for selection when the final"
echo "HA install script runs and you are asked to select the platform."
read -p "Are you sure you want to install Home Assistant [y/n]? " -n 1 -r
echo    # (optional) move to a new line
if [ "$REPLY" != "y" ]; then
    exit 1
fi

echo "Installing Home Assistant"
set -x
if [[ "$FAMILY" == "amlogic" ]]; then
    #Make sure sound is enabled on N2+
    sudo amixer sset 'FRDDR_A SINK 1 SEL' 'OUT 1'
    sudo amixer sset 'FRDDR_A SRC 1 EN' 'on'
    sudo amixer sset 'TDMOUT_B SRC SEL' 'IN 0'
    sudo amixer sset 'TOHDMITX I2S SRC' 'I2S B'
    sudo amixer sset 'TOHDMITX' 'on'
    sudo amixer sset 'FRDDR_B SINK 1 SEL' 'OUT 2'
    sudo amixer sset 'FRDDR_B SRC 1 EN' 'on'
    sudo amixer sset 'FRDDR_C SINK 1 SEL' 'OUT 3'
    sudo amixer sset 'FRDDR_C SRC 1 EN' 'on'
    sudo alsactl store
fi

# install docker
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
 "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]\
 https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io

# install HA required packages
sudo apt -y install jq libglib2.0-bin udisks2
sudo apt -y install network-manager

# install agent required by ha
wget \
https://github.com/home-assistant/os-agent/releases/download/1.2.2/os-agent_1.2.2_linux_aarch64.deb
sudo dpkg -i os-agent_1.2.2_linux_aarch64.deb

# enabed service required by HA
sudo systemctl enable systemd-resolved.service
sudo systemctl start systemd-resolved.service

# Need to fake grub so HA will install
sudo touch /etc/default/grub
echo '#!/bin/bash' | sudo tee /usr/bin/update-grub
echo 'echo got it'  |sudo tee -a /usr/bin/update-grub
sudo chmod 755 /usr/bin/update-grub

#enable use of GPIO pins
sudo apt install -y gpiod python3-libgpiod
echo 'KERNEL=="gpiochip0", MODE="0666"' |sudo tee -a /etc/udev/rules.d/99-perm.rules 
echo 'KERNEL=="gpiochip1", MODE="0666"' |sudo tee -a /etc/udev/rules.d/99-perm.rules 

# Install tools useful for sensor scripts that communicate with HA mosquitto broker
sudo apt -y install netcat mosquitto-clients

# Install tools that allow for using usb nic for backup communication path
sudo apt -y install networkd-dispatcher ifmetric

# Remove avahi-daemon as it's not required
sudo apt -y remove --purge avahi-daemon

# Add some kernel arguments, some that are required, some that look to make system more stable
sudo sed -i '/append / s/$/ systemd.unified_cgroup_hierarchy=false systemd.legacy_systemd_cgroup_controller=false usbcore.autosuspend=-1 usbcore.autosuspend=-1 clk_ignore_unused  cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory apparmor=1 security=apparmor/' /boot/extlinux/extlinux.conf

# Grab the HA supervisor package which will install HA
wget https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb
sudo dpkg -i homeassistant-supervised.deb

sleep 3
