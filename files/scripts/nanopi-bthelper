#!/bin/bash

WHT="\e[1;37m"
FIN="\e[0m"

chip="ap6212"
uart_dev="ttyS3"
index=`rfkill list | grep "sunxi-bt" | cut -f 1 -d":"`

reset_bt(){
BTWAKE="/proc/bluetooth/sleep/btwake"
if [ -f ${BTWAKE} ]; then
	echo 0 > ${BTWAKE}
fi

index=`rfkill list | grep $1 | cut -f 1 -d":"` 
if [[ -n ${index}} ]]; then
	rfkill block ${index}
	sleep 1
	rfkill unblock ${index}
	sleep 1
fi
}

start_bt(){
rm -rf /var/log/brcm
brcm_try_log="/var/log/brcm/brcm_try.log"
brcm_log="/var/log/brcm/brcm.log"
brcm_err_log="/var/log/brcm/brcm_err.log"
[ -d /var/log/brcm ] || mkdir -p /var/log/brcm

        
if [ -d /sys/class/rfkill/rfkill${index} ]; then
	reset_bt "sunxi-bt"
	chmod 0660 /sys/class/rfkill/rfkill${index}/state
	chmod 0660 /sys/class/rfkill/rfkill${index}/type
	chgrp dialout /sys/class/rfkill/rfkill${index}/state
	chgrp dialout /sys/class/rfkill/rfkill${index}/type

	# generate MAC address
	if [ -f /sys/bus/nvmem/devices/sunxi-sid0/nvmem ]; then
		MACADDRESS=`md5sum /sys/bus/nvmem/devices/sunxi-sid0/nvmem | cut -b 1-12 | sed -r ':1;s/(.*[^:])([^:]{2})/\1:\2/;t1'`
	else
	MACADDRESS=`md5sum /sys/class/sunxi_info/sys_info | cut -b 1-12 | sed -r ':1;s/(.*[^:])([^:]{2})/\1:\2/;t1'`
	fi
	echo ${MACADDRESS} >/tmp/bt_macaddress

let TIMEOUT=90
	while [ ${TIMEOUT} -gt 0 ]; do
	killall -9 /bin/brcm_patchram_plus
	/bin/brcm_patchram_plus -d --patchram /lib/firmware/${chip}/bcm43438a1.hcd --enable_hci --bd_addr ${MACADDRESS} --no2bytes --tosleep 5000 /dev/${uart_dev} >${brcm_log} 2>&1 &
	sleep 30
	cur_time=`date "+%H-%M-%S"`
		if grep "Done setting line discpline" ${brcm_log}; then
			echo "${cur_time}: bt firmware download ok($((TIMEOUT/30)))" >> ${brcm_try_log}
			if ! grep "fail" ${brcm_try_log}; then
				reset_bt "hci0"
				hciconfig hci0 up
				hciconfig >> ${brcm_try_log}
			fi
				break
			else
				echo "${cur_time}: bt firmware download fail($((TIMEOUT/30)))" >> ${brcm_try_log}
				cp ${brcm_log} ${brcm_err_log}
				reset_bt "sunxi-bt"
			fi
		TIMEOUT=$((TIMEOUT-30))
	done
fi
}

kill_bt(){
kill `ps --no-headers -C brcm_patchram_plus -o pid`
}

# commands
if [ $# -eq 0 ]; then
	echo "Missing options!"
	echo "(run $0 -h for help)"
	echo ""
	exit 0
fi

ECHO="false"

while getopts "skh" OPTION; do
        case $OPTION in

                s)
                        ECHO="start_bt"
                        ;;
                k)
                        ECHO="kill_bt"
                        ;;
                h)
                        echo ""                
                        echo -e "${WHT}NanoPi NEO Plus2${FIN}"
                        echo ""
                        echo "   -s       Start bluetooth service"
                        echo "   -k       Kill bluetooth service"
                        echo ""
                        exit 0
                        ;;

        esac
done

if [ $ECHO = "start_bt" ]; then
	start_bt;
fi
if [ $ECHO = "kill_bt" ]; then
	kill_bt;
fi
