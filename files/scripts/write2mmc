#!/bin/bash
RED="\e[1;31m"
YLW="\e[1;33m"
FIN="\e[0m"

### RUN AS ROOT
run_as_root(){
if [ "$USER" != "root" ]; then
        echo "Please run this as root or with sudo privileges."
        exit 1
fi
}

confirm(){
echo -e "${YLW}This script requires a internet connection."
echo -e "If not connected to the webs, than say no...${FIN}."
echo -e ""
read -p "Continue (y/n)?" choice
case "$choice" in 
  y|Y ) echo && echo -e "${RED}Confirmed${FIN}!";;
  n|N ) echo && echo -e "${YLW}You have chosen${FIN}... ${YLW}wisely${FIN}." && exit 0;;
  * ) echo && echo -e "${YLW}Invalid choice${FIN}." && exit 0;;
esac
}

### PROGRESS BAR
check_progressbar(){
DPB="sudo wget -cq https://raw.githubusercontent.com/pyavitz/bash_progress_bar/master/progress_bar.sh -P /etc/opt/"
MPB="sudo mv -f /etc/opt/progress_bar.sh /etc/opt/progressbar.txt"
if ls /etc/opt/progressbar.txt > /dev/null 2>&1
	then : ;
	else $DPB && $MPB ;
fi
}

### BIND EMMC
libre_bind_emmc(){
echo -n d0074000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/unbind
sleep 1
echo -n d0074000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/bind
sleep 1
lsblk -dno NAME,SIZE
}

odroid_bind_emmc(){
echo -n ffe07000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/unbind
sleep 1
echo -n ffe07000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/bind
sleep 1
lsblk -dno NAME,SIZE
}

### PARTITION DRIVE
amlogic_partition_emmc(){
dd if=/dev/zero of=/dev/mmcblk0 bs=512 count=1
truncate -s 1850MB /dev/mmcblk0
fdisk /dev/mmcblk0 <<EOF
o
n
p
1
2248
a
t
b
3613280
p
w
EOF

partprobe /dev/mmcblk0
echo 'y' | mkfs.ext4 -L ROOTFS /dev/mmcblk0p1
mount /dev/mmcblk0p1 /mnt
sync
umount /mnt
mount -o defaults,noatime /dev/mmcblk0p1 /mnt
bash growpart /dev/mmcblk0 1 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk0p1 > /dev/null 2>&1
}

odroid_partition_emmc(){
dd if=/dev/zero of=/dev/mmcblk1 bs=512 count=1
truncate -s 1850MB /dev/mmcblk1
fdisk /dev/mmcblk1 <<EOF
o
n
p
1
2248
a
t
b
3613280
p
w
EOF

partprobe /dev/mmcblk1
echo 'y' | mkfs.ext4 -L ROOTFS /dev/mmcblk1p1
mount /dev/mmcblk1p1 /mnt
sync
umount /mnt
mount -o defaults,noatime /dev/mmcblk1p1 /mnt
bash growpart /dev/mmcblk1 1 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk1p1 > /dev/null 2>&1
}

nanopi_partition_emmc(){
dd if=/dev/zero of=/dev/mmcblk2 bs=512 count=1
truncate -s 1850MB /dev/mmcblk2
fdisk /dev/mmcblk2 <<EOF
o
n
p
1
2048
a
t
b
3613280
p
w
EOF

partprobe /dev/mmcblk2
echo 'y' | mkfs.ext4 -L ROOTFS /dev/mmcblk2p1
mount /dev/mmcblk2p1 /mnt
sync
umount /mnt
mount -o defaults,noatime /dev/mmcblk2p1 /mnt
bash growpart /dev/mmcblk2 1 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk2p1 > /dev/null 2>&1
}

nanopc_partition_emmc(){
dd if=/dev/zero of=/dev/mmcblk2 bs=512 count=1
truncate -s 2100MB /dev/mmcblk2
fdisk /dev/mmcblk2 <<EOF
o
n
p
1
32767
a
t
b
4101561
p
w
EOF

partprobe /dev/mmcblk2
echo 'y' | mkfs.ext4 -L ROOTFS /dev/mmcblk2p1
mount /dev/mmcblk2p1 /mnt
sync
umount /mnt
mount -o defaults,noatime /dev/mmcblk2p1 /mnt
bash growpart /dev/mmcblk2 1 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk2p1 > /dev/null 2>&1
}

### RSYNC
transfer(){
cd /
rsync -apvx --progress --stats --human-readable . /mnt > /dev/null 
}

transfer_to_emmc(){
source /etc/opt/progressbar.txt
    enable_trapping
    setup_scroll_area
    for i in {0..100}
    do
        if [ $i = 0 ]; then
            block_progress_bar $i
        else
            transfer
            draw_progress_bar $i
        fi
    done
    destroy_scroll_area
}

### FETCH UUID
amlogic_fetch_uuid(){
echo 'ROOT_UUID="' > root1
blkid -o export -- /dev/mmcblk0p1 | sed -ne 's/^UUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-id.txt
rm -f root1 root2 root3

echo 'ROOT_PARTUUID="' > root1
blkid -o export -- /dev/mmcblk0p1 | sed -ne 's/^PARTUUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-pid.txt
rm -f root1 root2 root3
}

odroid_fetch_uuid(){
echo 'ROOT_UUID="' > root1
blkid -o export -- /dev/mmcblk1p1 | sed -ne 's/^UUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-id.txt
rm -f root1 root2 root3

echo 'ROOT_PARTUUID="' > root1
blkid -o export -- /dev/mmcblk1p1 | sed -ne 's/^PARTUUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-pid.txt
rm -f root1 root2 root3
}

nanopi_fetch_uuid(){
echo 'ROOT_UUID="' > root1
blkid -o export -- /dev/mmcblk2p1 | sed -ne 's/^UUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-id.txt
rm -f root1 root2 root3

echo 'ROOT_PARTUUID="' > root1
blkid -o export -- /dev/mmcblk2p1 | sed -ne 's/^PARTUUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-pid.txt
rm -f root1 root2 root3
}

nanopc_fetch_uuid(){
echo 'ROOT_UUID="' > root1
blkid -o export -- /dev/mmcblk2p1 | sed -ne 's/^UUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-id.txt
rm -f root1 root2 root3

echo 'ROOT_PARTUUID="' > root1
blkid -o export -- /dev/mmcblk2p1 | sed -ne 's/^PARTUUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-pid.txt
rm -f root1 root2 root3
}

### FSTAB
create_fstab(){
source /etc/opt/root-id.txt
rm -f /mnt/etc/fstab
tee /mnt/etc/fstab <<EOF
UUID=${ROOT_UUID}	/		ext4	defaults,noatime,nodiratime,commit=600,errors=remount-ro 0 1
tmpfs		/tmp	tmpfs	defaults,nosuid 0 0
EOF
}

### EXTLINUX
libre_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/amlogic/
    fdt /boot/amlogic/meson-gxl-s905x-libretech-cc.dtb
    append earlyprintk console=tty1 console=ttyAML0,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 no_console_suspend fsck.repair=yes net.ifnames=0 loglevel=1 init=/sbin/init
EOF
}

odroidc4_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/amlogic/
    # mainline
    #fdt /boot/amlogic/meson-sm1-odroid-c4.dtb
    # legacy
    fdt /boot/amlogic/meson64_odroidc4.dtb
    append earlyprintk console=tty1 console=ttyAML0,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 no_console_suspend fsck.repair=yes net.ifnames=0 loglevel=1 init=/sbin/init
EOF
}

odroidn2_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/amlogic/
    # mainline
    #fdt /boot/amlogic/meson-g12b-odroid-n2.dtb
    # legacy
    fdt /boot/amlogic/meson64_odroidn2.dtb
    append earlyprintk console=tty1 console=ttyAML0,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 no_console_suspend fsck.repair=yes net.ifnames=0 mitigations=off loglevel=1 init=/sbin/init
EOF
}

odroidn2plus_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/amlogic/
    # mainline
    #fdt /boot/amlogic/meson-g12b-odroid-n2-plus.dtb
    # legacy
    fdt /boot/amlogic/meson64_odroidn2_plus.dtb
    append earlyprintk console=tty1 console=ttyAML0,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 no_console_suspend fsck.repair=yes net.ifnames=0 mitigations=off loglevel=1 usbhid.quirks=0x0eef:0x0005:0x0004 usb-storage.quirks=0x1058:0x259b:u,0x152d:0x0576:u parkmode_disable_ss_quirk=1 init=/sbin/init
EOF
}

nanopi_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/allwinner/
    fdt /boot/allwinner/sun50i-h5-nanopi-neo-plus2.dtb
    append earlyprintk console=tty1 console=ttyS0,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 net.ifnames=0 loglevel=1 init=/sbin/init
EOF
}

nanopc_create_extlinux(){
source /etc/opt/root-pid.txt
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label kernel
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/rockchip/
    fdt /boot/rockchip/rk3399-nanopc-t4.dtb
    append earlyprintk console=tty1 console=ttyS2,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 net.ifnames=0 usb-storage.quirks=0x1d6b:0x0003:u,0x1f75:0x0621:u,0x1058:0x259b:u loglevel=1 init=/sbin/init
EOF
}

### WRITE UBOOT
amlogic_flash_uboot(){
dd if=/usr/lib/u-boot/u-boot.bin of=/dev/mmcblk0 bs=512 seek=1
}

odroid_flash_uboot(){
dd if=/usr/lib/u-boot/u-boot.bin of=/dev/mmcblk1 bs=512 seek=1
}

allwinner_flash_uboot(){
dd if=/usr/lib/u-boot/u-boot-sunxi-with-spl.bin of=/dev/mmcblk2 conv=fsync bs=1024 seek=8
}

nanopc_flash_uboot(){
dd if=/usr/lib/u-boot/idbloader.bin of=/dev/mmcblk2 seek=64
dd if=/usr/lib/u-boot/u-boot.itb of=/dev/mmcblk2 seek=16384
}

### THE MAGIC
run_as_root
echo
confirm
echo
check_progressbar

if `grep -Fx "lepotato" "/etc/opt/board.txt" >/dev/null;`
	then echo Binding eMMC. && libre_bind_emmc && echo Done.;
fi
if `grep -Fx "odroidc4" "/etc/opt/board.txt" >/dev/null;`
	then echo Binding eMMC. && odroid_bind_emmc && echo Done.;
fi
if `grep -Fx "odroidn2" "/etc/opt/board.txt" >/dev/null;`
	then echo Binding eMMC. && odroid_bind_emmc && echo Done.;
fi
if `grep -Fx "odroidn2plus" "/etc/opt/board.txt" >/dev/null;`
	then echo Binding eMMC. && odroid_bind_emmc && echo Done.;
fi

echo
echo Partitioning.
if `grep -Fx "lepotato" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_partition_emmc > /dev/null 2>&1;
fi
if `grep -Fx "odroidc4" "/etc/opt/board.txt" >/dev/null;`
	then odroid_partition_emmc > /dev/null 2>&1;
fi
if `grep -Fx "odroidn2" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_partition_emmc > /dev/null 2>&1;
fi
if `grep -Fx "odroidn2plus" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_partition_emmc > /dev/null 2>&1;
fi
if `grep -Fx "nanopi" "/etc/opt/board.txt" >/dev/null;`
	then nanopi_partition_emmc > /dev/null 2>&1;
fi
if `grep -Fx "nanopc" "/etc/opt/board.txt" >/dev/null;`
	then nanopc_partition_emmc > /dev/null 2>&1;
fi
echo Done.

echo
echo -e "Please be patient as the root filesystem"
echo -e "is transferred over to the eMMC module."
transfer_to_emmc
sleep 1s
clear

echo
echo Writing u-boot.
if `grep -Fx "lepotato" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_flash_uboot ;
fi
if `grep -Fx "odroidc4" "/etc/opt/board.txt" >/dev/null;`
	then odroid_flash_uboot ;
fi
if `grep -Fx "odroidn2" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_flash_uboot ;
fi
if `grep -Fx "odroidn2plus" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_flash_uboot ;
fi
if `grep -Fx "nanopi" "/etc/opt/board.txt" >/dev/null;`
	then allwinner_flash_uboot ;
fi
if `grep -Fx "nanopc" "/etc/opt/board.txt" >/dev/null;`
	then nanopc_flash_uboot ;
fi
echo Done.

echo
echo Fetching UUID.
if `grep -Fx "lepotato" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_fetch_uuid ;
fi
if `grep -Fx "odroidc4" "/etc/opt/board.txt" >/dev/null;`
	then odroid_fetch_uuid ;
fi
if `grep -Fx "odroidn2" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_fetch_uuid ;
fi
if `grep -Fx "odroidn2plus" "/etc/opt/board.txt" >/dev/null;`
	then amlogic_fetch_uuid ;
fi
if `grep -Fx "nanopi" "/etc/opt/board.txt" >/dev/null;`
	then nanopi_fetch_uuid ;
fi
if `grep -Fx "nanopc" "/etc/opt/board.txt" >/dev/null;`
	then nanopc_fetch_uuid ;
fi
echo Done.

echo
echo Setting up boot.
source /etc/opt/root-id.txt
create_fstab
if `grep -Fx "lepotato" "/etc/opt/board.txt" >/dev/null;`
	then libre_create_extlinux ;
fi
if `grep -Fx "odroidc4" "/etc/opt/board.txt" >/dev/null;`
	then odroidc4_create_extlinux ;
fi
if `grep -Fx "odroidn2" "/etc/opt/board.txt" >/dev/null;`
	then odroidn2_create_extlinux ;
fi
if `grep -Fx "odroidn2plus" "/etc/opt/board.txt" >/dev/null;`
	then odroidn2plus_create_extlinux ;
fi
if `grep -Fx "nanopi" "/etc/opt/board.txt" >/dev/null;`
	then nanopi_create_extlinux ;
fi
if `grep -Fx "nanopc" "/etc/opt/board.txt" >/dev/null;`
	then nanopc_create_extlinux ;
fi
echo Done.

echo 
echo Unmounting eMMC.
rm -fdr /etc/opt/root-pid.txt /etc/opt/root-id.txt
rm -fdr /mnt/mnt/*
umount /mnt
rm -fdr /mnt/*
echo Done.
echo
echo You may now power down and remove the sdcard.
