#!/bin/bash
GRN="\e[1;32m"
YLW="\e[1;33m"
FIN="\e[0m"

### RUN AS ROOT
run_as_root(){
if [ "$USER" != "root" ]; then
        echo "Please run this as root or with sudo privileges."
        exit 1
fi
}

confirm(){
echo -e "${YLW}This script requires a internet connection."
echo -e "If not connected to the webs, than say no${FIN} ..."
echo -e ""
read -p "Continue (y/n)?" choice
case "$choice" in 
  y|Y ) echo && echo -e "${GRN}Confirmed${FIN}!";;
  n|N ) echo && echo -e "${YLW}You have chosen${FIN}... ${YLW}wisely${FIN}." && exit 0;;
  * ) echo && echo -e "${YLW}Invalid choice${FIN}." && exit 0;;
esac
}

### PROGRESS BAR
check_progressbar(){
DPB="sudo wget -cq https://raw.githubusercontent.com/pyavitz/bash_progress_bar/master/progress_bar.sh -P /etc/opt/"
MPB="sudo mv -f /etc/opt/progress_bar.sh /etc/opt/progressbar.txt"
if [ -e /etc/opt/progressbar.txt ]; then
	:;
else
	$DPB;
	$MPB;
fi
}

### BIND EMMC
libre_bind_emmc(){
echo -n d0074000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/unbind
sleep 1
echo -n d0074000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/bind
sleep 1
lsblk -dno NAME,SIZE
}

odroid_bind_emmc(){
echo -n ffe07000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/unbind
sleep 1
echo -n ffe07000.mmc > /sys/bus/platform/drivers/meson-gx-mmc/bind
sleep 1
lsblk -dno NAME,SIZE
}

renegade_bind_emmc(){
echo -n ff520000.mmc > /sys/bus/platform/drivers/dwmmc_rockchip/unbind
sleep 1
echo -n ff520000.mmc > /sys/bus/platform/drivers/dwmmc_rockchip/bind
sleep 1
lsblk -dno NAME,SIZE
}

### PARTITION DRIVE
partition(){
# allwinner
if [[ `grep -w 'BOARD="nanopi"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk2";
	OFFSET="2048";
fi
# amlogic
if [[ `grep -w 'BOARD="lepotato"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk1";
	OFFSET="2248";
fi
if [[ `grep -w 'BOARD="odroidc4"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk1";
	OFFSET="2248";
fi
if [[ `grep -w 'BOARD="odroidn2"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk0";
	OFFSET="2248";
fi
if [[ `grep -w 'BOARD="odroidn2plus"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk0";
	OFFSET="2248";
fi
if [[ `grep -w 'BOARD="radxazero"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk1";
	OFFSET="2248";
fi
# rockchip
if [[ `grep -w 'BOARD="nanopc"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk2";
	OFFSET="32767";
fi
if [[ `grep -w 'BOARD="renegade"' "/etc/opt/board.txt"` ]]; then
	MMC="/dev/mmcblk1";
	OFFSET="32767";
fi
dd if=/dev/zero of=${MMC} bs=512 count=1
fdisk ${MMC} <<EOF
o
n
p
1
${OFFSET}
a
t
b
4101561
p
w
EOF

partprobe ${MMC}
echo 'y' | mkfs.ext4 -L ROOTFS ${MMC}p1
mount ${MMC}p1 /mnt
sync
umount /mnt
mount -o defaults,noatime ${MMC}p1 /mnt
bash growpart ${MMC} 1
sleep 1s
resize2fs ${MMC}p1
}

### RSYNC
transfer(){
cd /
rsync -apvx --progress --stats --human-readable . /mnt > /dev/null 
}

transfer_to_emmc(){
source /etc/opt/progressbar.txt
enable_trapping
setup_scroll_area
for i in {0..100}
do
	if [ $i = 0 ]; then
		block_progress_bar $i
	else
		transfer
		draw_progress_bar $i
	fi
done
destroy_scroll_area
}

### FETCH UUID
fetch_uuid(){
echo 'ROOT_UUID="' > root1
blkid -o export -- ${MMC}p1 | sed -ne 's/^UUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-id.txt
rm -f root1 root2 root3

echo 'ROOT_PARTUUID="' > root1
blkid -o export -- ${MMC}p1 | sed -ne 's/^PARTUUID=//p' > root2
echo '"' > root3
paste -d '\0' root1 root2 root3  > /etc/opt/root-pid.txt
rm -f root1 root2 root3
}

### FSTAB
create_fstab(){
rm -f /mnt/etc/fstab
tee /mnt/etc/fstab <<EOF
UUID=${ROOT_UUID}	/		ext4	defaults,noatime,nodiratime,commit=600,errors=remount-ro 0 1
tmpfs		/tmp	tmpfs	defaults,nosuid 0 0
EOF
}

### EXTLINUX
create_extlinux(){
source /etc/opt/board.txt > /dev/null 2>&1
FDT="/boot/${FAMILY}/${DTB}.dtb"
FDTDIR="/boot/${FAMILY}/"
CMDLINE="append earlyprintk ${CONSOLE} rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 fsck.repair=yes ${EXTRA} loglevel=1 init=/sbin/init"
mkdir -p /mnt/boot/extlinux
rm -f /mnt/boot/extlinux/extlinux.conf
tee /mnt/boot/extlinux/extlinux.conf <<EOF
label default
	kernel /boot/Image
	initrd /boot/uInitrd
	fdtdir ${FDTDIR}
	fdt ${FDT}
	#fdtoverlays
	${CMDLINE}
EOF
if [[ `grep -w 'BOARD="radxazero"' "/etc/opt/board.txt"` ]]; then
	sed -i 's/#fdtoverlays/fdtoverlays ..\/amlogic\/overlays\/meson-g12a-opp-2ghz.dtbo/g' /mnt/boot/extlinux/extlinux.conf;
fi
}


### WRITE UBOOT
# allwinner
allwinner_flash_uboot(){
dd if=/usr/lib/u-boot/u-boot-sunxi-with-spl.bin of=${MMC} conv=fsync bs=1024 seek=8
sync
}

# amlogic
amlogic_flash_uboot(){
dd if=/usr/lib/u-boot/u-boot.bin of=${MMC} bs=512 seek=1
sync
}

# rockchip
rockchip_flash_uboot(){
dd if=/usr/lib/u-boot/idbloader.bin of=${MMC} seek=64
dd if=/usr/lib/u-boot/u-boot.itb of=${MMC} seek=16384
sync
}

### THE MAGIC
run_as_root
echo ""
confirm
check_progressbar

if [[ `grep -w 'BOARD="lepotato"' "/etc/opt/board.txt"` ]]; then
	echo ""
	echo "Binding eMMC ...";
	libre_bind_emmc;
	echo "Done.";
fi
if [[ `grep -w 'FAMILY_EXT="odroid"' "/etc/opt/board.txt"` ]]; then
	echo ""
	echo "Binding eMMC ...";
	odroid_bind_emmc;
	echo "Done.";
fi
if [[ `grep -w 'BOARD="renegade"' "/etc/opt/board.txt"` ]]; then
	echo ""
	echo "Binding eMMC ...";
	renegade_bind_emmc;
	echo "Done.";
fi

echo ""
echo "Partitioning ..."
partition > /dev/null 2>&1
echo "Done."

echo ""
echo -e "Please be patient as the root filesystem"
echo -e "is transferred over to the eMMC module."
transfer_to_emmc
sleep 1s
clear -x

echo ""
echo "Writing u-boot ..."
if [[ `grep -w 'FAMILY="allwinner"' "/etc/opt/board.txt"` ]]; then
	allwinner_flash_uboot;
fi
if [[ `grep -w 'FAMILY="amlogic"' "/etc/opt/board.txt"` ]]; then
	amlogic_flash_uboot;
fi
if [[ `grep -w 'FAMILY="rockchip"' "/etc/opt/board.txt"` ]]; then
	rockchip_flash_uboot;
fi
echo "Done."

echo ""
echo "Fetching UUID ..."
fetch_uuid
echo "Done."

echo ""
echo "Setting up boot ..."
source /etc/opt/root-id.txt
source /etc/opt/root-pid.txt
create_fstab
create_extlinux
echo "Done."

echo ""
echo "Unmounting eMMC ..."
rm -f {/etc/opt/root-pid.txt,/etc/opt/root-id.txt}
rm -fdr /mnt/mnt/*
umount /mnt
rm -fdr /mnt/*
echo "Done."
echo ""
echo "You may now power down and remove the sdcard."
