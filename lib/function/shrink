#!/bin/bash

# shrink image
shrink(){
if [[ "$BOARD" == "odroidm1" ]] && [ $petitboot -eq 0 ]; then
	:;
else
	chmod +x scripts/shrink;
	scripts/shrink -s ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img;
fi
echo ""
if [[ "$P_VALUE" == "p1" ]]; then
	p1_kpartx;
fi
if [[ "$P_VALUE" == "p2" ]]; then
	p2_kpartx;
fi
}

find_p1_partuuid(){
if [ -e part-uuid.txt ]; then
	rm -f part-uuid.txt;
fi
ROOTFS="${LOOP1}"
ROOT_PARTUUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^PARTUUID=//p')
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' > part-uuid.txt

source part-uuid.txt
}

find_p2_partuuid(){
if [ -e part-uuid.txt ]; then
	rm -f part-uuid.txt;
fi
ROOTFS="${LOOP2}"
ROOT_UUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^UUID=//p')
ROOT_PARTUUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^PARTUUID=//p')
echo ROOT_UUID='"'$ROOT_UUID'"' > part-uuid.txt
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' >> part-uuid.txt

source part-uuid.txt
}

p1_kpartx(){
if [[ "$P_ROOTFS" == "p2" ]]; then
	echo 'LOOP0="/dev/mapper/' > kpart1;
	echo 'LOOP1="/dev/mapper/' >> kpart1;
else
	echo 'LOOP1="/dev/mapper/' > kpart1;
fi
IMAGE_FILE="${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img"
kpartx="$(kpartx -av $IMAGE_FILE)"
echo "$kpartx"
if [[ `grep -w "VERSION_CODENAME=jammy" "/etc/os-release"` ]]; then
	# snapd woes; grep for higher loop numbers
	grep -o 'loop[0-9]\+p.' <<<"$kpartx" > kpart2;
else
	grep -o 'loop.p.' <<<"$kpartx" > kpart2;
fi
if [[ "$P_ROOTFS" == "p2" ]]; then
	echo '"' > kpart3;
	echo '"' >> kpart3;
else
	echo '"' > kpart3;
fi
paste -d '\0' kpart1 kpart2 kpart3 > kpart.txt
rm -f {kpart1,kpart2,kpart3}
source kpart.txt
ROOTFS="${LOOP1}"
mkdir -p p1
sleep 1s
mount "${ROOTFS}" p1
find_p1_partuuid
echo ""
p1_extlinux
sleep 1s
echo ""
e4defrag -c p1
echo ""
umount p1
rm -fdr p1
kpartx -d ${IMAGE_FILE}
rm -f kpart.txt
}

p2_kpartx(){
echo 'LOOP1="/dev/mapper/' > kpart1
echo 'LOOP2="/dev/mapper/' >> kpart1
IMAGE_FILE="${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img"
kpartx="$(kpartx -av $IMAGE_FILE)"
echo "$kpartx"
if [[ `grep -w "VERSION_CODENAME=jammy" "/etc/os-release"` ]]; then
	# snapd woes; grep for higher loop numbers
	grep -o 'loop[0-9]\+p.' <<<"$kpartx" > kpart2;
else
	grep -o 'loop.p.' <<<"$kpartx" > kpart2;
fi
echo '"' > kpart3
echo '"' >> kpart3
paste -d '\0' kpart1 kpart2 kpart3 > kpart.txt
rm -f {kpart1,kpart2,kpart3}
source kpart.txt
BOOT="${LOOP1}"
mkdir -p p1
sleep 1s
mount "${BOOT}" p1
find_p2_partuuid
echo ""
if [ $petitboot -eq 1 ]; then
	odroid_bootcmd;
else
	if [[ "$BOARD" == "raspi4" ]]; then
		rm -f p1/extlinux/extlinux.conf;
		rm -f p1/config.txt;
		p2_extlinux;
		config-txt > /dev/null 2>&1;
	else
		default_bootcmd;
	fi
fi
echo ""
sleep 1s
umount p1
rm -fdr p1
kpartx -d ${IMAGE_FILE}
rm -f kpart.txt
}
