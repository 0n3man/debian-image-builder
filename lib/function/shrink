# shrink image
shrink(){
chmod +x scripts/shrink
scripts/shrink -s ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img
echo ""
if [[ `grep -w 'P_VALUE="p1"' "board.txt"` ]]; then
	p1_kpartx;
fi
if [[ `grep -w 'P_VALUE="p2"' "board.txt"` ]]; then
	p2_kpartx;
fi
}

p1_kpartx(){
echo 'LOOP1="/dev/mapper/' > kpart1
IMAGE_FILE="${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img"
kpartx="$(kpartx -av $IMAGE_FILE)"
echo "$kpartx"
grep -o 'loop[09]\+p.' <<<"$kpartx" > kpart2
echo '"' > kpart3
paste -d '\0' kpart1 kpart2 kpart3 > kpart.txt
rm -f {kpart1,kpart2,kpart3}
source kpart.txt
ROOTFS="${LOOP1}"
mkdir -p p1
sleep 1s
mount "${ROOTFS}" p1
find_p1_partuuid
echo ""
p1_extlinux
sleep 1s
echo ""
e4defrag -c p1
echo ""
umount p1
rm -fdr p1
kpartx -d ${IMAGE_FILE}
rm -f kpart.txt
echo ""
}

p2_kpartx(){
echo 'LOOP1="/dev/mapper/' > kpart1
echo 'LOOP2="/dev/mapper/' >> kpart1
IMAGE_FILE="${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img"
kpartx="$(kpartx -av $IMAGE_FILE)"
echo "$kpartx"
grep -o 'loop[0-9]\+p.' <<<"$kpartx" > kpart2
echo '"' > kpart3
echo '"' >> kpart3
paste -d '\0' kpart1 kpart2 kpart3 > kpart.txt
rm -f {kpart1,kpart2,kpart3}
source kpart.txt
BOOT="${LOOP1}"
mkdir -p p1
sleep 1s
mount "${BOOT}" p1
rm -f p1/extlinux/extlinux.conf
rm -f p1/config.txt
find_p2_partuuid
echo ""
p2_extlinux
bcm2711_config > /dev/null 2>&1
echo ""
sleep 1s
umount p1
rm -fdr p1
kpartx -d ${IMAGE_FILE}
rm -f kpart.txt
echo ""
}

find_p1_partuuid(){
if [ -e part-uuid.txt ]; then
	rm -f part-uuid.txt;
fi
ROOTFS="${LOOP1}"
ROOT_PARTUUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^PARTUUID=//p')
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' > part-uuid.txt

source part-uuid.txt
}

find_p2_partuuid(){
if [ -e part-uuid.txt ]; then
	rm -f part-uuid.txt;
fi
ROOTFS="${LOOP2}"
ROOT_PARTUUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^PARTUUID=//p')
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' > part-uuid.txt

source part-uuid.txt
}
