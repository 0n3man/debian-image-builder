# shrink image
shrink(){
chmod +x scripts/shrink
scripts/shrink -s ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img
echo ""
create_extlinux
}

create_extlinux(){
echo 'LOOP1="/dev/mapper/' > kpart1
IMAGE_FILE="${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img"
kpartx="$(kpartx -av $IMAGE_FILE)"
echo "$kpartx"
grep -o 'loop.p.' <<<"$kpartx" > kpart2
echo '"' > kpart3
paste -d '\0' kpart1 kpart2 kpart3 > kpart.txt
rm -f {kpart1,kpart2,kpart3}
source kpart.txt
ROOTFS="${LOOP1}"
mkdir -p p1
sleep 1s
mount "${ROOTFS}" p1
new_partuuid
echo ""
extlinux
sleep 1s
echo ""
e4defrag -c p1
echo ""
umount p1
rm -fdr p1
kpartx -d ${IMAGE_FILE}
rm -f kpart.txt
echo ""
}

new_partuuid(){
rm -f part-uuid.txt
ROOTFS="${LOOP1}"
ROOT_PARTUUID=$(blkid -o export -- ${ROOTFS} | sed -ne 's/^PARTUUID=//p')
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' > part-uuid.txt

source part-uuid.txt
}

extlinux(){
if [[ `grep -w "tritium" "board.txt"` ]]; then
	tritium_extlinux;
fi
if [[ `grep -w "nanopi" "board.txt"` ]]; then
	nanopi_extlinux;
fi
if [[ `grep -w "pine64" "board.txt"` ]]; then
	pine64_extlinux;
fi
if [[ `grep -w "opir1" "board.txt"` ]]; then
	opir1_extlinux;
fi
if [[ `grep -w "lepotato" "board.txt"` ]]; then
	lepotato_extlinux;
fi
if [[ `grep -w "radxazero" "board.txt"` ]]; then
	radxazero_extlinux;
fi
if [[ `grep -w "odroidc4" "board.txt"` ]]; then
	odroidc4_extlinux;
fi
if [[ `grep -w "odroidhc4" "board.txt"` ]]; then
	odroidhc4_extlinux;
fi
if [[ `grep -w "odroidn2" "board.txt"` ]]; then
	odroidn2_extlinux;
fi
if [[ `grep -w "odroidn2plus" "board.txt"` ]]; then
	odroidn2plus_extlinux;
fi
if [[ `grep -w "rock64" "board.txt"` ]]; then
	rock64_extlinux;
fi
if [[ `grep -w "renegade" "board.txt"` ]]; then
	renegade_extlinux;
fi
if [[ `grep -w "rockpro64" "board.txt"` ]]; then
	rockpro64_extlinux;
fi
if [[ `grep -w "nanopc" "board.txt"` ]]; then
	nanopc_extlinux;
fi
}
