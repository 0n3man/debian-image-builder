#!/bin/bash

# ATF
arm_trusted_firmware (){
TAG="lts-v2.10.2"
if [[ "$FAMILY_EXT" =~ ^(imx8|sun50i|rk3328|rk3399)$ ]]; then
	atf_download; cd arm-trusted-firmware; atf_patching; echo ""
	if [ $CROSSCOMPILE -eq 1 ]; then
		echo -e "${GRN}  CC${FIN}"
		echo -e "  GCC     ${CROSS_COMPILE}${COMPILER}"
	else
		echo -e "${GRN}  NC${FIN}"
		echo -e "  GCC     ${COMPILER}"
	fi
	export ARCH=${ARCH}
	ubuild "${ATF_EXT}"
	cd ..
	if [[ -f "u-boot-${UBOOT_VERSION}.tar.gz" ]]; then echo ""; fi 
fi
}

atf_download (){
if [[ `wget -S --spider https://github.com/ARM-software/arm-trusted-firmware/blob/master/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	if [[ -d "arm-trusted-firmware" ]] && [[ -d "arm-trusted-firmware.backup" ]]; then
		echo -en "${WHT}arm trusted firmware${FIN}"
		echo -en " ${PNK}[${FIN}${YLW}cleaning${FIN}${PNK}]${FIN}"
		rm -fdr arm-trusted-firmware
		echo -en " ${PNK}[${FIN}${WHT}restoring${FIN}${PNK}]${FIN}"
		mv -f arm-trusted-firmware.backup arm-trusted-firmware
		cd arm-trusted-firmware
		#git config pull.rebase false
		#git config advice.detachedHead false
		git checkout ${TAG} &> /dev/null
		make realclean > /dev/null 2>&1
		cd ..
		echo -en " ${PNK}[${FIN}${WHT}creating backup${FIN}${PNK}]${FIN}"
		cp -r arm-trusted-firmware arm-trusted-firmware.backup
		echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
	else
		if [[ -d "arm-trusted-firmware" ]]; then rm -fdr arm-trusted-firmware; fi
		echo -en "${WHT}arm trusted firmware${FIN}"
		echo -en " ${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN}"
		git clone -q -c advice.detachedHead=false https://github.com/ARM-software/arm-trusted-firmware.git -b ${TAG}
		if [[ -d "arm-trusted-firmware" ]]; then
			cd arm-trusted-firmware
			make realclean > /dev/null 2>&1
			cd ..
			echo -en " ${PNK}[${FIN}${WHT}creating backup${FIN}${PNK}]${FIN}"
			cp -r arm-trusted-firmware arm-trusted-firmware.backup
			echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
		else
			echo -e " ${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"
			exit 0
		fi
	fi
fi
}

report_atf_error (){
echo "Missing ${ATF_PLAT} bl31 blob. Please report build errors."
echo ""
exit 0
}

atf_bl31 (){ # place bl31 file.
if [[ "$SERIES" =~ ^(sun50i-a64|sun50i-h5|sun50i-h6|sun50i-h618)$ ]]; then
	if [[ -f "../arm-trusted-firmware/build/${ATF_PLAT}/debug/bl31.bin" ]]; then
		cp ../arm-trusted-firmware/build/${ATF_PLAT}/debug/bl31.bin bl31.bin
		cp ../arm-trusted-firmware/build/${ATF_PLAT}/debug/bl31.bin atf-bl31
	else
		report_atf_error
	fi
	if [[ "$SERIES" =~ ^(sun50i-a64|sun50i-h5|sun50i-h6)$ ]]; then
		if [[ "$HOST_CODENAME" == "bullseye" ]]; then
			cp ../../files/boot/crust/${SERIES}-scp.bin scp.bin
		else
			if [[ -f "../crust/build/scp/scp.bin" ]]; then
				cp ../crust/build/scp/scp.bin scp.bin
			else
				report_crust_error
			fi
		fi
	fi
fi
if [[ "$FAMILY_EXT" == "imx8" ]]; then
	if [[ -f "../arm-trusted-firmware/build/${ATF_PLAT}/release/bl31.bin" ]]; then
		cp ../arm-trusted-firmware/build/${ATF_PLAT}/release/bl31.bin bl31.bin
	else
		report_atf_error
	fi
	cp ../firmware-imx-8.17/firmware/ddr/synopsys/lpddr4*.bin .
	cp ../firmware-imx-8.17/firmware/hdmi/cadence/signed_hdmi_imx8m.bin .
	cp ../firmware-imx-8.17/firmware/hdmi/cadence/signed_dp_imx8m.bin .
fi
if [[ "$FAMILY" == "rockchip" ]]; then
	if [[ "$FAMILY_EXT" == "rk3328" || "$FAMILY_EXT" == "rk3399" ]]; then
		if [[ -f "../arm-trusted-firmware/build/${ATF_PLAT}/release/bl31/bl31.elf" ]]; then
			cp ../arm-trusted-firmware/build/${ATF_PLAT}/release/bl31/bl31.elf bl31.elf
			cp ../arm-trusted-firmware/build/${ATF_PLAT}/release/bl31/bl31.elf atf-bl31
		else
			report_atf_error
		fi
	fi
	if [[ "$FAMILY_EXT" == "rk356x" ]]; then
		RK35="../../files/boot/rk35"
		if [[ -f "${RK35}/${RKBIN_ELF}" ]] && [[ -f "${RK35}/${RKBIN_RAM}" ]]; then
			cp -f ${RK35}/${RKBIN_ELF} bl31.elf
			cp -f ${RK35}/${RKBIN_ELF} atf-bl31
			cp -f ${RK35}/${RKBIN_RAM} .
			cp -f ${RKBIN_RAM} ram_init.bin
		else
			report_atf_error
		fi
		if [[ "$UBOOT_VERSION" == "v2023.07.02" ]]; then
			#export BL31="bl31.elf"
			export ROCKCHIP_TPL="${RKBIN_RAM}"
		fi
	fi
fi
}
