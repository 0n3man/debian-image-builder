#!/bin/bash

# ATF
arm-trusted-firmware(){
if [[ -e arm-trusted-firmware ]]; then
	echo -en "${WHT}Arm Trusted Firmware${FIN} ";
	echo -en "${PNK}[${FIN}${YLW}found${FIN}${PNK}]${FIN} ";
	cd arm-trusted-firmware;
	echo -en "${PNK}[${FIN}${WHT}cleaning${FIN}${PNK}]${FIN} ";
	make realclean > /dev/null 2>&1;
	git config pull.rebase false;
	echo -en "${PNK}[${FIN}${WHT}pulling${FIN}${PNK}]${FIN} ";
	git pull -q;
	echo_bdone;
else
	echo -en "${WHT}Arm Trusted Firmware${FIN} ";
	echo -en "${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN} ";
	git clone -q https://github.com/ARM-software/arm-trusted-firmware.git;
	cd arm-trusted-firmware;
	echo -en "${PNK}[${FIN}${WHT}cleaning${FIN}${PNK}]${FIN} ";
	make realclean > /dev/null 2>&1;
	echo_bdone;
fi
echo ""
echo -e "${WHT}Compiling ATF${FIN} ..."
if [ $crosscompile -eq 1 ]; then
	echo -e "${GRN}  CC${FIN}";
	export CROSS_COMPILE=${CROSS_COMPILE};
	make -j${CORES} CC=${CROSS} ${ATF_EXT};
else
	echo -e "${GRN}  NC${FIN}";
	export ARCH=${ARCH};
	make -j${CORES} CC=${NATIVE} ${ATF_EXT};
fi
cd ..
echo_done
if [ -f u-boot-${UBOOT_VERSION}.tar.gz ]; then echo ""; else :; fi 
}
