# UBOOT
ARIA2="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0"

uboot-source(){
mkdir -p ${SRC}
cp -f board.txt ${SRC}/
cd ${SRC}
rm -fdr {amlogic-boot-fip-master,blobs/amlogic-u-boot,u-boot}
}

mod_defconfigs(){
# ALLWINNER
# tritium
echo CONFIG_SD_BOOT=y >> configs/libretech_all_h3_cc_h5_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/libretech_all_h3_cc_h5_defconfig
# pine64+
echo CONFIG_SD_BOOT=y >> configs/pine64_plus_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/pine64_plus_defconfig
# nanopi neo
echo CONFIG_SD_BOOT=y >> configs/nanopi_neo_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/nanopi_neo_defconfig
# nanopi m1
echo CONFIG_SD_BOOT=y >> configs/nanopi_m1_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/nanopi_m1_defconfig
# nanopi neo plus2
echo CONFIG_SD_BOOT=y >> configs/nanopi_neo_plus2_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/nanopi_neo_plus2_defconfig
# orangepi r1
echo CONFIG_SD_BOOT=y >> configs/orangepi_r1_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/orangepi_r1_defconfig
# orangepi one
echo CONFIG_SD_BOOT=y >> configs/orangepi_one_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/orangepi_one_defconfig
# orangepi pc
echo CONFIG_SD_BOOT=y >> configs/orangepi_pc_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/orangepi_pc_defconfig
# AMLOGIC
# odroid c4
echo CONFIG_SD_BOOT=y >> configs/odroid-c4_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/odroid-c4_defconfig
# odroid n2
echo CONFIG_SD_BOOT=y >> configs/odroid-n2_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/odroid-n2_defconfig
# le potato
echo CONFIG_SD_BOOT=y >> configs/libretech-cc_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/libretech-cc_defconfig
# radxa zero
echo CONFIG_SD_BOOT=y >> configs/radxa-zero_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/radxa-zero_defconfig
echo CONFIG_LZ4=y >> configs/radxa-zero_defconfig
echo CONFIG_LZO=y >> configs/radxa-zero_defconfig
echo CONFIG_LZMA=y >> configs/radxa-zero_defconfig
# BROADCOM
echo CONFIG_SD_BOOT=y >> configs/rpi_4_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/rpi_4_defconfig
# ROCKCHIP
# rock64
echo CONFIG_SD_BOOT=y >> configs/rock64-rk3328_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/rock64-rk3328_defconfig
# renegade
echo CONFIG_SD_BOOT=y >> configs/roc-cc-rk3328_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/roc-cc-rk3328_defconfig
# rockpro64
sed -i 's/CONFIG_USE_PREBOOT=y/# CONFIG_USE_PREBOOT= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_EHCI_HCD=y/# CONFIG_USB_EHCI_HCD= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_EHCI_GENERIC=y/# CONFIG_USB_EHCI_GENERIC= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_XHCI_HCD=y/# CONFIG_USB_XHCI_HCD= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_XHCI_DWC3=y/# CONFIG_USB_XHCI_DWC3= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_DWC3=y/# CONFIG_USB_DWC3= is not set/g' configs/rockpro64-rk3399_defconfig
sed -i 's/CONFIG_USB_DWC3_GENERIC=y/# CONFIG_USB_DWC3_GENERIC= is not set/g' configs/rockpro64-rk3399_defconfig
echo CONFIG_SD_BOOT=y >> configs/rockpro64-rk3399_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/rockpro64-rk3399_defconfig
echo CONFIG_OF_LIBFDT_OVERLAY=y >> configs/rockpro64-rk3399_defconfig
# nanopc-t4
echo CONFIG_MISC=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_PHY_ROCKCHIP_INNO_USB2=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_PHY_ROCKCHIP_TYPEC=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_USB_DWC3_GENERIC=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_SD_BOOT=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_EXT4_WRITE=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_DISPLAY_ROCKCHIP_EDP=y >> configs/nanopc-t4-rk3399_defconfig
echo CONFIG_OF_LIBFDT_OVERLAY=y >> configs/nanopc-t4-rk3399_defconfig
}

uboot_search(){
if [[ `wget -S --spider https://github.com/pyavitz/debian-image-builder/releases/download/u-boot-${UBOOT_VERSION}/u-boot-${UBOOT_VERSION}.tar.gz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${ARIA2} https://github.com/pyavitz/debian-image-builder/releases/download/u-boot-${UBOOT_VERSION}/u-boot-${UBOOT_VERSION}.tar.gz
	echo_bdone;
else
	uboot_searching;
fi
}

uboot_searching(){
if [[ `wget -S --spider https://source.denx.de/u-boot/u-boot/-/archive/${UBOOT_VERSION}/u-boot-${UBOOT_VERSION}.tar.gz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${ARIA2} https://source.denx.de/u-boot/u-boot/-/archive/${UBOOT_VERSION}/u-boot-${UBOOT_VERSION}.tar.gz
	echo_bdone;
else
	echo
	echo -e "${WHT}It appears the version you selected is not available${FIN}?"
	exit;
fi
}

u-boot(){
if [[ "$ARCH" == "arm" ]]; then
	:;
else
	echo ""
fi
echo_duboot
if [[ -e u-boot-${UBOOT_VERSION}.tar.gz ]]; then
	echo -e "${YLW}u-boot-${UBOOT_VERSION}.tar.gz found${FIN}.";
else
	uboot_search;
fi

# EXTRACT AND SETUP
echo ""
if [[ "$FAMILY" == "amlogic" ]]; then
	echo_extracts;
else
	echo_extract;
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ -e amlogic-boot-fip-master.tar.gz ]]; then
		pv amlogic-boot-fip-master.tar.gz | tar -xzf - -C .;
	fi
fi
pv u-boot-${UBOOT_VERSION}.tar.gz | tar -xzf - -C .
mv -f u-boot-${UBOOT_VERSION} u-boot
if [[ "$FAMILY" == "allwinner" ]]; then
	if [[ "$ARCH" == "arm" ]]; then
		:;
	else
		cp arm-trusted-firmware/build/${ATF_PLAT}/debug/bl31.bin u-boot/bl31.bin;
	fi
fi
if [[ "$FAMILY" == "rockchip" ]]; then
	cp arm-trusted-firmware/build/${ATF_PLAT}/release/bl31/bl31.elf u-boot/bl31.elf;
fi
cp board.txt u-boot/
cd u-boot
if [[ "$FAMILY" == "amlogic" ]]; then
	for i in ../${AMLOGIC}/uboot/*.patch; do patch -p1 < $i; done;
fi
if [[ "$BOARD" == "odroidn2plus" ]]; then
	for i in ../${ON2PUBOOT}/*.patch; do patch -p1 < $i; done;
fi
if [[ "$BOARD" == "nanopc" ]]; then
	for i in ../${RKUBOOT}/*.patch; do patch -p1 < $i; done;
else
	if [[ "$BOARD" == "rockpro64" ]]; then
		for i in ../${RKUBOOT}/*.patch; do patch -p1 < $i; done;
	fi
fi
if [[ "$BOARD" == "radxazero" ]]; then
	if [[ `grep -w "VERSION = 2021" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 10" "Makefile"` ]]; then
		for i in ../${RZUBOOT}/*.patch; do patch -p1 < $i; done;
	else
		:;
	fi
fi
echo ""
export ARCH=${ARCH}
mod_defconfigs
# MAKE DEFCONFIG
if [ $crosscompile -eq 1 ]; then
	echo -e "${GRN}  CC${FIN}"
	make -j${CORES} CC=${CROSS} CROSS_COMPILE=${CROSS_COMPILE} ${UBOOT_DEFCONFIG};
else
	echo -e "${GRN}  NC${FIN}"
	make -j${CORES} CC=${NATIVE} ${UBOOT_DEFCONFIG};
fi

# MENUCONFIG
if [ $menuconfig -eq 1 ]; then
	if [ $crosscompile -eq 1 ]; then
		echo -e "${GRN}  CC${FIN}"
		make -j${CORES} CC=${CROSS} CROSS_COMPILE=${CROSS_COMPILE} menuconfig;
	else
		echo -e "${GRN}  NC${FIN}"
		make -j${CORES} CC=${NATIVE} menuconfig;
	fi
fi

# COMPILE
echo
echo_cuboot
if [ $crosscompile -eq 1 ]; then
	echo -e "${GRN}  CC${FIN}"
	make -j${CORES} CC=${CROSS} CROSS_COMPILE=${CROSS_COMPILE};
else
	echo -e "${GRN}  NC${FIN}"
	make -j${CORES} CC=${NATIVE};
fi
}

# ALLWINNER RUN BUILD
allwinner-uboot-string(){
uboot-source
if [[ "$ARCH" == "arm" ]]; then
	:;
else
	arm-trusted-firmware;
fi
u-boot
if [ -e u-boot-sunxi-with-spl.bin ]; then
	mkdir -p ../../${OUTPUT}
	cp -f u-boot-sunxi-with-spl.bin ../../${OUTPUT}/
	cp -f tools/mkimage ../../${OUTPUT}/
	echo_done
	echo "";
else
	echo "Something went wrong? Please report."
	echo ""
	exit;
fi
}

# AMLOGIC RUN BUILD
amlogic-uboot-string(){
uboot-source
amlogic-boot-fips
u-boot
$RUN_FIP
if [ -e fip/u-boot.bin ]; then
	mkdir -p ../../${OUTPUT}
	cp -f fip/u-boot.bin ../../${OUTPUT}
	cp -f fip/u-boot.bin.sd.bin ../../${OUTPUT}
	cp -f tools/mkimage ../../${OUTPUT}
	echo_done
	echo "";
else
	echo "Something went wrong? Please report."
	echo ""
	exit;
fi
}

# BROADCOM RUN BUILD
bcm2711-uboot-string(){
uboot-source
u-boot
if [ -e u-boot.bin ]; then
	mkdir -p ../../${OUTPUT}
	cp -f u-boot.bin ../../${OUTPUT}/
	echo_done
	echo "";
else
	echo "Something went wrong? Please report."
	echo ""
	exit;
fi
}

# ROCKCHIP RUN BUILD
rockchip-uboot-string(){
uboot-source
arm-trusted-firmware
u-boot
if [ -e idbloader.img ]; then
	mkdir -p ../../${OUTPUT}
	cp -f idbloader.img ../../${OUTPUT}/idbloader.bin
	cp -f u-boot.itb ../../${OUTPUT}/
	echo_done
	echo "";
else
	echo "Something went wrong? Please report."
	echo ""
	exit;
fi
}
