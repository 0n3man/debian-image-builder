#!/bin/bash
# LINUX KERNEL VARIABLES AND FUNCTIONS

DOWNLOAD="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"

sources_dir (){
mkdir -p ${SRC}
cp -f board.txt ${SRC}/
cd ${SRC}
}

report_dir_error (){
echo "NOTICE: Directory ${KERNEL}-${VERSION} is MIA. Please make a report."
echo ""
exit 0
}

report_tarball_error (){
echo "NOTICE: Tarball ${KERNEL}-${VERSION} is MIA. Please make a report."
echo ""
exit 0
}

# mainline
downloading (){
KERNELORG="https://git.kernel.org/torvalds/t/"
if [[ -f "${KERNEL}-${VERSION}.tar.gz" ]] || \
	[[ `wget -S --spider ${KERNELORG}${KERNEL}-${VERSION}.tar.gz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	download
	extract
else
	search
fi
}

# lts / stable
search (){
RELEASE=`echo "$VERSION" | sed 's@^[^0-9]*\([0-9]\+\).*@\1@'`
KERNELORG="https://cdn.kernel.org/pub/linux/kernel/v${RELEASE}.x/"
if [[ -f "${KERNEL}-${VERSION}.tar.xz" ]] || \
	[[ `wget -S --spider ${KERNELORG}${KERNEL}-${VERSION}.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	download_stable
	extract_stable
else
	search_github
fi
}

download (){
if  [[ -f "${KERNEL}-${VERSION}.tar.gz" ]]; then
	:;
else
	echo -e "${WHT}Downloading ${KERNEL}-${VERSION}${FIN} ..."
	${DOWNLOAD} ${KERNELORG}${KERNEL}-${VERSION}.tar.gz
	echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
fi
extra_wireless
}

download_stable (){
if [[ -f "${KERNEL}-${VERSION}.tar.xz" ]]; then
	:;
else
	echo -e "${WHT}Downloading ${KERNEL}-${VERSION}${FIN} ..."
	${DOWNLOAD} ${KERNELORG}${KERNEL}-${VERSION}.tar.xz
	echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
fi
extra_wireless
}

extract (){
echo ""
if [[ -f "${KERNEL}-${VERSION}.tar.gz" ]]; then
	echo_extract
	pv ${KERNEL}-${VERSION}.tar.gz | tar -xzf - -C .
else
	report_tarball_error
fi
}

extract_stable (){
echo ""
if [[ -f "${KERNEL}-${VERSION}.tar.xz" ]]; then
	echo_extract
	pv ${KERNEL}-${VERSION}.tar.xz | tar -xJ ${KERNEL}-${VERSION}
else
	report_tarball_error
fi
}

setup (){
sleep 1s
if [[ -d "${KERNEL}-${VERSION}" ]]; then
	cd ${KERNEL}-${VERSION}
	if [[ "$BOARD" == "orangepir1" ]]; then rtl8189es; fi
	if [[ "$FAMILY" == "broadcom" ]]; then rpi_firmware; fi
	export ARCH=${ARCH}
	# remove builddeb and mkdebian scripts
	rm -f scripts/package/{builddeb,mkdebian}
	# add custom builddeb and mkdebian scripts
	cp -fr ../../packaging/{builddeb,mkdebian} scripts/package/
	chmod +x scripts/package/{builddeb,mkdebian}
else
	report_dir_error
fi
}

cconfig (){
echo_cconfig
if [[ -f "../${DEF}/${MYCONFIG}" ]]; then
	cp -f ../${DEF}/${MYCONFIG} arch/${ARCH}/configs/
else
	echo ""
	echo -e "${MYCONFIG} was not found."
	echo -e "Check that the name is correct and in the correct location."
	echo -e "If you believe you are receiving this in error, please report it."
	read -p "Press enter to continue."
	exit 1
fi
kbuild "${MYCONFIG}"
echo ""
}

bconfig (){
echo_defconfig
if [[ -f "../${DEF}/${LINUX_DEFCONFIG}" ]]; then
	cp -f ../${DEF}/${LINUX_DEFCONFIG} arch/${ARCH}/configs/
else
	echo ""
	echo -e "${LINUX_DEFCONFIG} was not found."
	echo -e "Check that the name is correct and in the correct location."
	echo -e "If you believe you are receiving this in error, please report it."
	read -p "Press enter to continue."
	exit 1
fi
# odroid defconfig for linux 5.15
#if [[ "$FAMILY_EXT" == "odroid" ]] && [[ "$LINUX_VERSION" == "5.15" ]]; then
#	rm -f arch/${ARCH}/configs/${LINUX_DEFCONFIG}
#	cp -f ../${DEF}/odroid-lts_defconfig arch/${ARCH}/configs/${LINUX_DEFCONFIG}
#fi
# lib/function/wireless
enable_wireless_module
# lib/function/modconfig
linux_configs
kbuild "${LINUX_DEFCONFIG}"
echo ""
}

save_defconfig (){
if [[ -f "defconfig" ]]; then
	echo ""
	mkdir -p ../../$OUTPUT/
	# minimal
	cp -f defconfig ../../$OUTPUT/${BOARD}_defconfig
	# full
	cp -f .config ../../$OUTPUT/${BOARD}-config_defconfig
	# path to files
	ls -ls ../../$OUTPUT/${BOARD}_defconfig | sed 's/..\/..\///g'
	ls -ls ../../$OUTPUT/${BOARD}-config_defconfig | sed 's/..\/..\///g'
fi
}

menuconfig (){
echo ""
echo_menuconfig
sleep .50
kbuild "menuconfig"
sleep .25
kbuild "savedefconfig"
echo "# ${DEFAULT_MOTD} defconfig saved."
options=("Continue" "Quit")
select opt in "${options[@]}"
do
	case $opt in
		"Continue")
			save_defconfig
			break
			;;
		"Quit")
			save_defconfig
			exit 0
			;;
		*) echo "invalid option $REPLY";;
	esac
done
}

builddeb (){
if [ $CROSSCOMPILE -eq 1 ]; then echo -e "${GRN}  CC${FIN}"; else echo -e "${GRN}  NC${FIN}"; fi
echo ${BUILD_VERSION} > .version
echo 'y' | kbuild "KBUILD_BUILD_USER=${KBUSER} KBUILD_BUILD_HOST=${KBHOST} bindeb-pkg"
}
