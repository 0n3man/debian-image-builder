# PATCHING
allwinner-sun50i_packaging(){
sed -i 's/packagename=linux-image-$version/packagename=sun50i-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun50i-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=sun50i-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun50i-linux-headers/g' scripts/package/mkdebian
}

allwinner-sun8i_packaging(){
sed -i 's/packagename=linux-image-$version/packagename=sun8i-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun8i-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=sun8i-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun8i-linux-headers/g' scripts/package/mkdebian
}

amlogic_packaging(){
sed -i 's/packagename=linux-image-$version/packagename=meson64-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=meson64-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=meson64-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=meson64-linux-headers/g' scripts/package/mkdebian
}

raspberrypi_packaging(){
sed -i 's/packagename=linux-image-$version/packagename=raspberrypi-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=raspberrypi-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=raspberrypi-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=raspberrypi-linux-headers/g' scripts/package/mkdebian
}

rockchip_packaging(){
sed -i 's/packagename=linux-image-$version/packagename=rockchip64-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=rockchip64-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=rockchip64-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=rockchip64-linux-headers/g' scripts/package/mkdebian
}

user_patches(){
if [[ `ls ../../${USERPATCHES}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../../${USERPATCHES}/*.patch; do patch -p1 < $i; done;
fi
}

# ALLWINNER
allwinner_patching(){
echo ""
echo_patch
patch -p1 < ../../${PACKAGING}/general-packaging.patch
if [[ "$FAMILY_EXT" == "sun8i" ]]; then
	allwinner-sun8i_packaging;
fi
if [[ "$FAMILY_EXT" == "sun50i" ]]; then
	allwinner-sun50i_packaging;
fi
for i in ../../${LINUX_PATCHDIR}/*.patch; do patch -N -p1 < $i; done
user_patches
cp -f ../../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch
echo_done
echo ""
}

# AMLOGIC
misc_patches(){
if [[ "$LINUX_VERSION" == "5.15" ]]; then
	for i in ../../${LINUX_PATCHDIR}/misc/*.patch; do patch -N -p1 < $i; done;
fi
}

amlogic_patching(){
echo ""
echo_patch
patch -p1 < ../../${PACKAGING}/general-packaging.patch
amlogic_packaging
if [[ "$BOARD" == "lepotato" ]]; then
	for i in ../../${LINUX_PATCHDIR}/${BOARD}/*.patch; do patch -N -p1 < $i; done;
fi
if [[ "$BOARD" == "radxazero" ]]; then
	if [[ "$LINUX_VERSION" == "5.15" ]]; then
		for i in ../../${LINUX_PATCHDIR}/${BOARD}/*.patch; do patch -N -p1 < $i; done;
	else
		for i in ../../${LINUX_PATCHDIR}/${BOARD}/edge/*.patch; do patch -N -p1 < $i; done;
	fi
fi
for i in ../../${LINUX_PATCHDIR}/all/*.patch; do patch -N -p1 < $i; done
misc_patches; user_patches;
cp -f ../../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch
echo_done
echo ""
}

## ODROID
odroid_patching(){
echo ""
echo_patch
patch -p1 < ../../${PACKAGING}/general-packaging.patch
amlogic_packaging
if [ -e ../tobetter.txt ]; then
	:;
else
	for i in ../../${LINUX_PATCHDIR}/${FAMILY_EXT}/${LINUX_VERSION}/*.patch; do patch -N -p1 < $i; done;
fi
for i in ../../${LINUX_PATCHDIR}/${FAMILY_EXT}/all/*.patch; do patch -N -p1 < $i; done
for i in ../../${LINUX_PATCHDIR}/all/*.patch; do patch -N -p1 < $i; done
misc_patches; user_patches;
cp -f ../../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo ""
}

## BROADCOM
raspberrypi_patching(){
echo ""
echo_patch
patch -p1 < ../../${PACKAGING}/general-packaging.patch
raspberrypi_packaging
if [[ "$LINUX_VERSION" == "5.15" ]]; then
	for i in ../../${LINUX_PATCHDIR}/*.patch; do patch -N -p1 < $i; done;
else
	for i in ../../${LINUX_PATCHDIR}/edge/*.patch; do patch -N -p1 < $i; done;
fi
user_patches
cp -f ../../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo ""
}

## ROCKCHIP
rockchip_patching(){
echo ""
echo_patch
patch -p1 < ../../${PACKAGING}/general-packaging.patch
rockchip_packaging
if [[ "$LINUX_VERSION" == "5.15" ]]; then
	for i in ../../${LINUX_PATCHDIR}/${FAMILY_EXT}/*.patch; do patch -N -p1 < $i; done;
else
	for i in ../../${LINUX_PATCHDIR}/${FAMILY_EXT}/edge/*.patch; do patch -N -p1 < $i; done;
fi
for i in ../../${LINUX_PATCHDIR}/all/*.patch; do patch -N -p1 < $i; done
user_patches
cp -f ../../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo ""
}
