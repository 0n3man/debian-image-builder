# PATCHING
allwinner-packaging(){
sed -i 's/packagename=linux-image-$version/packagename=sun50i-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun50i-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=sun50i-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun50i-linux-headers/g' scripts/package/mkdebian
}

allwinner-8i-packaging(){
sed -i 's/packagename=linux-image-$version/packagename=sun8i-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun8i-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=sun8i-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=sun8i-linux-headers/g' scripts/package/mkdebian
}

amlogic-packaging(){
sed -i 's/packagename=linux-image-$version/packagename=meson64-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=meson64-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=meson64-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=meson64-linux-headers/g' scripts/package/mkdebian
}

raspberrypi-packaging(){
sed -i 's/packagename=linux-image-$version/packagename=raspberrypi-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=raspberrypi-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=raspberrypi-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=raspberrypi-linux-headers/g' scripts/package/mkdebian
}

rockchip-packaging(){
sed -i 's/packagename=linux-image-$version/packagename=rockchip64-linux-image/g' scripts/package/builddeb
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=rockchip64-linux-headers/g' scripts/package/builddeb
sed -i 's/packagename=linux-image-$version/packagename=rockchip64-linux-image/g' scripts/package/mkdebian
sed -i 's/kernel_headers_packagename=linux-headers-$version/kernel_headers_packagename=rockchip64-linux-headers/g' scripts/package/mkdebian
}

## TRITIUM
tritium_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
allwinner-packaging
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## PINE64
pine64_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
allwinner-packaging
for i in ../${PINE}/*.patch; do patch -p1 < $i; done
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## NANOPI
nanopi_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
allwinner-packaging
for i in ../${NANOPI}/*.patch; do patch -p1 < $i; done
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## NANOPI H3
sun8i_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
allwinner-8i-packaging
for i in ../${SUN8I}/*.patch; do patch -p1 < $i; done
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## LE POTATO
potato_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
amlogic-packaging
for i in ../${AMLOGIC}/lepotato/*.patch; do patch -N -p1 < $i; done;
if [[ `ls ../${AMLOGIC}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${AMLOGIC}/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## ODROID
odroid_boards(){
if [[ `grep -w "odroidc4" "../../board.txt"` ]]; then
	for i in ../${AMLOGIC}/c4/*.patch; do patch -p1 < $i; done;
fi
if [[ `grep -w "odroidn2" "../../board.txt"` ]]; then
	for i in ../${AMLOGIC}/n2/*.patch; do patch -p1 < $i; done;
fi
if [[ `grep -w "odroidn2plus" "../../board.txt"` ]]; then
	for i in ../${AMLOGIC}/n2/*.patch; do patch -p1 < $i; done;
fi
}

odroid_mainline(){
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 15" "Makefile"` ]]; then
	for i in ../${AMLOGIC}/odroid/*.patch; do patch -p1 < $i; done;
fi
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 16" "Makefile"` ]]; then
	for i in ../${AMLOGIC}/odroid/5.16/*.patch; do patch -p1 < $i; done;
fi
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 17" "Makefile"` ]]; then
	for i in ../${AMLOGIC}/odroid/5.17/*.patch; do patch -p1 < $i; done;
fi
}

## ODROIDC4
odroidc4_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
amlogic-packaging
if [ -e ../tobetter.txt ]; then
	:;
else
	odroid_mainline;
fi
odroid_boards
if [[ `ls ../${AMLOGIC}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${AMLOGIC}/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## ODROIDN2
odroidn2_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
amlogic-packaging
if [ -e ../tobetter.txt ]; then
	:;
else
	odroid_mainline;
fi
odroid_boards
if [[ `ls ../${AMLOGIC}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${AMLOGIC}/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## RADXA ZERO
radxazero_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
amlogic-packaging
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 15" "Makefile"` ]]; then
	for i in ../${AMLOGIC}/radxazero/*.patch; do patch -N -p1 < $i; done;
else
	for i in ../${AMLOGIC}/radxazero/edge/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${AMLOGIC}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${AMLOGIC}/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## RASPBERRY PI 4B
raspberrypi_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
raspberrypi-packaging
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 15" "Makefile"` ]]; then
	for i in ../${BROADCOM}/*.patch; do patch -p1 < $i; done;
else
	for i in ../${BROADCOM}/edge/*.patch; do patch -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

## ROCKCHIP
rk3328_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
rockchip-packaging
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 15" "Makefile"` ]]; then
	for i in ../${RK3328}/*.patch; do patch -N -p1 < $i; done;
else
	for i in ../${RK3328}/edge/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${ROCKCHIP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${ROCKCHIP}/*.patch; do patch -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}

rk3399_patch(){
echo
echo_patch
patch -p1 < ../${PACKAGING}/general-packaging.patch
rockchip-packaging
if [[ `grep -w "VERSION = 5" "Makefile"` ]]; [[ `grep -w "PATCHLEVEL = 15" "Makefile"` ]]; then
	for i in ../${RK3399}/*.patch; do patch -N -p1 < $i; done;
else
	for i in ../${RK3399}/edge/*.patch; do patch -N -p1 < $i; done;
fi
if [[ `ls ../${ROCKCHIP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${ROCKCHIP}/*.patch; do patch -p1 < $i; done;
fi
if [[ `ls ../${UP}/*.patch` ]] > /dev/null 2>&1; then
	for i in ../${UP}/*.patch; do patch -p1 < $i; done;
fi
cp -f ../${PACKAGING}/headers-byteshift.patch headers-byteshift.patch;
echo_done
echo
}
