#!/bin/bash

# U-BOOT
uboot_configs (){
# add default builder config options
if [[ -f "configs/${UBOOT_DEFCONFIG}" ]]; then
	if [[ `grep -w "CONFIG_SD_BOOT=y" "configs/${UBOOT_DEFCONFIG}"` ]]; then :; else echo "CONFIG_SD_BOOT=y" >> configs/${UBOOT_DEFCONFIG}; fi
	if [[ `grep -w "CONFIG_EXT4_WRITE=y" "configs/${UBOOT_DEFCONFIG}"` ]]; then :; else echo "CONFIG_EXT4_WRITE=y" >> configs/${UBOOT_DEFCONFIG}; fi
	if [[ `grep -w "CONFIG_FS_BTRFS=y" "configs/${UBOOT_DEFCONFIG}"` ]]; then :; else echo "CONFIG_FS_BTRFS=y" >> configs/${UBOOT_DEFCONFIG}; fi
	if [[ `grep -w "CONFIG_CMD_BTRFS=y" "configs/${UBOOT_DEFCONFIG}"` ]]; then :; else echo "CONFIG_CMD_BTRFS=y" >> configs/${UBOOT_DEFCONFIG}; fi
fi
if [[ "$BOARD" == "cubietruck" ]] && [[ -f "configs/${UBOOT_DEFCONFIG}" ]]; then
	sed -i 's/CONFIG_DRAM_CLK=432/CONFIG_DRAM_CLK=384/g' configs/${UBOOT_DEFCONFIG}
	echo "CONFIG_MMC_SUNXI_SLOT_EXTRA=2" >> configs/${UBOOT_DEFCONFIG}
fi
if [[ "$BOARD" == "pinea64plus" ]] && [[ -f "configs/${UBOOT_DEFCONFIG}" ]]; then
	# Autoboot options
	echo "CONFIG_BOOT_RETRY=y" >> configs/${UBOOT_DEFCONFIG}
	echo "CONFIG_BOOT_RETRY_TIME=5" >> configs/${UBOOT_DEFCONFIG}
	echo "CONFIG_BOOT_RETRY_MIN=5" >> configs/${UBOOT_DEFCONFIG}
	echo "CONFIG_RESET_TO_RETRY=y" >> configs/${UBOOT_DEFCONFIG}
fi
}

uboot_output (){
if [[ -f "u-boot-sunxi-with-spl.bin" ]]; then
	mkdir -p ../../${OUTPUT}
	cp -f u-boot-sunxi-with-spl.bin ../../${OUTPUT}/
	uboot_packaging
	echo ""
else
	report_error
fi
}

allwinner_uboot_run (){
sources_dir
if [[ "$ARCH" == "arm64" ]]; then
	arm_trusted_firmware
	if [[ "$HOST_CODENAME" == "bullseye" ]]; then :; else crust_firmware; fi
fi
uboot_run
uboot_output
}

allwinner_uboot_packaging (){
cp -f u-boot-sunxi-with-spl.bin ${PKGNAME}_${PKGVERSION}-${BV}_${ARCH_EXT}/usr/lib/${PKGNAME}/
}

# STAGE1
flash_uboot (){
dd if=${OUTPUT}/u-boot-sunxi-with-spl.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=1024 seek=8
}

# STAGE2
alt_firmware (){
echo -e ""
if [[ "$BOARD" == "bananapim2zero" || "$BOARD" == "bananapip2zero" || "$BOARD" == "nanopineoplus2" ]]; then
	echo "Adding $DEFAULT_MOTD firmware ..."
	cd ~
	git clone -b nanopi https://github.com/pyavitz/firmware.git
fi
if [[ "$BOARD" == "cubietruck" ]]; then
	echo "Adding $DEFAULT_MOTD firmware ..."
	cd ~
	git clone -b $BOARD https://github.com/pyavitz/firmware.git
fi
if [[ -f "firmware/README.md" ]]; then rm -f firmware/README.md; fi
cp -fr firmware/* /lib/firmware
if [[ -f "/lib/firmware/brcm/brcmfmac43430-sdio.bin" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.friendlyarm,nanopi-neo-plus2.bin
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-zero.bin
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.bin /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-p2-zero.bin
fi
if [[ -f "/lib/firmware/brcm/brcmfmac43430-sdio.txt" ]]; then
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.txt /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-zero.txt
	ln -s /lib/firmware/brcm/brcmfmac43430-sdio.txt /lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-p2-zero.txt
fi
if [[ -f "fw-0a5c_21e8.hcd" ]]; then 
	mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
	cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
	chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
	chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
fi
if [[ -f "UPDATE.mem" ]]; then
	install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem
	rm -f UPDATE.mem
fi
if [[ -d "firmware" ]]; then rm -fdr firmware; fi
git clone -q -b realtek https://github.com/pyavitz/firmware.git
cp -fr firmware/* /lib/firmware
rm -fdr firmware
mkdir -p /lib/firmware/rtl_nic
wget -cq https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware.git/+archive/refs/heads/main/rtl_nic.tar.gz -P /lib/firmware/rtl_nic
if [[ -f "/lib/firmware/rtl_nic/rtl_nic.tar.gz" ]]; then
	tar xf /lib/firmware/rtl_nic/rtl_nic.tar.gz -C /lib/firmware/rtl_nic
	rm -f /lib/firmware/rtl_nic/rtl_nic.tar.gz
fi
cd ~
}

pine64_bthelper (){
echo  ""
echo -e "Installing bluetooth helper ..."
sleep .50
git clone https://github.com/lwfinger/rtl8723bs_bt.git
cd rtl8723bs_bt
make
make install
mv rtk_hciattach /usr/local/bin/
cd ~
rm -fdr rtl8723bs_bt
mkdir -p /etc/modules-load.d/
echo "r8723bs" > /etc/modules-load.d/pine64.conf
echo "hci_uart" >> /etc/modules-load.d/pine64.conf
mkdir -p /etc/modprobe.d/
echo "options r8723bs rtw_power_mgnt=0" > /etc/modprobe.d/wifi-pwrmgnt.conf
cat <<EOF > "/usr/local/sbin/bthelper"
#!/bin/bash
if [[ -f "/sys/class/rfkill/rfkill0/state" ]]; then
	echo "1" > /sys/class/rfkill/rfkill0/state
	sleep 1s
	rtk_hciattach /dev/ttyS1 rtk_h5
	sleep 2s
	hciconfig hci0 up
fi
EOF
if [[ -f "/usr/local/sbin/bthelper" ]]; then
	chmod +x /usr/local/sbin/bthelper
fi
}
