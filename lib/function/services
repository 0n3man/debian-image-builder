# rc-local
rc-local_service(){
tee /etc/systemd/system/rc-local.service <<EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

tee /etc/rc.local <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
EOF
chmod +x /etc/rc.local
}

# governor
governor_service(){
tee /etc/systemd/system/governor.service <<EOF
[Unit]
Description=Set Governor
ConditionPathExists=/usr/local/bin/governor

[Service]
ExecStart=/usr/local/bin/governor -r &>/dev/null
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
}

# pine64 bluetooth
pine64_bt_service(){
tee /etc/systemd/system/bluetooth-module.service <<EOF
[Unit]
Description=Enable Bluetooth
ConditionPathExists=/usr/local/sbin/pine64-bt

[Service]
Type=forking
ExecStart=/usr/local/sbin/pine64-bt &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
systemctl enable bluetooth-module
}

# leds
led_service(){
tee /etc/systemd/system/leds.service <<EOF
[Unit]
Description=Set LEDs
ConditionPathExists=/usr/local/sbin/led-trigger

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/sbin/led-trigger &>/dev/null

[Install]
WantedBy=multi-user.target
EOF
systemctl enable leds
}

# tweaks
tweaks_service(){
cd ~
if [[ `grep -w "lepotato" "/root/board.txt"` ]]; then
	mv -f lepotato-tweaks /usr/bin/lepotato-tweaks
	chmod +x /usr/bin/lepotato-tweaks
	chown root:root /usr/bin/lepotato-tweaks;
else
	if [[ `grep "odroid" "/root/board.txt"` ]]; then
		echo "overclock=0" > /etc/opt/overclock.txt
		mv -f odroid-tweaks /usr/bin/odroid-tweaks
		chmod +x /usr/bin/odroid-tweaks
		chown root:root /usr/bin/odroid-tweaks;
	else
		if [[ `grep "nanopc" "/root/board.txt"` ]]; then
			echo "overclock=0" > /etc/opt/overclock.txt
			mv -f nanopc-tweaks /usr/bin/nanopc-tweaks
			chmod +x /usr/bin/nanopc-tweaks
			chown root:root /usr/bin/nanopc-tweaks;
		fi
	fi
fi

lepotato_systemd(){
tee /etc/systemd/system/lepotato-tweak.service <<EOF
[Unit]
Description=Le Potato Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/lepotato-tweaks
After=network.target network-online.target ifup@.service

[Service]
Type=forking
ExecStart=/usr/bin/lepotato-tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable lepotato-tweak
}

odroid_systemd(){
tee /etc/systemd/system/odroid-tweak.service <<EOF
[Unit]
Description=ODROID Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/odroid-tweaks
After=network.target
After=network-online.target

[Service]
Type=forking
ExecStart=/usr/bin/odroid-tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable odroid-tweak
}

nanopc_systemd(){
tee /etc/systemd/system/nanopc-tweak.service <<EOF
[Unit]
Description=NanoPC-T4 Specific System Tweaks
ConditionFileIsExecutable=/usr/bin/nanopc-tweaks
After=sysinit.target local-fs.target

[Service]
Type=forking
ExecStart=/usr/bin/nanopc-tweaks
TimeoutSec=0
RemainAfterExit=yes
StandardOutput=journal+console
StandardError=journal+console

[Install]
WantedBy=multi-user.target
EOF
systemctl enable nanopc-tweak
}

if [[ `grep -w 'DISTRO="devuan"' "userdata.txt"` ]]; then
	mv -f tweaks.init /etc/init.d/tweaks
	chmod +x /etc/init.d/tweaks
	chown root:root /etc/init.d/tweaks;
else
	if [[ `grep -w "lepotato" "/root/board.txt"` ]]; then
		lepotato_systemd;
	else
		if [[ `grep "odroid" "/root/board.txt"` ]]; then
			odroid_systemd;
		else
			if [[ `grep "nanopc" "/root/board.txt"` ]]; then
				nanopc_systemd;
			fi
		fi
	fi
fi
}

# credentials
credentials_service(){
tee /etc/systemd/system/credentials.service <<EOF
[Unit]
Description=Credentials
After=firstboot.service network.target
Before=rc-local.service
ConditionPathExists=/usr/local/bin/credentials
[Service]
ExecStart=/usr/local/bin/credentials > /dev/null 2>&1
Type=oneshot
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target
EOF

systemctl enable credentials
}

# first boot
firstboot_service(){
tee /etc/systemd/system/firstboot.service <<EOF
[Unit]
Description=First Boot
After=systemd-remount-fs.service
Before=credentials.service
ConditionPathExists=/usr/local/sbin/firstboot

[Service]
ExecStart=/usr/local/sbin/firstboot
Type=oneshot
RemainAfterExit=no

[Install]
WantedBy=multi-user.target
EOF
}

# kali force start service
kali_hack(){
tee /etc/systemd/system/kali-hack.service <<EOF
[Unit]
Description=Kali hack
After=rc-local.service
ConditionPathExists=/usr/local/sbin/kali-hack

[Service]
ExecStart=/usr/local/sbin/kali-hack > /dev/null 2>&1
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

tee /usr/local/sbin/kali-hack <<EOF
#!/bin/bash

service ssh start
sleep 3s
service avahi-daemon start
sleep 2s
service bluetooth start
EOF
chmod +x /usr/local/sbin/kali-hack
systemctl enable kali-hack
}

enable_sysvinit(){
chmod +x /etc/init.d/governor
chmod +x /etc/init.d/firstboot
if [[ `grep -w "pine64" "/root/board.txt"` ]]; then
	:;
else
	chmod +x /etc/init.d/leds
	update-rc.d leds defaults 2;
fi
if [[ `grep -w "pine64" "/root/board.txt"` ]]; then
	chmod +x /etc/init.d/bthelper
	update-rc.d bthelper defaults 2;
fi
if [[ `grep "amlogic" "/root/board.txt"` ]]; then
	chmod +x /etc/init.d/tweaks
	update-rc.d tweaks defaults 2;
fi
if [[ `grep "nanopc" "/root/board.txt"` ]]; then
	chmod +x /etc/init.d/tweaks
	update-rc.d tweaks defaults 2;
fi
chmod +x /etc/init.d/zramswap
chmod +x /etc/init.d/network
chmod +x /etc/init.d/credentials
update-rc.d -f hwclock.sh remove
update-rc.d -f networking remove
update-rc.d firstboot defaults S
update-rc.d governor defaults 2
update-rc.d zramswap defaults 2
update-rc.d credentials defaults 2
}
