# STAGE1
lepotato_flashbin(){
if [[ `grep -w "emmc=1" "userdata.txt"` ]]; then
	dd if=output/lepotato/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=output/lepotato/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=1 count=442;
	dd if=output/lepotato/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=512 skip=1 seek=1;
fi
}

odroidc4_flashbin(){
if [[ `grep -w "emmc=1" "userdata.txt"` ]]; then
	dd if=output/odroidc4/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=output/odroidc4/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=1 count=442 conv=fsync;
	dd if=output/odroidc4/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=512 skip=1 seek=1 conv=fsync;
fi
}

odroidn2_flashbin(){
if [[ `grep -w "emmc=1" "userdata.txt"` ]]; then
	dd if=output/odroidn2/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=output/odroidn2/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=1 count=442 conv=fsync;
	dd if=output/odroidn2/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=512 skip=1 seek=1 conv=fsync;
fi
}

odroidn2plus_flashbin(){
if [[ `grep -w "emmc=1" "userdata.txt"` ]]; then
	dd if=output/odroidn2plus/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=output/odroidn2plus/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=1 count=442 conv=fsync;
	dd if=output/odroidn2plus/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" bs=512 skip=1 seek=1 conv=fsync;
fi
}

radxazero_flashbin(){
if [[ `grep -w "emmc=1" "userdata.txt"` ]]; then
	dd if=output/radxazero/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=output/radxazero/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=1 count=442;
	dd if=output/radxazero/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=512 skip=1 seek=1;
fi
}

# STAGE2
radxazero_firmware(){
ARIA2="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
echo ""
echo "Adding Radxa Zero firmware ..."
cd ~
git clone -b radxa https://github.com/pyavitz/firmware.git
rm -f firmware/README.md
cp -fr firmware/* /lib/firmware
if [ -e fw-0a5c_21e8.hcd ]; then 
	mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
	cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
	chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
	chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd;
fi
if [ -e UPDATE.mem ]; then
	install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem
	rm -f UPDATE.mem;
fi
rm -fdr firmware
if [[ `grep -w "amlogic" "/root/board.txt"` ]]; then
	${ARIA2} https://github.com/LibreELEC/meson-firmware/archive/refs/heads/master.tar.gz
	tar xf meson-firmware-master.tar.gz
	mkdir -p /lib/firmware/meson
	cp -R meson-firmware-master/meson/* /lib/firmware/meson
	rm -fdr meson-firmware-master*
	mkdir -p /lib/firmware/ene-ub6250
	cd /lib/firmware/ene-ub6250
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_init.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_rdwr.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/msp_rdwr.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init1.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init2.bin
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_rdwr.bin
	chown -R root:root /lib/firmware/ene-ub6250
	cd ~;
fi
echo "Done."
}

odroid_udev_rules(){
tee /etc/udev/rules.d/10-odroid.rules <<EOF
# Misc video rules
KERNEL=="event*", SUBSYSTEM=="input", MODE="0777"

# Automatic Disk Scheduler
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0",ATTR{queue/scheduler}="noop"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1",ATTR{queue/scheduler}="deadline"
ACTION=="add|change", KERNEL=="mmcblk[0-9]", ATTR{queue/rotational}=="0",ATTR{queue/scheduler}="noop"
EOF
}

lepotato_led_triggers(){
cd ~
mv -f lepotato /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}

odroidc4_led_triggers(){
cd ~
mv -f odroidc4 /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}

odroidn2_led_triggers(){
cd ~
mv -f odroidn2 /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}

radxazero_led_triggers(){
cd ~
mv -f radxazero /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}
