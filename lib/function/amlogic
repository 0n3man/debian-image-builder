#!/bin/bash

# STAGE1
flash_uboot(){
if [ $emmc -eq 1 ]; then
	dd if=${OUTPUT}/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=1;
else
	dd if=${OUTPUT}/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=1 count=442;
	dd if=${OUTPUT}/u-boot.bin.sd.bin of="${IMAGE_LOOP_DEV}" conv=fsync bs=512 skip=1 seek=1;
fi
}

flash_vendor-uboot(){
if [[ "$BOARD" == "odroidc1" ]]; then
	dd if=${OUTPUT}/bl1.bin of="${IMAGE_LOOP_DEV}" bs=1 count=442 conv=fsync;
	dd if=${OUTPUT}/bl1.bin of="${IMAGE_LOOP_DEV}" bs=512 skip=1 seek=1 conv=fsync;
	dd if=${OUTPUT}/u-boot.bin of="${IMAGE_LOOP_DEV}" bs=512 seek=64 conv=fsync;
	dd if=/dev/zero of="${IMAGE_LOOP_DEV}" seek=1024 count=32 bs=512 conv=fsync;
fi
if [[ "$FAMILY_EXT" == "odroid" ]]; then
	dd if=${CUBOOT}/${BOARD}-vendor-u-boot.bin of="${IMAGE_LOOP_DEV}" conv=fsync,notrunc bs=512 seek=1;
fi
}

# STAGE2
radxazero_firmware(){
ARIA2="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
echo ""
echo "Adding Radxa Zero firmware ..."
cd ~
git clone -b radxa https://github.com/pyavitz/firmware.git
rm -f firmware/README.md
cp -fr firmware/* /lib/firmware
if [ -f fw-0a5c_21e8.hcd ]; then 
	mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd;
	cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd;
	chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd;
	chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd;
fi
if [ -f UPDATE.mem ]; then
	install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem;
	rm -f UPDATE.mem;
fi
rm -fdr firmware
if [[ "$FAMILY" == "amlogic" ]]; then
	${ARIA2} https://github.com/LibreELEC/meson-firmware/archive/refs/heads/master.tar.gz;
	tar xf meson-firmware-master.tar.gz;
	mkdir -p /lib/firmware/meson;
	cp -R meson-firmware-master/meson/* /lib/firmware/meson;
	rm -fdr meson-firmware-master*;
	mkdir -p /lib/firmware/ene-ub6250;
	cd /lib/firmware/ene-ub6250;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_init.bin;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/ms_rdwr.bin;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/msp_rdwr.bin;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init1.bin;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_init2.bin;
	${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/main/ene-ub6250/sd_rdwr.bin;
	chown -R root:root /lib/firmware/ene-ub6250;
	cd ~;
fi
echo "Done."
}

odroid_udev_rules(){
tee /etc/udev/rules.d/10-odroid.rules <<EOF
# Misc video rules
KERNEL=="event*", SUBSYSTEM=="input", MODE="0777"

# Automatic Disk Scheduler
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0",ATTR{queue/scheduler}="noop"
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1",ATTR{queue/scheduler}="deadline"
ACTION=="add|change", KERNEL=="mmcblk[0-9]", ATTR{queue/rotational}=="0",ATTR{queue/scheduler}="noop"
EOF
}

make_uimage(){
mkdir -p /etc/initramfs/post-update.d/
tee /etc/initramfs/post-update.d/99-uimage <<EOF
#!/bin/bash
if [ -f /boot/uImage ]; then
	rm -f /boot/uImage;
fi
if [ -f /boot/Image ]; then
	mkimage -A arm -O linux -T kernel -C none -a 0x2080000 -e 0x2080000 -n "Linux" -d /boot/Image /boot/uImage > /dev/null 2>&1;
fi
exit 0
EOF
chmod +x /etc/initramfs/post-update.d/99-uimage
chown root:root /etc/initramfs/post-update.d/99-uimage
}
