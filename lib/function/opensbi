#!/bin/bash

opensbi_firmware (){
if [[ `wget -S --spider https://raw.githubusercontent.com/riscv-software-src/opensbi/master/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	if [[ -d "opensbi" ]] && [[ -d "opensbi.backup" ]]; then
		echo -en "${WHT}opensbi v${OPENSBI_TAG}${FIN}"
		echo -en " ${PNK}[${FIN}${YLW}restoring${FIN}${PNK}]${FIN}"
		rm -fdr opensbi
		echo -en " ${WHT}...${FIN}"
		mv -f opensbi.backup opensbi
		cd opensbi
		git checkout v${OPENSBI_TAG} &> /dev/null
		make clean
		cd ..
		cp -r opensbi opensbi.backup
		echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
	else
		if [[ -d "opensbi" ]]; then rm -fdr opensbi; fi
		echo -en "${WHT}opensbi v${OPENSBI_TAG}${FIN}"
		echo -en " ${PNK}[${FIN}${WHT}cloning${FIN}${PNK}]${FIN}"
		git clone -q -c advice.detachedHead=false ${OPENSBI_URL} -b v${OPENSBI_TAG}
		if [[ -d "opensbi" ]]; then
			cd opensbi
			make clean
			cd ..
			echo -en " ${PNK}[${FIN}${WHT}creating backup${FIN}${PNK}]${FIN}"
			cp -r opensbi opensbi.backup
			echo -e " ${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
		else
			echo -e " ${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"
			exit 1
		fi
	fi
fi
cd opensbi
opensbi_patching
if [ $CROSSCOMPILE -eq 1 ]; then echo -e "${GRN}  CC${FIN}"; else echo -e "${GRN}  NC${FIN}"; fi
ubuild "PLATFORM=${OPENSBI_PLATFORM} PLATFORM_DEFCONFIG=${OPENSBI_DEFCONFIG}"
if [[ -f "${OPENSBI_FIRMWARE}" ]]; then :; else report_opensbi_error; fi
cd ..
echo ""
}

report_opensbi_error (){
echo "Missing firmware ${OPENSBI_FIRMWARE}. Please report build errors."
echo ""
exit 1
}
