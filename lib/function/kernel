# KERNEL
DOWNLOAD="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
STBURL="https://cdn.kernel.org/pub/linux/kernel/v5.x/"
MLURL="https://git.kernel.org/torvalds/t/"
ODURL="https://github.com/tobetter/linux/archive/refs/heads/"

gcc_woes(){
sed -i 's/CONFIG_CRYPTO_AEGIS128=m/# CONFIG_CRYPTO_AEGIS128 is not set/g' arch/arm64/configs/amlogic_defconfig
sed -i 's/CONFIG_CRYPTO_AEGIS128=m/# CONFIG_CRYPTO_AEGIS128 is not set/g' arch/arm64/configs/allwinner_defconfig
sed -i 's/CONFIG_CRYPTO_AEGIS128=m/# CONFIG_CRYPTO_AEGIS128 is not set/g' arch/arm64/configs/allwinner-r1_defconfig
sed -i 's/CONFIG_CRYPTO_AEGIS128=m/# CONFIG_CRYPTO_AEGIS128 is not set/g' arch/arm64/configs/rockchip64_defconfig
sed -i 's/CONFIG_CRYPTO_AEGIS128=m/# CONFIG_CRYPTO_AEGIS128 is not set/g' arch/arm64/configs/bcm2711_defconfig
}

rpi4_binaries(){
BINURL="https://github.com/raspberrypi/firmware/raw/master/boot/"
mkdir -p binaries
rm -f binaries/*
cd binaries
echo
echo_bins
${DOWNLOAD} ${BINURL}fixup4.dat
${DOWNLOAD} ${BINURL}start4.elf
${DOWNLOAD} ${BINURL}LICENCE.broadcom
${DOWNLOAD} ${BINURL}COPYING.linux
cd ..
if ls binaries/{fixup4.dat,start4.elf} > /dev/null 2>&1
	then echo_bdone;
	else echo_fail && exit;
fi
}

check_stable(){
if [[ `wget -S --spider ${STBURL}${KERNEL}-${VERSION}.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]];
	then stable_download && stable_extract; else check_odroid;
fi
}

check_odroid(){
if [[ `wget -S --spider https://raw.githubusercontent.com/tobetter/linux/odroid-${VERSION}/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]];
	then odroid_download && odroid_extract; else echo && echo -e "${WHT}It appears the kernel you selected is not available${FIN}?" && exit;
fi
}

stable_download(){
echo
echo_stable
if ls ${KERNEL}-${VERSION}.tar.xz > /dev/null 2>&1;
	then echo -e "${YLW}${KERNEL}-${VERSION}.tar.xz found${FIN}.";
	else ${DOWNLOAD} ${STBURL}${KERNEL}-${VERSION}.tar.xz && echo_bdone;
fi
if `grep -Fx "opir1" "../board.txt" >/dev/null;`
	then rtl8189es_download;
fi
if `grep -Fx "rtl8812au=1" "../userdata.txt" >/dev/null;`
	then rtl8812au_download;
fi
if `grep -Fx "rtl88x2bu=1" "../userdata.txt" >/dev/null;`
	then rtl88x2bu_download;
fi
if `grep -Fx "rtl8811cu=1" "../userdata.txt" >/dev/null;`
	then rtl8811cu_download;
fi
}

mainline_download(){
echo
echo_mainline
if ls ${KERNEL}-${VERSION}.tar.gz > /dev/null 2>&1;
	then echo -e "${YLW}${KERNEL}-${VERSION}.tar.gz found${FIN}.";
	else ${DOWNLOAD} ${MLURL}${KERNEL}-${VERSION}.tar.gz && echo_bdone;
fi
if `grep -Fx "opir1" "../board.txt" >/dev/null;`
	then rtl8189es_download;
fi
if `grep -Fx "rtl8812au=1" "../userdata.txt" >/dev/null;`
	then rtl8812au_download;
fi
if `grep -Fx "rtl88x2bu=1" "../userdata.txt" >/dev/null;`
	then rtl88x2bu_download;
fi
if `grep -Fx "rtl8811cu=1" "../userdata.txt" >/dev/null;`
	then rtl8811cu_download;
fi
}

odroid_download(){
echo
echo_odroid
if ls ${ODKERNEL}-${VERSION}.tar.gz > /dev/null 2>&1;
	then echo -e "${YLW}${ODKERNEL}-${VERSION}.tar.gz found${FIN}.";
	else ${DOWNLOAD} ${ODURL}odroid-${VERSION}.tar.gz && echo_bdone;
fi
if `grep -Fx "rtl8812au=1" "../userdata.txt" >/dev/null;`
	then rtl8812au_download;
fi
if `grep -Fx "rtl88x2bu=1" "../userdata.txt" >/dev/null;`
	then rtl88x2bu_download;
fi
if `grep -Fx "rtl8811cu=1" "../userdata.txt" >/dev/null;`
	then rtl8811cu_download;
fi
}

stable_extract(){
echo
echo_extract
echo -e -n "${WHT}"
pv ${KERNEL}-${VERSION}.tar.xz | tar -xJ ${KERNEL}-${VERSION}
echo -e -n "${FIN}"
}

mainline_extract(){
echo
echo_extract
echo -e -n "${WHT}"
pv ${KERNEL}-${VERSION}.tar.gz | tar -xzf - -C .
echo -e -n "${FIN}"
}

odroid_extract(){
echo
echo_extract
echo -e -n "${WHT}"
pv ${ODKERNEL}-${VERSION}.tar.gz | tar -xzf - -C .
mv -f ${ODKERNEL}-${VERSION} linux-${VERSION}
echo -e -n "${FIN}"
}

setup(){
sleep 1s
if `grep -Fx "rtl8812au=1" "../userdata.txt" >/dev/null;`
	then rtl8812au;
fi
if `grep -Fx "rtl88x2bu=1" "../userdata.txt" >/dev/null;`
	then rtl88x2bu;
fi
if `grep -Fx "rtl8811cu=1" "../userdata.txt" >/dev/null;`
	then rtl8811cu;
fi
cd ${KERNEL}-${VERSION}
if `grep -Fx "bcm2711" "../board.txt" >/dev/null;`
	then rpi4_binaries;
fi
export ARCH=arm64
rm -f scripts/package/builddeb
rm -f scripts/package/mkdebian
cp -R ../${PACKAGING}/builddeb scripts/package/
cp -R ../${PACKAGING}/mkdebian scripts/package/
chmod +x scripts/package/builddeb
chmod +x scripts/package/mkdebian
#make clean
#make mrproper
}

setupv7(){
sleep 1s
if `grep -Fx "opir1" "../board.txt" >/dev/null;`
	then rtl8189es;
fi
cd ${KERNEL}-${VERSION}
export ARCH=arm
rm -f scripts/package/builddeb
rm -f scripts/package/mkdebian
cp -R ../${PACKAGING}/builddeb scripts/package/
cp -R ../${PACKAGING}/mkdebian scripts/package/
chmod +x scripts/package/builddeb
chmod +x scripts/package/mkdebian
#make clean
#make mrproper
}

cconfig(){
echo_cconfig
cp -f ../${DEF}/${MYCONFIG} arch/arm64/configs/
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- ${MYCONFIG};
	else make ARCH=arm64 CC=${NATIVE} ${MYCONFIG};
fi
echo_done
}

cconfigv7(){
echo_cconfig
cp -f ../${DEF}/${MYCONFIG} arch/arm/configs/
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make KBUILD_DEBARCH=armhf ARCH=arm CC=${ARMV7_CROSS} CROSS_COMPILE=arm-linux-gnueabihf- ${MYCONFIG};
	else make KBUILD_DEBARCH=armhf ARCH=arm CC=${NATIVE} ${MYCONFIG};
fi
echo_done
}

armv8_menuconfig(){
echo
echo_menuconfig
sleep 1s
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- menuconfig;
	else make ARCH=arm64 CC=${NATIVE} menuconfig;
fi
}

armv7_menuconfig(){
echo
echo_menuconfig
sleep 1s
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make KBUILD_DEBARCH=armhf ARCH=arm CC=${ARMV7_CROSS} CROSS_COMPILE=arm-linux-gnueabihf- menuconfig;
	else make KBUILD_DEBARCH=armhf ARCH=arm CC=${NATIVE} menuconfig;
fi
}

choose_menuconfig(){
if `grep -Fx "armv7" "../../board.txt" >/dev/null;`
	then armv7_menuconfig;
	else armv8_menuconfig;
fi
}

ccompile(){
echo -e "-- ${GRN}CC${FIN}"
echo_build
echo 'y' | make -j${CORES} ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg
}

ncompile(){
echo -e "-- ${GRN}NC${FIN}"
echo_build
echo 'y' | make -j${CORES} ARCH=arm64 CC=${NATIVE} bindeb-pkg
}

ccompilev7(){
echo -e "-- ${GRN}CC${FIN}"
echo_build
echo 'y' | make -j${CORES} KBUILD_DEBARCH=armhf ARCH=arm CC=${ARMV7_CROSS} CROSS_COMPILE=arm-linux-gnueabihf- bindeb-pkg
}

ncompilev7(){
echo -e "-- ${GRN}NC${FIN}"
echo_build
echo 'y' | make -j${CORES} KBUILD_DEBARCH=armhf ARCH=arm CC=${NATIVE} bindeb-pkg
}

# AMLOGIC
amlogic_defconfig(){
echo_defconfig
cp -f ../${DEF}/amlogic_defconfig arch/arm64/configs/
rtl8812au_module
rtl88x2bu_module
rtl8811cu_module
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- amlogic_defconfig &> /dev/null;
	else make ARCH=arm64 CC=${NATIVE} amlogic_defconfig &> /dev/null;
fi
echo_done
}

### LE POTATO
le_potato(){
potato_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    amlogic_defconfig
    ;;
esac
}

### ODROID C4
odroid_c4(){
odroidc4_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    amlogic_defconfig
    ;;
esac
}

### ODROID N2
odroid_n2(){
odroidn2_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    amlogic_defconfig
    ;;
esac
}

# ALLWINNER
allwinner_defconfig(){
echo_defconfig
cp -f ../${DEF}/allwinner_defconfig arch/arm64/configs/
rtl8812au_module
rtl88x2bu_module
rtl8811cu_module
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- allwinner_defconfig &> /dev/null;
	else make ARCH=arm64 CC=${NATIVE} allwinner_defconfig &> /dev/null;
fi
echo_done
}

allwinner-r1_defconfig(){
echo_defconfig
cp -f ../${DEF}/allwinner-r1_defconfig arch/arm/configs/
rtl8189es_module
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make KBUILD_DEBARCH=armhf ARCH=arm CC=${ARMV7_CROSS} CROSS_COMPILE=arm-linux-gnueabihf- allwinner-r1_defconfig &> /dev/null;
	else make KBUILD_DEBARCH=armhf ARCH=arm CC=${NATIVE} allwinner-r1_defconfig &> /dev/null;
fi
echo_done
}

### TRITIUM
tritium_h5(){
tritium_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    allwinner_defconfig
    ;;
esac
}

### PINEA64 PLUS
pine_a64(){
pine64_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    allwinner_defconfig
    ;;
esac
}

### NANOPI NEO PLUS2
nanopi_neo_plus2(){
nanopi_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    allwinner_defconfig
    ;;
esac
}

### ORANGEPI R1
orangepi_r1(){
opir1_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfigv7
    ;;
  1)
    allwinner-r1_defconfig
    ;;
esac
}

### ROCKCHIP
rockchip_defconfig(){
echo_defconfig
cp -f ../${DEF}/rockchip64_defconfig arch/arm64/configs/
rtl8812au_module
rtl88x2bu_module
rtl8811cu_module
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- rockchip64_defconfig &> /dev/null;
	else make ARCH=arm64 CC=${NATIVE} rockchip64_defconfig &> /dev/null;
fi
echo_done
}

rk3328_roc_cc (){
rk3328_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    rockchip_defconfig
    ;;
esac
}

rk3328_rock64 (){
rk3328_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    rockchip_defconfig
    ;;
esac
}

rk3399_nanopc (){
rk3399_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    rockchip_defconfig
    ;;
esac
}

### BROADCOM
bcm2711_defconfig(){
echo_defconfig
cp -f ../${DEF}/bcm2711_defconfig arch/arm64/configs/
rtl8812au_module
rtl88x2bu_module
rtl8811cu_module
if `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null;`
	then make ARCH=arm64 CC=${ARM64_CROSS} CROSS_COMPILE=aarch64-linux-gnu- bcm2711_defconfig &> /dev/null;
	else make ARCH=arm64 CC=${NATIVE} bcm2711_defconfig &> /dev/null;
fi
echo_done
}

bcm_2711 (){
raspberrypi_patch
case `grep -Fx "custom_defconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    cconfig
    ;;
  1)
    bcm2711_defconfig
    ;;
esac
}

architecture_v8(){
case `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    ccompile
    ;;
  1)
    ncompile
    ;;
esac
}

architecture_v7(){
case `grep -Fx "crosscompile=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    ccompilev7
    ;;
  1)
    ncompilev7
    ;;
esac
}
