# STAGE1
partition(){
image_size
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
32767
a
t
b
5859374

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p1"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p1
if [[ `grep -w "renegade" "board.txt"` ]]; then
	renegade_flashbin;
fi
if [[ `grep -w "rock64" "board.txt"` ]]; then
	rock64_flashbin;
fi
if [[ `grep -w "rock64pro" "board.txt"` ]]; then
	rock64pro_flashbin;
fi
if [[ `grep -Fx "nanopc" "board.txt"` ]]; then
	nanopc_flashbin;
fi
sync
umount p1
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p1
}

renegade_flashbin(){
dd if=output/renegade/idbloader.bin of="${IMAGE_LOOP_DEV}" seek=64
dd if=output/renegade/u-boot.itb of="${IMAGE_LOOP_DEV}" seek=16384
}

rock64_flashbin(){
dd if=output/rock64/idbloader.bin of="${IMAGE_LOOP_DEV}" seek=64
dd if=output/rock64/u-boot.itb of="${IMAGE_LOOP_DEV}" seek=16384
}

rock64pro_flashbin(){
dd if=output/rock64pro/idbloader.bin of="${IMAGE_LOOP_DEV}" seek=64
dd if=output/rock64pro/u-boot.itb of="${IMAGE_LOOP_DEV}" seek=16384
}

nanopc_flashbin(){
dd if=output/nanopc/idbloader.bin of="${IMAGE_LOOP_DEV}" seek=64
dd if=output/nanopc/u-boot.itb of="${IMAGE_LOOP_DEV}" seek=16384
}

partition_uuid(){
ROOT_UUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_ROOTFS}" | sed -ne 's/^UUID=//p')
echo ROOT_UUID='"'$ROOT_UUID'"' > part-uuid.txt

source part-uuid.txt
}

create_fstab(){
tee p1/etc/fstab <<EOF
UUID=${ROOT_UUID}	/		ext4	defaults,noatime,nodiratime,commit=600,errors=remount-ro 0 1
tmpfs		/tmp	tmpfs	defaults,nosuid 0 0
EOF
}

# STAGE2
rock64_extlinux(){
mkdir -p p1/boot/extlinux
tee p1/boot/extlinux/extlinux.conf <<EOF
label default
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/rockchip/
    fdt /boot/rockchip/rk3328-rock64.dtb
    append earlyprintk console=tty1 console=ttyS2,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 fsck.repair=yes net.ifnames=0 loglevel=1 init=/sbin/init
EOF
}

rock64pro_extlinux(){
mkdir -p p1/boot/extlinux
tee p1/boot/extlinux/extlinux.conf <<EOF
label default
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/rockchip/
    #fdt /boot/rockchip/rk3399-rockpro64.dtb
    fdt /boot/rockchip/rk3399-rockpro64-v2.dtb
    append earlyprintk console=tty1 console=ttyS2,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 fsck.repair=yes net.ifnames=0 loglevel=1 init=/sbin/init
EOF
}

nanopc_extlinux(){
mkdir -p p1/boot/extlinux
tee p1/boot/extlinux/extlinux.conf <<EOF
label default
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/rockchip/
    fdt /boot/rockchip/rk3399-nanopc-t4.dtb
    append earlyprintk console=tty1 console=ttyS2,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 fsck.repair=yes net.ifnames=0 usb-storage.quirks=0x1d6b:0x0003:u,0x1f75:0x0621:u,0x1058:0x259b:u loglevel=1 init=/sbin/init
EOF
}

renegade_extlinux(){
mkdir -p p1/boot/extlinux
tee p1/boot/extlinux/extlinux.conf <<EOF
label default
    kernel /boot/Image
    initrd /boot/uInitrd
    fdtdir /boot/rockchip/
    fdt /boot/rockchip/rk3328-roc-cc.dtb
    append earlyprintk console=tty1 console=ttyS2,115200n8 console=both rw root=PARTUUID=${ROOT_PARTUUID} rootwait rootfstype=ext4 fsck.repair=yes net.ifnames=0 loglevel=1 video=HDMI-A-1:1920x1080@60 init=/sbin/init
EOF
}

rock64_led_triggers(){
tee /usr/local/sbin/led-trigger <<EOF
#!/bin/bash
# led trigger
if [ -e /sys/class/leds/standby/brightness ]; then
	echo 0 > /sys/class/leds/standby/brightness;
else
	if [ -e /sys/class/leds/led-1/brightness ]; then
		echo 0 > /sys/class/leds/led-1/brightness;
	fi
fi
EOF
}

renegade_led_triggers(){
cd ~
mv -f renegade /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}

nanopc_led_triggers(){
cd ~
mv -f nanopc /usr/local/sbin/led-trigger
chmod +x /usr/local/sbin/led-trigger
chown -R root:root /usr/local/sbin/
}

enable_services(){
systemctl enable rc-local
systemctl enable ifplugd
if [[ `grep -w 'DISTRO="debian"' "/root/userdata.txt"` ]]; then
	systemctl enable resolvconf;
else
	if [[ `grep -w 'DISTRO="kali"' "/root/userdata.txt"` ]]; then
		systemctl enable resolvconf;
	fi
fi
systemctl enable haveged
systemctl enable zramswap
systemctl enable firstboot
systemctl enable governor
if [ -e /etc/systemd/system/multi-user.target.wants/ondemand.service ]; then
	systemctl disable ondemand;
fi
}
