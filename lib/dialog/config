#!/bin/bash
if [[ `curl -I https://github.com 2>&1 | grep 'HTTP/2 200'` ]]; then
	:;
else
	echo -e "The builder requires a internet connection."
	exit 0;
fi
if [[ `command -v jq` ]]; then :; else echo -e "Missing depends: jq"; exit 0; fi
JSON_FILE="https://kernel.org/releases.json"
if [[ `curl -Ls $JSON_FILE | grep -w "version" | sed -n 4p | grep -w 5.15` ]]; then
	LINE="4p";
else
	LINE="5p";
fi
LATEST_LTS=$(curl -Ls $JSON_FILE | grep -w "version" | sed -n $LINE | sed -r 's/"version"://g' | sed -r '1s/\s+//g' | sed 's/,//g' | sed 's/\"//g')
LATEST_STABLE=$(curl -s $JSON_FILE | jq '.latest_stable.version' -r)
RED="\e[0;31m"
FIN="\e[0m"
if [ -f profile.txt ]; then
	source profile.txt;
else
	NAME="";
	USERNAME="";
	PASSWORD="";
	VERSION="$LATEST_LTS";
	LOCALE="en_US.UTF-8";
	TIMEZONE="America/New_York";
	USER_NAMESERVER1="8.8.8.8";
	USER_NAMESERVER2="8.8.4.4";
fi
MOTD="default"
HOSTNAME="default"
DISTRO="debian"
DISTRO_VERSION="bullseye"
UBOOT_VERSION="v2022.04"
BUILD_VERSION="1"
menuconfig="0"
COMPILER="gcc-10"
crosscompile="1"
ccache="0"
rtl88XXau="0"
rtl88X2bu="0"
rtl88XXcu="0"
rtl8188eu="0"
custom_defconfig="0"
MYCONFIG=""
logging="0"
verbose="0"
devrootfs="0"
compress_img="0"
uscripts="0"
useracct="0"
petitboot="0"

# open fd
exec 3>&1

# Store data to $VALUES variable
VALUES=$(dialog --ok-label "Submit" --no-cancel \
	  --backtitle "Debian Image Builder" \
	  --title "Config Menu" \
	  --form "" \
0 40 0 \
	"Name:"		1 1	"$NAME"			1 7 26 0 \
	"Username:"	2 1	"$USERNAME"		2 11 22 0 \
	"Password:"	3 1	"$PASSWORD"		3 11 22 0 \
	"Branding:"	4 1	"$MOTD"			4 11 22 0 \
	"Hostname:"	5 1	"$HOSTNAME"		5 11 22 0 \
	""		6 1	""	 		6 14 0 0 \
	"Distribution"	7 1	""	 		7 14 0 0 \
	"Distro:"	8 1	"$DISTRO"		8 9 24 0 \
	"Release:"	9 1	"$DISTRO_VERSION"	9 10 23 0 \
	""		10 1	""			10 14 0 0 \
	"U-Boot:"   	11 1    "$UBOOT_VERSION"	11 9 13 0 \
	"Branch:"   	12 1    "$VERSION"		12 9 10 0 \
	"Build:"   	13 1    "$BUILD_VERSION"	13 8 4 0 \
	"Menuconfig:"	14 1	"$menuconfig"		14 13 2 0 \
	"Compiler:"	15 1	"$COMPILER"		15 11 9 0 \
	"Crosscompile:" 16 1	"$crosscompile"		16 15 2 0 \
	"Caching on:"	17 1	"$ccache"	 	17 13 2 0 \
	""		18 1	""			18 14 0 0 \
	"Wireless"	19 1	""			19 14 0 0 \
	"rtl88XXau:"	20 1	"$rtl88XXau"		20 12 2 0 \
	"rtl88X2bu:"	21 1	"$rtl88X2bu"		21 12 2 0 \
	"rtl88XXcu:"	22 1	"$rtl88XXcu"		22 12 2 0 \
	"rtl8188eu:"	23 1	"$rtl8188eu"		23 12 2 0 \
	""		24 1	""			24 14 0 0 \
	"Customize"	25 1	""			25 14 0 0 \
	"Defconfig:"	26 1	"$custom_defconfig"	26 12 2 0 \
	"Name:"		27 1	"$MYCONFIG"		27 7 26 0 \
	""		28 1	""			28 14 0 0 \
	"User Options"	29 1	""			29 14 0 0 \
	"Logging:"	30 1	"$logging"		30 10 2 0 \
	"Verbosity:"	31 1	"$verbose"		31 12 2 0 \
	"Dev. Rootfs:"	32 1	"$devrootfs"		32 12 2 0 \
	"Compress img:"	33 1	"$compress_img"		33 15 2 0 \
	"User scripts:"	34 1	"$uscripts"		34 15 2 0 \
	"User service:"	35 1	"$useracct"		35 15 2 0 \
	""		36 1	""			36 14 0 0 \
	"Odroids"	37 1	""			37 14 0 0 \
	"Petitboot:"	38 1	"$petitboot"		38 12 2 0 \
2>&1 1>&3)

# close fd
exec 3>&-

# convert into vars
echo "$VALUES" > tmp1
echo NAME='"' > tmp0
echo USERNAME='"' >> tmp0
echo PASSWORD='"' >> tmp0
echo MOTD='"' >> tmp0
echo HOSTNAME='"' >> tmp0
echo DISTRO='"' >> tmp0
echo DISTRO_VERSION='"' >> tmp0
echo UBOOT_VERSION='"' >> tmp0
echo VERSION='"' >> tmp0
echo BUILD_VERSION='"' >> tmp0
echo menuconfig= >> tmp0
echo COMPILER='"' >> tmp0
echo crosscompile= >> tmp0
echo ccache= >> tmp0
echo rtl8812au= >> tmp0
echo rtl88x2bu= >> tmp0
echo rtl8811cu= >> tmp0
echo rtl8188eu= >> tmp0
echo custom_defconfig= >> tmp0
echo MYCONFIG='"' >> tmp0
echo logging= >> tmp0
echo verbose= >> tmp0
echo devrootfs= >> tmp0
echo compress_img= >> tmp0
echo uscripts= >> tmp0
echo useracct= >> tmp0
echo petitboot= >> tmp0
echo emmc=0 >> tmp0
echo aircrack=0 >> tmp0
echo USER_PKGS='"''"' >> tmp0
echo CORES=\`nproc\` >> tmp0
echo CFLAGS='"''"' >> tmp0
echo KBUSER='"'marvin'"' >> tmp0
echo KBHOST='"'martian'"' >> tmp0
echo "set_locales(){" >> tmp0
echo "apt install -y locales" >> tmp0
echo "export LANGUAGE=${LOCALE}" >> tmp0
echo "export LANG=${LOCALE}" >> tmp0
echo "export LC_ALL=C.UTF-8" >> tmp0
echo "locale-gen ${LOCALE}" >> tmp0
echo "}" >> tmp0
echo "set_timezone(){" >> tmp0
echo "ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime" >> tmp0
echo "echo -n '${TIMEZONE}' > /etc/timezone" >> tmp0
echo "}" >> tmp0
echo NAMESERVER1='"'${USER_NAMESERVER1}'"' >> tmp0
echo NAMESERVER2='"'${USER_NAMESERVER2}'"' >> tmp0
echo builder=4.4 >> tmp0
echo '"' > tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo _defconfig'"' >> tmp2
paste -d '\0' tmp0 tmp1 tmp2  > userdata.txt
rm -f tmp0 tmp1 tmp2

# categories
sed -i '1i### USER INFORMATION' userdata.txt
sed -i '7i### DISTRIBUTION AND RELEASE' userdata.txt
sed -i '10i### UBOOT AND LINUX KERNEL' userdata.txt
sed -i '18i### WIRELESS' userdata.txt
sed -i '23i### CUSTOM' userdata.txt
sed -i '36i### COMPILER TUNING' userdata.txt
sed -i '39i### WHOAMI AND HOST' userdata.txt
sed -i '42i### LOCALES' userdata.txt
sed -i '50i### TIMEZONE' userdata.txt
sed -i '55i### NAME SERVER' userdata.txt
sed -i '58i### DO NOT EDIT BELOW THIS LINE' userdata.txt

# clear screen
clear -x

# userdata
echo -e "${RED}userdata file created${FIN}."
