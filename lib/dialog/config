#!/bin/bash
if [[ `curl -I https://github.com 2>&1 | grep 'HTTP/2 200'` ]]; then
	:;
else
	echo -e "The builder requires a internet connection."
	exit 0;
fi
if [[ `command -v jq` ]]; then :; else echo -e "Missing depends: jq"; exit 0; fi
JSON_FILE="https://kernel.org/releases.json"
if [[ `curl -Ls $JSON_FILE | grep -w "version" | sed -n 4p | grep -w 5.15` ]]; then
	LINE="4p";
else
	LINE="5p";
fi
LATEST_LTS=$(curl -Ls $JSON_FILE | grep -w "version" | sed -n $LINE | sed -r 's/"version"://g' | sed -r '1s/\s+//g' | sed 's/,//g' | sed 's/\"//g')
LATEST_STABLE=$(curl -s $JSON_FILE | jq '.latest_stable.version' -r)
COL="\e[0;37m"
FIN="\e[0m"
if [ -f profile.txt ]; then
	. profile.txt
else
	NAME=""
	USERNAME=""
	PASSWORD=""
	VERSION="$LATEST_LTS"
	standard_packaging="1"
	useracct="0"
	LOCALE="en_US.UTF-8"
	TIMEZONE="America/New_York"
	USER_NAMESERVER1="8.8.8.8"
	USER_NAMESERVER2="8.8.4.4"
fi
HOSTNAME="default"
DISTRO="debian"
DISTRO_VERSION="bullseye"
networkmanager="0"
UBOOT_VERSION="v2022.07"
BUILD_VERSION="1"
menuconfig="0"
COMPILER="gcc-10"
if [[ `uname -m | grep aarch64` ]]; then
	crosscompile="0"
else
	crosscompile="1"
fi
ccache="0"
rtl88XXau="0"
rtl88X2bu="0"
rtl88XXcu="0"
rtl8188eu="0"
custom_defconfig="0"
MYCONFIG=""
logging="0"
verbose="0"
devrootfs="1"
compress_img="0"
uscripts="0"
petitboot="0"

# open fd
exec 3>&1

# Store data to $VALUES variable
VALUES=$(dialog --ok-label "Submit" --no-cancel \
	  --backtitle "DEBIAN IMAGE BUILDER: CONFIG MENU" \
	  --title "" \
	  --form "" \
0 40 0 \
	" Name:"		1 1	"$NAME"			1 8 26 0 \
	" Username:"		2 1	"$USERNAME"		2 12 22 0 \
	" Password:"		3 1	"$PASSWORD"		3 12 22 0 \
	" Hostname:"		4 1	"$HOSTNAME"		4 12 22 0 \
	" "			5 1	""	 		5 14 0 0 \
	" Distribution"		6 1	""	 		6 14 0 0 \
	" Distro:"		7 1	"$DISTRO"		7 10 24 0 \
	" Release:"		8 1	"$DISTRO_VERSION"	8 11 23 0 \
	" Network Manager:"	9 1	"$networkmanager"	9 19 2 0 \
	" "			10 1	""			10 14 0 0 \
	" U-Boot:"   		11 1    "$UBOOT_VERSION"	11 10 13 0 \
	" Branch:"   		12 1    "$VERSION"		12 10 10 0 \
	" Build:"   		13 1    "$BUILD_VERSION"	13 9 4 0 \
	" Menuconfig:"		14 1	"$menuconfig"		14 14 2 0 \
	" Compiler:"		15 1	"$COMPILER"		15 12 9 0 \
	" Crosscompile:" 	16 1	"$crosscompile"		16 16 2 0 \
	" Caching on:"		17 1	"$ccache"	 	17 14 2 0 \
	" Standard packaging:"	18 1	"$standard_packaging"	18 22 2 0 \
	" "			19 1	""			19 14 0 0 \
	" Wireless"		20 1	""			20 14 0 0 \
	" rtl88XXau:"		21 1	"$rtl88XXau"		21 13 2 0 \
	" rtl88X2bu:"		22 1	"$rtl88X2bu"		22 13 2 0 \
	" rtl88XXcu:"		23 1	"$rtl88XXcu"		23 13 2 0 \
	" rtl8188eu:"		24 1	"$rtl8188eu"		24 13 2 0 \
	" "			25 1	""			25 14 0 0 \
	" Customize"		26 1	""			26 14 0 0 \
	" Defconfig:"		27 1	"$custom_defconfig"	27 13 2 0 \
	" Name:"		28 1	"$MYCONFIG"		28 8 26 0 \
	" "			29 1	""			29 14 0 0 \
	" User Options"		30 1	""			30 14 0 0 \
	" Logging:"		31 1	"$logging"		31 11 2 0 \
	" Verbosity:"		32 1	"$verbose"		32 13 2 0 \
	" Devel Rootfs:"	33 1	"$devrootfs"		33 16 2 0 \
	" Compress img:"	34 1	"$compress_img"		34 16 2 0 \
	" User scripts:"	35 1	"$uscripts"		35 16 2 0 \
	" User service:"	36 1	"$useracct"		36 16 2 0 \
	" "			37 1	""			37 14 0 0 \
	" Odroids"		38 1	""			38 14 0 0 \
	" Petitboot:"		39 1	"$petitboot"		39 13 2 0 \
2>&1 1>&3)

# close fd
exec 3>&-

# convert into vars
echo "$VALUES" > tmp1
echo NAME='"' > tmp0
echo USERNAME='"' >> tmp0
echo PASSWORD='"' >> tmp0
echo HOSTNAME='"' >> tmp0
echo DISTRO='"' >> tmp0
echo DISTRO_VERSION='"' >> tmp0
echo networkmanager= >> tmp0
echo UBOOT_VERSION='"' >> tmp0
echo VERSION='"' >> tmp0
echo BUILD_VERSION='"' >> tmp0
echo menuconfig= >> tmp0
echo COMPILER='"' >> tmp0
echo crosscompile= >> tmp0
echo ccache= >> tmp0
echo standard_packaging= >> tmp0
echo rtl8812au= >> tmp0
echo rtl88x2bu= >> tmp0
echo rtl8811cu= >> tmp0
echo rtl8188eu= >> tmp0
echo custom_defconfig= >> tmp0
echo MYCONFIG='"' >> tmp0
echo logging= >> tmp0
echo verbose= >> tmp0
echo devrootfs= >> tmp0
echo compress_img= >> tmp0
echo uscripts= >> tmp0
echo useracct= >> tmp0
echo petitboot= >> tmp0
echo emmc=0 >> tmp0
echo aircrack=0 >> tmp0
echo rootpasswd=0 >> tmp0
echo USER_PKGS='"''"' >> tmp0
echo CORES=\`nproc\` >> tmp0
echo CFLAGS='"''"' >> tmp0
echo KBUSER='"'marvin'"' >> tmp0
echo KBHOST='"'martian'"' >> tmp0
echo "set_locales(){" >> tmp0
echo "apt install -y locales" >> tmp0
echo "export LANGUAGE=${LOCALE}" >> tmp0
echo "export LANG=${LOCALE}" >> tmp0
echo "export LC_ALL=C.UTF-8" >> tmp0
echo "locale-gen ${LOCALE}" >> tmp0
echo "}" >> tmp0
echo "set_timezone(){" >> tmp0
echo "ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime" >> tmp0
echo "echo -n '${TIMEZONE}' > /etc/timezone" >> tmp0
echo "}" >> tmp0
echo NAMESERVER1='"'${USER_NAMESERVER1}'"' >> tmp0
echo NAMESERVER2='"'${USER_NAMESERVER2}'"' >> tmp0
echo builder=5.0 >> tmp0
echo '"' > tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo _defconfig'"' >> tmp2
paste -d '\0' tmp0 tmp1 tmp2  > userdata.txt
rm -f tmp0 tmp1 tmp2

# categories
sed -i '1i### USER INFORMATION' userdata.txt
sed -i '6i### DISTRIBUTION AND RELEASE' userdata.txt
sed -i '10i### UBOOT AND LINUX KERNEL' userdata.txt
sed -i '19i### WIRELESS' userdata.txt
sed -i '24i### CUSTOM' userdata.txt
sed -i '38i### COMPILER TUNING' userdata.txt
sed -i '41i### WHOAMI AND HOST' userdata.txt
sed -i '44i### LOCALES' userdata.txt
sed -i '52i### TIMEZONE' userdata.txt
sed -i '57i### NAME SERVER' userdata.txt
sed -i '60i### DO NOT EDIT BELOW THIS LINE' userdata.txt

# customize your image
if [[ -f "custom.txt" ]]; then
	:;
else
	echo "# filesystem types: ext4 btrfs xfs" > custom.txt
	echo 'FSTYPE="ext4"' >> custom.txt
	echo "# options: true false" >> custom.txt
	echo 'ENABLE_EFI="false"' >> custom.txt
fi

# clear screen
clear -x

# userdata
echo -e "${COL}userdata file created${FIN}."
