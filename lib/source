# tmp
ALLSRC="sources"
AMLSRC="sources"
ROCSRC="sources"
BCMSRC="sources"

# output
BINPINE="../output/pine64"
BINTRI="../output/tritium"
BINODC4="../output/odroidc4"
BINODN2="../output/odroidn2"
BINODN2P="../output/odroidn2plus"
BINLEP="../output/lepotato"
BINNPI="../output/nanopi"
BINR1="../output/opir1"
BINRNG="../output/renegade"
BINR64="../output/rock64"
BINNPC="../output/nanopc"
BINRPI4="../output/raspi4"

CORES=`nproc`
DEF="../defconfig"

PACKAGING="../patches/packaging"
ALLWINNER="../patches/allwinner"
NANOPI="../patches/allwinner/nanopi"
SUN8I="../patches/allwinner/sun8i"
AMLOGIC="../patches/amlogic"
OC4UBOOT="../patches/amlogic/uboot/odroidc4"
ON2PUBOOT="../patches/amlogic/uboot/odroidn2plus"
PINE="../patches/allwinner/pine64"
RKUBOOT="../patches/rockchip/uboot"
RK3328="../patches/rockchip/3328"
RK3399="../patches/rockchip/3399"
BROADCOM="../patches/broadcom"
MISC="../patches/misc"

validation(){
if grep -q "builder=2.4" userdata.txt; then
    :;
else
    echo -e "${YLW}Userdata file is old${FIN}! ${YLW}Please create a new one${FIN}." && exit;
fi
}
# do not edit above this line

# kernel
KERNEL="linux"
ODKERNEL="linux-odroid"

# stage1
IMGSIZE="2100MB"

# stage 2
PKGS1="tzdata keyboard-configuration sudo man-db dbus initramfs-tools \
       e2fsprogs u-boot-tools fonty-rg patch wget apt-transport-https \
       dirmngr rsync psmisc parted hdparm aria2 dosfstools pv fdisk"


PKGS2="bluetooth rfkill haveged git build-essential net-tools distro-info-data \
       ifplugd fuse wpasupplicant wireless-tools usbutils alsa-utils gettext wget \
       mc nano figlet toilet curl dialog openssh-client openssh-server ntfs-3g bc \
       bison flex libssl-dev zram-tools python3 python3-setuptools avahi-utils \
       libncursesw5-dev autopoint autoconf automake pkg-config libtool fake-hwclock \
       lsb-release libell0 crda bluez bluez-tools irqbalance"

RPI="curl cmake zip unzip"

FIRMWARE="firmware-linux-nonfree firmware-linux bluez-firmware \
          firmware-misc-nonfree firmware-realtek firmware-ralink"

set_locales(){
apt install -y locales
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=C.UTF-8
locale-gen en_US.UTF-8
}

set_timezone(){
ln -snf /usr/share/zoneinfo/America/New_York /etc/localtime
echo -n 'America/New_York' > /etc/timezone
}

# do not edit below this line
# banners
debian_banner(){
if [ -e /usr/bin/toilet ]; then toilet -f small --filter metal 'Debian';
	else echo -e "${RED}Debian Image Builder${FIN}";
fi
}

devuan_banner(){
if [ -e /usr/bin/toilet ]; then toilet -f small --filter metal 'Devuan';
	else echo -e "${RED}Devuan Image Builder${FIN}";
fi
}

kali_banner(){
if [ -e /usr/bin/toilet ]; then toilet -f small --filter metal 'Kali';
	else echo -e "${RED}Kali Image Builder${FIN}";
fi
}

ubuntu_banner(){
if [ -e /usr/bin/toilet ]; then toilet -f small --filter metal 'Ubuntu';
	else echo -e "${RED}Ubuntu Image Builder${FIN}";
fi
}

# uinitrd
uinitrd(){
cd ~
echo
echo Adding uInitrd script.
mkdir -p /etc/initramfs/post-update.d/
mv -f 99-uboot /etc/initramfs/post-update.d/
chmod +x /etc/initramfs/post-update.d/99-uboot
chown root:root /etc/initramfs/post-update.d/99-uboot
}

# wireless
rtl88x2bu_conf(){
mkdir -p /usr/lib/NetworkManager/conf.d/
tee /usr/lib/NetworkManager/conf.d/rtl88x2bu.conf <<EOF
# Certain drivers are known not to support changing the MAC address.
# Disable touching the MAC address on such devices.

[device-rtl88x2bu]
match-device=driver:rtl88x2bu
wifi.scan-rand-mac-address=no
wifi.cloned-mac-address=preserve
ethernet.cloned-mac-address=preserve
EOF
chown root:root /usr/lib/NetworkManager/conf.d/rtl88x2bu.conf
}

rtl8821cu_conf(){
mkdir -p /usr/lib/NetworkManager/conf.d/
tee /usr/lib/NetworkManager/conf.d/rtl8821cu.conf <<EOF
# Certain drivers are known not to support changing the MAC address.
# Disable touching the MAC address on such devices.

[device-rtl8821cu]
match-device=driver:rtl8821cu
wifi.scan-rand-mac-address=no
wifi.cloned-mac-address=preserve
ethernet.cloned-mac-address=preserve
EOF

#mkdir -p /etc/modprobe.d
#tee /etc/modprobe.d/8821cu.conf <<EOF
#options 8821cu rtw_drv_log_level=0 rtw_led_ctrl=1 rtw_vht_enable=1 rtw_power_mgnt=0
#EOF
#chown root:root /etc/modprobe.d/8821cu.conf
chown root:root /usr/lib/NetworkManager/conf.d/rtl8821cu.conf
}

# extra firmware
extra_firmware(){
ARIA2="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
echo
echo Adding extra firmware.
sleep 1s
mkdir -p /lib/firmware/brcm
cd /lib/firmware/brcm
wget -cq --show-progress https://raw.githubusercontent.com/buildroot/buildroot/master/board/friendlyarm/nanopi-neo-plus2/rootfs_overlay/lib/firmware/brcm/brcmfmac43430-sdio.friendlyarm%2Cnanopi-neo-plus2.txt
cd ~
${ARIA2} https://github.com/armbian/firmware/archive/master.tar.gz
tar xf firmware-master.tar.gz
cp -R firmware-master/* /lib/firmware
rm -fdr firmware-master firmware-master.tar.gz master.tar.gz
cp /lib/firmware/brcm/brcmfmac4356-sdio.txt /lib/firmware/brcm/brcmfmac4356-sdio.friendlyarm,nanopc-t4.txt
mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem
rm -f UPDATE.mem
case `grep -Fx "odroidn2" "/root/board.txt" >/dev/null; echo $?` in
  0)
mkdir -p /lib/firmware/ene-ub6250
cd /lib/firmware/ene-ub6250
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/ms_init.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/ms_rdwr.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/msp_rdwr.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_init1.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_init2.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_rdwr.bin
chown -R root:root /lib/firmware/ene-ub6250
cd ~
    ;;
esac
case `grep -Fx "odroidn2plus" "/root/board.txt" >/dev/null; echo $?` in
  0)
mkdir -p /lib/firmware/ene-ub6250
cd /lib/firmware/ene-ub6250
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/ms_init.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/ms_rdwr.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/msp_rdwr.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_init1.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_init2.bin
${ARIA2} https://kernel.googlesource.com/pub/scm/linux/kernel/git/firmware/linux-firmware/+/master/ene-ub6250/sd_rdwr.bin
chown -R root:root /lib/firmware/ene-ub6250
cd ~
    ;;
esac
echo Done.
}

wireless_regdb(){
echo
echo Adding regdb.
sleep 1s
if cat /etc/os-release | grep Ubuntu > /dev/null 2>&1;
	then echo 'KERNEL=="regulatory*", ACTION=="change", SUBSYSTEM=="platform", RUN+="/sbin/crda"' > /etc/udev/rules.d/60-regdb.rules;
fi
git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
echo
echo Moving db files.
sleep 1s
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
echo Done.
}

# zramswap
zramswap_config(){
sed -i 's/#ALLOCATION=256/ALLOCATION=1024/g' /etc/default/zramswap
sed -i 's/#SIZE=256/SIZE=1024/g' /etc/default/zramswap
sed -i 's/#PRIORITY=100/PRIORITY=100/g' /etc/default/zramswap
}

# grab kernel version
fetch_version(){
echo 'INSTALLED_KERNEL="' > /root/kernel1
cat /usr/src/linux-headers*/include/config/kernel.release > /root/kernel2
echo '"' > /root/kernel3
paste -d '\0' kernel1 kernel2 kernel3  > /root/kernel.txt
rm -f kernel1 kernel2 kernel3
}

# add kernel version to img
rename_image(){
source kernel.txt
mv -f ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${IMAGE_DATE}.img
}

# compress image to img.xz
compress_image(){
source kernel.txt
mv -f ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${IMAGE_DATE}.img ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${IMAGE_DATE}.img
xz -zev --threads=${CORES} ${DEVICE_SOC}-${DISTRO}-${DISTRO_VERSION}-${INSTALLED_KERNEL}-${IMAGE_DATE}.img
}

# setup network
network_setup(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f credentials.txt /boot/rename_to_credentials.txt
mv -f credentials /usr/local/bin/
chmod +x /usr/local/bin/credentials
chown root:root /usr/local/bin/credentials
mkdir -p /etc/modprobe.d
echo "options 8821cu rtw_power_mgnt=0 rtw_enusbss=0 rtw_switch_usb_mode=1" > /etc/modprobe.d/8821cu.conf
chown root:root /etc/modprobe.d/8821cu.conf
rtl88x2bu_conf
rtl8821cu_conf

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF

echo
echo Creating wifi credentials.
sleep 1s
tee /etc/systemd/system/credentials.service <<EOF
[Unit]
Description=Credentials
After=firstboot.service network.target
Before=rc-local.service
ConditionPathExists=/usr/local/bin/credentials
[Service]
ExecStart=/usr/local/bin/credentials > /dev/null 2>&1
Type=oneshot
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target
EOF

systemctl enable credentials
echo Done.
}

# first boot service
firstboot_service(){
echo
echo Creating first boot.
sleep 1s
tee /etc/systemd/system/firstboot.service <<EOF
[Unit]
Description=First Boot
After=systemd-remount-fs.service
Before=credentials.service
ConditionPathExists=/usr/local/sbin/firstboot

[Service]
ExecStart=/etc/init.d/firstboot start > /dev/null 2>&1
Type=oneshot
RemainAfterExit=no

[Install]
WantedBy=multi-user.target
EOF
}

# kali force start service
kali_hack(){
tee /etc/systemd/system/kali-hack.service <<EOF
[Unit]
Description=Kali hack
After=rc-local.service
ConditionPathExists=/usr/local/sbin/kali-hack

[Service]
ExecStart=/usr/local/sbin/kali-hack > /dev/null 2>&1
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

tee /usr/local/sbin/kali-hack <<EOF
#!/bin/bash

service ssh start
sleep 3s
service avahi-daemon start
sleep 2s
service bluetooth start
EOF
chmod +x /usr/local/sbin/kali-hack
systemctl enable kali-hack
}
