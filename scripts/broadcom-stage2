#!/usr/bin/env bash
source /root/broadcom.txt
source /root/source.txt
source /root/userdata.txt
SCRIPTS_URL="https://raw.githubusercontent.com/pyavitz/scripts/master/"

set -o errexit
set -o pipefail
set -o nounset

echo 'nameserver 8.8.8.8' > /etc/resolv.conf
echo 'nameserver 8.8.4.4' >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

apt-get update
apt-get install -y apt-utils

### Locales
set_locales

### Timezone
set_timezone

if `grep -Fx 'DISTRO="ubuntu"' "/root/userdata.txt" >/dev/null;`
	then apt_preferences && echo;
fi
apt upgrade -y
apt dist-upgrade -y
if `grep -Fx 'DISTRO="debian"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS1} ${RPI} resolvconf;
fi
if `grep -Fx 'DISTRO="ubuntu"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS1} ${RPI} openresolv ifupdown;
fi
if `grep -Fx 'DISTRO="kali"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS1} ${RPI} resolvconf;
fi
#### Firstboot
echo
echo Creating firstboot.
tee /usr/local/sbin/firstboot <<EOF
#!/bin/bash
### Functions
grow_mmcblk () {
bash growpart /dev/mmcblk0 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk0p2 > /dev/null 2>&1
}

grow_mmcblk1 () {
bash growpart /dev/mmcblk1 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk1p2 > /dev/null 2>&1
}

grow_sda () {
bash growpart /dev/sda 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/sda2 > /dev/null 2>&1
}

chk_mmcblk () {
fsck.fat -trawl /dev/mmcblk0p1 > /dev/null 2>&1
}

chk_mmcblk1 () {
fsck.fat -trawl /dev/mmcblk1p1 > /dev/null 2>&1
}

chk_sda () {
fsck.fat -trawl /dev/sda1 > /dev/null 2>&1
}

### Grow Partition
if touch -c /dev/mmcblk0 2>/dev/null; then grow_mmcblk;
        else : &>/dev/null;
fi
if touch -c /dev/mmcblk1 2>/dev/null; then grow_mmcblk1;
        else : &>/dev/null;
fi
if touch -c /dev/sda 2>/dev/null; then grow_sda;
        else : &>/dev/null;
fi

### Fix boot partition
umount /boot
sleep 1s
if touch -c /dev/mmcblk0 2>/dev/null; then chk_mmcblk;
        else : &>/dev/null;
fi
if touch -c /dev/mmcblk1 2>/dev/null; then chk_mmcblk1;
        else : &>/dev/null;
fi
if touch -c /dev/sda 2>/dev/null; then chk_sda;
         else : &>/dev/null;
fi
sleep 1s
mount /boot
### Clean up
systemctl disable firstboot > /dev/null 2>&1
update-rc.d firstboot remove > /dev/null 2>&1
rm -f /var/cache/debconf/*
rm -f /usr/local/sbin/firstboot
EOF
echo Done.

#### Scripts
echo
echo Moving scripts.
sleep 1s
cd ~
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
mkdir -p /usr/lib/u-boot
mv -f u-boot.bin /usr/lib/u-boot/
cp board.txt /etc/opt/
# Scripts
mv -f run-setup /usr/local/bin/
mv -f sysinfo /usr/local/bin/
mv -f smon /usr/local/bin/
wget -cq --show-progress ${SCRIPTS_URL}write2usb
mv -f write2usb /usr/local/bin/
wget -cq --show-progress ${SCRIPTS_URL}deb-eeprom
mv -f deb-eeprom /usr/local/bin/
wget -cq --show-progress ${SCRIPTS_URL}swh
mv -f swh /usr/local/bin/
wget -cq --show-progress ${SCRIPTS_URL}wifidrv
mv -f wifidrv /usr/local/bin/
wget -cq --show-progress ${SCRIPTS_URL}governor
mv -f governor /usr/local/bin/
mv -f growpart /usr/bin/
rm -f write2mmc
rm -f sysinfo.bl
initrd_script
# Service
uinitrd
mv -f firstboot.init /etc/init.d/firstboot
chmod +x /usr/bin/growpart
chown root:root /usr/bin/growpart
chmod +x /etc/init.d/firstboot
chown root:root /etc/init.d/firstboot
chmod +x /etc/initramfs/post-update.d/99-uboot
chown root:root /etc/initramfs/post-update.d/99-uboot
chmod +x /usr/local/bin/*
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/bin/
chown -R root:root /usr/local/sbin/
echo Done.

#### MOTD
echo
echo Adding motd.
sleep 1s
mkdir -p /etc/update-motd.d
tee /etc/update-motd.d/15-brand <<EOF
#!/bin/bash
echo
toilet -f small --filter metal '${MOTD}'
echo 
EOF
if ls /etc/update-motd.d/10-help-text > /dev/null 2>&1
	then rm -f /etc/update-motd.d/10-help-text;
fi
mv -f 20-sysinfo /etc/update-motd.d/20-sysinfo
rm -f 20-sysinfo.bl
chmod +x /etc/update-motd.d/*
chown root:root /etc/update-motd.d/15-brand
chown root:root /etc/update-motd.d/20-sysinfo
echo Done.

#### Adding firmware
echo
echo Adding pi firmware.
sleep 1s
brcm_firmware
cd /lib/firmware/brcm
bcm_sdio_4-b
cd ~
echo Done.

#### Extra firmware
echo
echo Adding extra firmware.
sleep 1s
mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
install -Dm644 UPDATE.mem /lib/firmware/renesas_usb_fw.mem
rm -f UPDATE.mem
echo Done.

####
echo
echo Bluetooth udev rule.
sleep 1s
mkdir -p /lib/udev/rules.d/
mv -f 99-com.rules /lib/udev/rules.d/99-com.rules
echo Done.

#### Software
echo
echo Installing needed packages.
sleep 1s
apt -y clean
apt -y autoclean
apt update
if `grep -Fx 'DISTRO="debian"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS2} ${FIRMWARE};
fi
if `grep -Fx 'DISTRO="ubuntu"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS2};
fi
if `grep -Fx 'DISTRO="kali"' "/root/userdata.txt" >/dev/null;`
	then apt install -y ${PKGS2} ${FIRMWARE} dbus-user-session libical3;
fi
### Network Setup
network_setup

### ZSWAP
echo
echo Adjusting zramswap config.
sleep 1s
zramswap_config
echo Done.

### MOTD instructions
echo
echo Adding motd first boot.
sleep 1s
rm -f /etc/motd
mv -f motd /etc/motd
mv -f new.motd /etc/new.motd
chown root:root /etc/motd
chown root:root /etc/new.motd
echo Done.

#### Clean up packages
echo
echo Cleaning up.
sleep 1s
apt -y autoremove
apt -y clean
apt -y autoclean
echo Done.

###
echo
echo Adding regdb.
sleep 1s
apt update
apt install -y crda
git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
echo
echo Moving db files.
sleep 1s
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
echo Done.

### Adding sys-mods
echo
echo Building raspi-sys-mods package.
sleep 1s
apt install -y debhelper d-shlibs rfkill
git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git
cd raspberrypi-sys-mods
dpkg-buildpackage -us -uc
cd ~
dpkg -i raspberrypi-sys-mods*.deb
rm -fdR raspberrypi-sys-mods*
echo Removing vscode repo...
if ls /etc/apt/sources.list.d/vscode.list > /dev/null 2>&1
	then rm -f /etc/apt/sources.list.d/vscode.list;
fi
if ls /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null 2>&1
	then rm -f /etc/apt/trusted.gpg.d/microsoft.gpg;
fi
if ls /etc/apt/preferences.d/3rd_parties.pref > /dev/null 2>&1
	then rm -f /etc/apt/preferences.d/3rd_parties.pref;
fi
echo Done.

### Bluez firmware.
echo
echo Installing bluetooth.
sleep 1s
apt install -y bluetooth bluez bluez-tools
echo Done.
echo
bluez_firmware
echo Done.

### Pi Bluetooth
if `grep -Fx 'DISTRO="debian"' "/root/userdata.txt" >/dev/null;`
	then pi_bluetooth_debian;
fi
if `grep -Fx 'DISTRO="ubuntu"' "/root/userdata.txt" >/dev/null;`
	then pi_bluetooth_ubuntu;
fi
if `grep -Fx 'DISTRO="kali"' "/root/userdata.txt" >/dev/null;`
	then pi_bluetooth_debian;
fi

### Upgrading bluez
if `grep -Fx 'DISTRO="debian"' "/root/userdata.txt" >/dev/null;`
	then bluez_debian_choose;
fi
if `grep -Fx 'DISTRO="ubuntu"' "/root/userdata.txt" >/dev/null;`
	then bluez_ubuntu_choose;
fi
if `grep -Fx 'DISTRO="kali"' "/root/userdata.txt" >/dev/null;`
	then bluez_debian_unstable;
fi

### Certificates
echo
update-ca-certificates -f

###  Raspi userland
armv8_userland

### Adding eeprom
bcm2711_eeprom

### User
echo
user_config
user_eeprom

#### Kernel
echo
echo Installing kernel.
apt update
apt upgrade -y
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
echo Done.
sleep 1s
fetch_version

### Modules
if `grep -Fx "bcm2711" "/root/board.txt" >/dev/null;`
	then bcm_modules
fi

### Clean misc files
rm -f *.patch
rm -f *led*
rm -f *eeprom*

### Vchiq permissions
echo 'SUBSYSTEM=="vchiq",GROUP="video",MODE="0660"' > /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vcio",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vc-mem",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules

#### Led switches
led_service
led_switches

#### Create first boot
firstboot_service

if `grep -Fx 'DISTRO="kali"' "/root/userdata.txt" >/dev/null;`
	then kali_hack;
fi
####
echo
echo Creating governor service.
sleep 1s
tee /etc/systemd/system/governor.service <<EOF
[Unit]
Description=Set Governor
ConditionPathExists=/usr/local/bin/governor

[Service]
ExecStart=/usr/local/bin/governor -r &>/dev/null
Type=oneshot
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

#### Create RC.LOCAL
echo
echo Creating rc.local file.
sleep 1s
tee /etc/systemd/system/rc-local.service <<EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF
tee /etc/rc.local <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
EOF
chmod +x /etc/rc.local
echo Done.
### Enable services
echo
echo Enabling Services.
enable_services > /dev/null 2>&1
echo Done.

###### Finish
echo
echo Moving out of stage2 and creating image.
echo
sleep 1s

umount /proc /sys
