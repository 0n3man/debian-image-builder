#!/bin/bash
source lib/function/echoes
source lib/source
validation
source packaging/pkgvars
source lib/function/linux
source lib/function/github
source lib/function/patching
source lib/function/compiler
source lib/function/wireless
source board.txt
if [[ "$FAMILY" == "amlogic" || "$FAMILY" == "broadcom" || "$FAMILY" == "rockchip" ]]; then ${FAMILY}_bsp; fi
source userdata.txt
LINUX_VERSION=`echo "$VERSION" | sed -e 's/^\(.\{4\}\).*/\1/' | sed 's/-//g' | sed -r 's/\.$//'`

if [ $verbose -eq 1 ]; then
	set -x;
fi
if [ $ccache -eq 1 ]; then
	if [[ `command -v ccache` ]]; then
		rm -f {ccache.txt,gcc.txt};
		ccache_version;
	else
		sudo apt update; sudo apt upgrade -y; sudo apt install -y ccache;
		sleep 1s;
		rm -f {ccache.txt,gcc.txt};
		ccache_version;
	fi
fi
if [ $ccache -eq 0 ]; then
	rm -f {ccache.txt,gcc.txt};
	gcc_version;
fi
# sources directory
kernel_source
if [[ -d "${KERNEL}-${VERSION}" ]]; then
	CAP_KERNEL=`echo "${KERNEL}" | sed -e "s/\b\(.\)/\u\1/g"`
	echo -en "${WHT}${CAP_KERNEL}-${VERSION}${FIN}";
	echo -en " ${PNK}[${FIN}${YLW}removing${FIN}${PNK}]${FIN} ";
	rm -fdr ${KERNEL}-${VERSION};
	echo -e "${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}";
fi
# download and extract
download
# setup
if [[ -v SETUP ]] && [[ "$SETUP" == "vendor" ]] && [[ "$VERSION" == "4.9.y" || "$VERSION" == "4.19.y" ]]; then
	vendor_setup
else
	setup
fi
# patching
if [[ ! -z $FAMILY ]]; then
	linux_patching;
fi
# defconfig
if [[ -v SETUP ]] && [[ "$SETUP" == "vendor" ]]; then
	if [ $custom_defconfig -eq 1 ]; then
		cconfig;
	else
		vendor_config;
	fi
else
	if [ $custom_defconfig -eq 1 ]; then
		cconfig;
	else
		bconfig;
	fi
fi
# menuconfig
if [ $menuconfig -eq 1 ]; then
	menuconfig;
fi
# builddeb
if [ $crosscompile -eq 1 ]; then
	ccompile;
else
	ncompile;
fi
echo ""
# finish
cd ..
rm -f {*linux-image-dbg*.deb,linux-libc-dev*.deb,*.buildinfo,*.changes}
if [[ `ls ../${OUTPUT}/*linux*.deb` ]] > /dev/null 2>&1; then
	mkdir -p ../${OUTPUT}/tmp;
	mv -f ../${OUTPUT}/{*linux-image*.deb,*linux-headers*.deb} ../${OUTPUT}/tmp;
fi
mkdir -p ../${OUTPUT}
mv -f *.deb ../${OUTPUT}/
if [[ -f "../github.txt" ]]; then
	rm -f ../github.txt;
fi
echo_done

exit 0
