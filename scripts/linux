#!/bin/bash
source lib/source
source lib/function/echoes
source lib/function/linux
source lib/function/compiler
source lib/function/wireless
source userdata.txt > /dev/null 2>&1
UD=userdata.txt > /dev/null 2>&1

userdata(){
echo ""
echo "Please create a userdata.txt file"
while [ true ] ; do
read -t 10 -n 1
if [ $? = 0 ] ; then
exit ;
else
echo "run make config"
fi
done
}

if [ -f "$UD" ]; then
    echo "$UD file found." > /dev/null 2>&1
else 
    userdata
fi
validation
if [[ `grep -w "ccache=1" "userdata.txt"` ]]; then
	if [ -e /usr/bin/ccache ]; then
		rm -f ccache.txt gcc.txt
		ccache_version
	else
		sudo apt update
		sudo apt install -y ccache
		sleep 2s
		rm -f ccache.txt gcc.txt
		ccache_version;
	fi
fi

if [[ `grep -w "ccache=0" "userdata.txt"` ]]; then
	rm -f ccache.txt gcc.txt
	gcc_version;
fi

kernel-source

if [ -e ${KERNEL}-${VERSION} ]; then
	echo "" && echo -e "${PNK}Cleaning${FIN} ..."
	rm -fdr ${KERNEL}-${VERSION};
fi

### Download kernel and extract
case `grep -Fx "rc=1" "../userdata.txt" >/dev/null; echo $?` in
  0)
if [[ `wget -S --spider ${MLURL}${KERNEL}-${VERSION}.tar.gz 2>&1 | grep 'HTTP/1.1 200 OK'` ]];
	then mainline_download && mainline_extract; else echo && echo -e "${WHT}It appears the kernel you selected is not available${FIN}?" && exit;
fi
    ;;
  1)
check_stable
    ;;
esac

### Setup
setup

### Patches and Defconfigs
# AMLOGIC
if [[ `grep -w "lepotato" "../../board.txt"` ]]; then
	le_potato;
fi
if [[ `grep -w "odroidn2" "../../board.txt"` ]]; then
	odroid_n2;
fi
if [[ `grep -w "odroidn2plus" "../../board.txt"` ]]; then
	odroid_n2;
fi
if [[ `grep -w "odroidc4" "../../board.txt"` ]]; then
	odroid_c4;
fi
if [[ `grep -w "radxazero" "../../board.txt"` ]]; then
	radxa_zero;
fi

# ALLWINNER
if [[ `grep -w "tritium" "../../board.txt"` ]]; then
	tritium_h5;
fi
if [[ `grep -w "pine64" "../../board.txt"` ]]; then
	pine_a64;
fi
if [[ `grep -w "nanopi" "../../board.txt"` ]]; then
	nanopi_neo_plus2;
fi

# ROCKCHIP
if [[ `grep -w "renegade" "../../board.txt"` ]]; then
	rk3328_roc_cc;
fi
if [[ `grep -w "rock64" "../../board.txt"` ]]; then
	rk3328_rock64;
fi
if [[ `grep -w "nanopc" "../../board.txt"` ]]; then
	rk3399_nanopc;
fi

# BROADCOM
if [[ `grep -w "bcm2711" "../../board.txt"` ]]; then
	bcm_2711;
fi

### Menuconfig
if [[ `grep -w "menuconfig=1" "../../userdata.txt"` ]]; then
	menuconfig;
fi

### Build deb
builddeb
echo

### 
cd ..
rm -f linux-libc-dev*.deb
rm -f *.buildinfo
rm -f *.changes
allwinner_output
amlogic_output
rockchip_output
broadcom_output
echo_done
