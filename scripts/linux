#!/bin/bash
source lib/source.txt
source lib/echo_func.txt
source lib/kernel_func.txt
source lib/amlogic_func.txt
source lib/allwinner_func.txt
source userdata.txt
CLN="\e[1;33m"

# AMLOGIC
case `grep -Fx "amlogic" "board.txt" >/dev/null; echo $?` in
  0)
    aml_kernel
    ;;
esac

# ALLWINNER
case `grep -Fx "allwinner" "board.txt" >/dev/null; echo $?` in
  0)
    all_kernel
    ;;
esac

if ls ${KERNEL}-${VERSION} > /dev/null 2>&1;
	then echo -e "${CLN}Cleaning${FIN} ..." && rm -fdr ${KERNEL}-${VERSION};
fi
if ls *.deb > /dev/null 2>&1;
	then mkdir -p debs && mv -f *.deb debs/;
fi

### Download kernel
case `grep -Fx "mainline=1" "../userdata.txt" >/dev/null; echo $?` in
  0)
    mainline_download
    ;;
  1)
    stable_download
    ;;
  *)
    #
    ;;
esac


### Extract
case `grep -Fx "mainline=1" "../userdata.txt" >/dev/null; echo $?` in
  0)
    mainline_extract
    ;;
  1)
    stable_extract
    ;;
  *)
    #
    ;;
esac

### Setup
case `grep -Fx "armv6" "../board.txt" >/dev/null; echo $?` in
  0)
    setupv6
    ;;
  1)
    setup
    ;;
esac

### Patches and Defconfigs
# AMLOGIC
case `grep -Fx "lepotato" "../../board.txt" >/dev/null; echo $?` in
  0)
    le_potato
    ;;
esac
case `grep -Fx "odroidn2" "../../board.txt" >/dev/null; echo $?` in
  0)
    odroid_n2
    ;;
esac
case `grep -Fx "odroidc4" "../../board.txt" >/dev/null; echo $?` in
  0)
    odroid_c4
    ;;
esac

# ALLWINNER
case `grep -Fx "tritium" "../../board.txt" >/dev/null; echo $?` in
  0)
    tritium_h5
    ;;
esac
case `grep -Fx "pine64" "../../board.txt" >/dev/null; echo $?` in
  0)
    pine_a64
    ;;
esac
case `grep -Fx "nanopi" "../../board.txt" >/dev/null; echo $?` in
  0)
    nanopi_neo_plus2
    ;;
esac
case `grep -Fx "opir1" "../../board.txt" >/dev/null; echo $?` in
  0)
    orangepi_r1
    ;;
esac

### Menuconfig
case `grep -Fx "menuconfig=1" "../../userdata.txt" >/dev/null; echo $?` in
  0)
    menu_config
    ;;
esac

### Build deb
case `grep -Fx "armv6" "../../board.txt" >/dev/null; echo $?` in
  0)
    architecture_v6
    ;;
  1)
    architecture_v8
    ;;
esac
echo
cd ..
rm -f linux-libc-dev*.deb
rm -f *.buildinfo
rm -f *.changes
echo_done
