#!/bin/bash
source lib/function/echoes
source lib/source
validation
source packaging/pkgvars
source lib/function/uboot
source lib/function/patching
source lib/function/compilers
# override the board file
if [[ -f "board.txt" ]] && [[ -f "override.txt" ]]; then . override.txt; override_board; fi
if [[ -f "board.txt" ]]; then . board.txt; else noboard; fi
source lib/function/${FAMILY}
source userdata.txt
# force precompiled u-boot package if host machine is running debian bookworm
if [[ "$BOARD" == "lepotato" ]] && [[ "$HOST_CODENAME" =~ ^(bookworm|noble)$ ]]; then PRECOMPILED_UBOOT="true"; fi
# debug switch
if [ $VERBOSE -eq 1 ]; then set -x; fi
# compile native or cross
compile
# override the user data file
if [[ "$FORCE_VERSION" == "true" ]]; then
	if [ -z $FORCE_UBOOT_VERSION ]; then :; else UBOOT_VERSION="${FORCE_UBOOT_VERSION}"; fi
fi
# compiler
uboot_compilers
# boards
if [[ "$PRECOMPILED_UBOOT" == "true" ]]; then
	uboot_precompiled_packaging
else
	if [[ "$FAMILY" == "amlogic" ]]; then . lib/function/fip; fi
	if [[ "$FAMILY" =~ ^(allwinner|freescale|rockchip)$ ]]; then . lib/function/atf; . lib/function/crust; fi
	if [[ "$FAMILY" == "spacemit" ]]; then . lib/function/opensbi; fi
	${FAMILY}_uboot_run
fi

exit 0
