#!/bin/bash
source lib/function/echoes
source lib/source
validation
source packaging/pkgvars
source lib/function/uboot
source lib/function/patching
source lib/function/modconfig
# override the board file
if [[ -f "override.txt" ]]; then
	. override.txt
	override_board
fi
source board.txt
source userdata.txt

# debug switch
if [ $VERBOSE -eq 1 ]; then
	set -x
fi
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm64" ]]; then
	CROSSCOMPILE="0"
fi
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm" ]]; then
	CROSSCOMPILE="1"
fi
if [[ "$HOST_ARCH" == "x86_64"  ]] && [[ "$ARCH" == "arm" || "$ARCH" == "arm64" ]]; then
	CROSSCOMPILE="1"
fi
# override userdata file
if [[ "$FORCE_VERSION" == "true" ]]; then
	if [ -z $FORCE_UBOOT_VERSION ]; then :; else UBOOT_VERSION="${FORCE_UBOOT_VERSION}"; fi
fi
# compiler
if [ $CCACHE -eq 1 ]; then
	if [[ `command -v ccache` ]]; then
		:;
	else
		apt install -y ccache
	fi
fi
if [ $CCACHE -eq 1 ]; then
	DEST="/usr/lib/ccache"
else
	DEST="/usr/bin"
fi
NATIVE="${DEST}/${COMPILER}"
CROSS="${DEST}/${CROSS_COMPILE}${COMPILER}"
# boards
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$PRECOMPILED_UBOOT" == "true" ]]; then
		uboot_precompiled_packaging
	else
		source lib/function/fip
		${FAMILY}-uboot-string
	fi
fi
if [[ "$FAMILY" == "allwinner" || "$FAMILY" == "rockchip" ]]; then
	if [[ "$PRECOMPILED_UBOOT" == "true" ]]; then
		uboot_precompiled_packaging
	else
		source lib/function/atf
		${FAMILY}-uboot-string
	fi
fi
if [[ "$FAMILY" == "broadcom" || "$FAMILY" == "freescale" || "$FAMILY" == "samsung" ]]; then
	${FAMILY}-uboot-string
fi

exit 0
