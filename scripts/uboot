#!/bin/bash
source lib/function/echoes
source lib/source
validation
source packaging/pkgvars
source lib/function/uboot
source lib/function/patching
source lib/function/modconfig
source lib/function/compilers
# override the board file
if [[ -f "override.txt" ]]; then
	. override.txt
	override_board
fi
source board.txt
source userdata.txt
# force precompiled u-boot package if host machine is running debian bookworm
if [[ "$BOARD" == "lepotato" ]] && [[ "$HOST_CODENAME" == "bookworm" ]]; then
	PRECOMPILED_UBOOT="true"
fi
# debug switch
if [ $VERBOSE -eq 1 ]; then set -x; fi
# compile native or cross
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm64" ]]; then CROSSCOMPILE="0"; fi
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm" ]]; then CROSSCOMPILE="1"; fi
if [[ "$HOST_ARCH" == "x86_64"  ]] && [[ "$ARCH" == "arm" || "$ARCH" == "arm64" ]]; then CROSSCOMPILE="1"; fi
# override the user data file
if [[ "$FORCE_VERSION" == "true" ]]; then
	if [ -z $FORCE_UBOOT_VERSION ]; then :; else UBOOT_VERSION="${FORCE_UBOOT_VERSION}"; fi
fi
# compiler
uboot_compilers
# boards
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$PRECOMPILED_UBOOT" == "true" ]]; then
		uboot_precompiled_packaging
	else
		. lib/function/fip
		${FAMILY}_uboot_run
	fi
fi
if [[ "$FAMILY" == "allwinner" || "$FAMILY" == "freescale" || "$FAMILY" == "rockchip" ]]; then
	if [[ "$PRECOMPILED_UBOOT" == "true" ]]; then
		uboot_precompiled_packaging
	else
		. lib/function/atf
		${FAMILY}_uboot_run
	fi
fi
if [[ "$FAMILY" == "broadcom" || "$FAMILY" == "samsung" ]]; then
	${FAMILY}_uboot_run
fi

exit 0
