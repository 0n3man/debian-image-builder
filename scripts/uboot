#!/bin/bash
source lib/function/echoes
source lib/source
validation
source lib/function/uboot
source lib/function/compiler
source lib/function/modconfig
source board.txt > /dev/null 2>&1
source userdata.txt > /dev/null 2>&1

if [ $verbose -eq 1 ]; then
	set -x;
fi
if [ $ccache -eq 1 ]; then
	if [[ `command -v ccache` ]]; then
		rm -f {ccache.txt,gcc.txt};
		ccache_version;
	else
		sudo apt update;
		sudo apt upgrade -y;
		sudo apt install -y ccache;
		sleep 1s;
		rm -f {ccache.txt,gcc.txt};
		ccache_version;
	fi
fi

if [ $ccache -eq 0 ]; then
	rm -f {ccache.txt,gcc.txt};
	gcc_version;
fi
# boards
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$BOARD" == "odroidc1" ]]; then
		mkdir -p ${OUTPUT}/
		echo -e "Using precompiled binaries.";
		cp -f ${CUBOOT}/${BOARD}-bl1.bin ${OUTPUT}/bl1.bin;
		cp -f ${CUBOOT}/${BOARD}-u-boot.bin ${OUTPUT}/u-boot.bin;
		ls -ls ${OUTPUT}/*.bin;
	else
		source lib/function/fip;
		amlogic-uboot-string;
	fi
fi
if [[ "$FAMILY" == "allwinner" ]]; then
	source lib/function/atf;
	allwinner-uboot-string;
fi
if [[ "$FAMILY" == "broadcom" ]]; then
	bcm2711-uboot-string;
fi
if [[ "$FAMILY" == "rockchip" ]]; then
	if [[ "$BOARD" == "odroidm1" ]]; then
		echo -e "Using precompiled binary.";
		mkdir -p ${OUTPUT}/
		cp -f ${CUBOOT}/${BOARD}-nomtd-u-boot.bin ${OUTPUT}/u-boot.itb;
		ls -ls ${OUTPUT}/u-boot.itb;
	else
		source lib/function/atf;
		rockchip-uboot-string;
	fi
fi
if [[ "$FAMILY" == "samsung" ]]; then
	if [[ "$BOARD" == "odroidxu4" ]]; then
		echo -e "Using precompiled binaries.";
		mkdir -p ${OUTPUT}/
		cp -f ${CUBOOT}/${BOARD}-bl1.bin ${OUTPUT}/bl1.bin;
		cp -f ${CUBOOT}/${BOARD}-bl2.bin ${OUTPUT}/bl2.bin;
		cp -f ${CUBOOT}/${BOARD}-u-boot.bin ${OUTPUT}/u-boot.bin;
		cp -f ${CUBOOT}/${BOARD}-tzsw.bin ${OUTPUT}/tzsw.bin;
		ls -ls ${OUTPUT}/*.bin;
	fi
fi
exit 0
