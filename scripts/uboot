#!/bin/bash
source lib/function/echoes
source lib/source
validation
source packaging/pkgvars
source lib/function/uboot
source lib/function/uboot-patching
source lib/function/compiler
source lib/function/modconfig
source board.txt
source userdata.txt

# debug switch
if [ $verbose -eq 1 ]; then
	set -x
fi

# override userdata file
if [[ -v FORCE_UBOOT_VERSION ]]; then
	UBOOT_VERSION="${FORCE_UBOOT_VERSION}"
fi

# compiler
if [ $ccache -eq 1 ]; then
	if [[ `command -v ccache` ]]; then
		rm -f {ccache.txt,gcc.txt}
		ccache_version
	else
		apt update; apt upgrade -y; apt install -y ccache
		sleep .75
		rm -f {ccache.txt,gcc.txt}
		ccache_version
	fi
fi
if [ $ccache -eq 0 ]; then
	rm -f {ccache.txt,gcc.txt}
	gcc_version
fi

# boards
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$BOARD" == "odroidc1" || "$BOARD" == "odroidn2l" ]]; then
		uboot_precompiled_packaging
	else
		source lib/function/fip
		${FAMILY}-uboot-string
	fi
fi
if [[ "$FAMILY" == "allwinner" || "$FAMILY" == "rockchip" ]]; then
	if [[ "$BOARD" == "rock5b" ]]; then
		uboot_precompiled_packaging
	else
		source lib/function/atf
		${FAMILY}-uboot-string
	fi
fi
if [[ "$FAMILY" == "broadcom" || "$FAMILY" == "freescale" || "$FAMILY" == "samsung" ]]; then
	${FAMILY}-uboot-string
fi

exit 0
