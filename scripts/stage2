#!/usr/bin/env bash
source /root/userdata.txt
if [ $VERBOSE -eq 1 ]; then set -x; fi
source /root/source.txt
source /root/board.txt
source /root/services.txt
source /root/${FAMILY}.txt
source /root/networking.txt
SCRIPTS_URL="https://raw.githubusercontent.com/pyavitz/scripts/master/"

set -o errexit
set -o pipefail
set -o nounset

if [ $NETWORKMANAGER -eq 0 ]; then
	if [[ "$DISTRO_VERSION" == "jammy" ]]; then
		# systemd-resolved breaks static ip when using ifupdown, disable on jammy jellyfish
		unlink /etc/resolv.conf;
		if [ -f /etc/resolv.conf ]; then
			rm -f /etc/resolv.conf;
		fi
		systemctl disable systemd-resolved;
	fi
fi
echo "nameserver ${NAMESERVER1}" > /etc/resolv.conf
echo "nameserver ${NAMESERVER2}" >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

if [[ "$FAMILY" == "broadcom" ]]; then
	if [[ "$DISTRO" == "ubuntu" ]]; then
		apt_preferences
		echo ""
	fi
fi
apt-get update
apt-get install -y apt-utils

# locales
set_locales

# timezone
set_timezone

apt upgrade -y
apt dist-upgrade -y
apt autoremove -y
# network variables
if [ $NETWORKMANAGER -eq 1 ]; then
	NETWORKING="network-manager";
	if [[ "$DISTRO" == "devuan" ]]; then
		NETWORKING_EXTRA=""
	fi
else
	NETWORKING="ifupdown";
	if [[ "$DISTRO" == "devuan" ]]; then
		NETWORKING_EXTRA="ifupdown-extra"
	fi
fi
# install base and extra packages
if [[ "$DISTRO" == "debian" || "$DISTRO" == "raspbian" ]]; then
	apt install -y ${PKGS} ${USER_PKGS} ${DEBIAN_FW} resolvconf haveged ${NETWORKING}
fi
if [[ "$DISTRO" == "devuan" ]]; then
	apt install -y openssh-client openssh-server --no-install-recommends
	apt install -y ${PKGS} ${USER_PKGS} ${DEBIAN_FW} openresolv haveged ${NETWORKING} ${NETWORKING_EXTRA}
fi
if [[ "$DISTRO" == "ubuntu" ]]; then
	if [[ "$DISTRO_VERSION" == "focal" || "$ARCH" == "arm" ]]; then
		UBUNTU_FW=""
	fi
	if [[ "$DISTRO_VERSION" == "kinetic" || "$DISTRO_VERSION" == "lunar" || "$DISTRO_VERSION" == "mantic" ]]; then
		apt install -y ${PKGS} ${USER_PKGS} systemd-resolved rng-tools5 ${UBUNTU_FW} ${NETWORKING}
	else
		apt install -y ${PKGS} ${USER_PKGS} openresolv rng-tools5 ${UBUNTU_FW} ${NETWORKING}
	fi
	if [ $NETWORKMANAGER -eq 0 ]; then
		if [[ "$DISTRO_VERSION" == "jammy" ]]; then
			# disable systemd-networkd and mask systemd-networkd-wait-online
			systemctl disable systemd-networkd
			systemctl mask systemd-networkd-wait-online
		fi
	fi
fi
if [[ "$DISTRO" == "kali" ]]; then
	apt install -y ${PKGS} ${USER_PKGS} ${DEBIAN_FW} dbus-user-session libical3 resolvconf haveged ntpdate ${NETWORKING}
fi
if [[ "$FAMILY" == "broadcom" ]]; then
	apt install -y ${RPI}
fi
# apt clean
if [[ "$DISTRO" == "ubuntu" ]]; then
	if [[ -f "/etc/update-motd.d/88-esm-announce" ]]; then
		rm -f /etc/update-motd.d/88-esm-announce
		echo '#!/bin/sh' > /etc/update-motd.d/88-esm-announce
		chmod +x /etc/update-motd.d/88-esm-announce
	fi
	if [[ -f "/etc/apt/apt.conf.d/20apt-esm-hook.conf" ]]; then
		rm -f /etc/apt/apt.conf.d/20apt-esm-hook.conf
		touch /etc/apt/apt.conf.d/20apt-esm-hook.conf
	fi
	# remove ubuntu pro adverts apt hook
	echo 'DPkg::Post-Invoke {"/usr/local/sbin/remove-ubuntu-advert";};' > /etc/apt/apt.conf.d/80remove-ubuntu-advert
	cat <<EOF > "/usr/local/sbin/remove-ubuntu-advert"
#!/bin/bash

if [[ -f "/etc/update-motd.d/88-esm-announce" ]]; then
	rm -f /etc/update-motd.d/88-esm-announce
	echo '#!/bin/sh' > /etc/update-motd.d/88-esm-announce
	chmod +x /etc/update-motd.d/88-esm-announce
fi
if [[ -f "/etc/apt/apt.conf.d/20apt-esm-hook.conf" ]]; then
	rm -f /etc/apt/apt.conf.d/20apt-esm-hook.conf
	touch /etc/apt/apt.conf.d/20apt-esm-hook.conf
fi
EOF
	chmod +x /usr/local/sbin/remove-ubuntu-advert
fi
apt -y clean
apt -y autoclean
# hostname / username / password
if [[ "$HOSTNAME" == "default" ]]; then
	# default hostname
	echo -n "${BOARD}" > /etc/hostname
	sed -i "1 a 127.0.1.1	${BOARD}" /etc/hosts
else
	# custom hostname
	echo -n "${HOSTNAME}" > /etc/hostname
	sed -i "1 a 127.0.1.1	${HOSTNAME}" /etc/hosts
fi
if [ $USERACCT -eq 0 ]; then
	echo "";
	adduser ${USERNAME} --gecos ${NAME} --disabled-password
	echo "${USERNAME}:${PASSWORD}" | chpasswd
	adduser ${USERNAME} sudo
	adduser ${USERNAME} audio
	adduser ${USERNAME} dialout
	adduser ${USERNAME} video
	adduser ${USERNAME} disk
	adduser ${USERNAME} plugdev
	adduser ${USERNAME} netdev
	adduser ${USERNAME} bluetooth
	adduser ${USERNAME} input
	adduser ${USERNAME} tty
	adduser ${USERNAME} i2c
	groupadd gpio
	groupadd spi
	adduser ${USERNAME} gpio
	adduser ${USERNAME} spi
fi
if [ $USERACCT -eq 1 ]; then
	mkdir -p /boot;
	mkdir -p /usr/local/sbin;
	mv -f /root/useracct/useraccount /usr/local/sbin/;
	chmod +x /usr/local/sbin/useraccount;
	mv -f /root/{nanorc-user,user-ini} /etc/opt/;
	mv -f /root/useracct/useraccount.txt /boot/useraccount.txt;
	if [[ "$DISTRO" == "devuan" ]]; then
		mkdir -p /etc/init.d;
		mv -f /root/useracct/useraccount.init /etc/init.d/useraccount;
		chmod +x /etc/init.d/useraccount;
		update-rc.d useraccount defaults 5;
		rm -fdr /root/useracct;
	else
		mkdir -p /etc/systemd/system/;
		mv -f /root/useracct/useraccount.service /etc/systemd/system/;
		systemctl enable useraccount > /dev/null 2>&1;
		rm -fdr /root/useracct;
	fi
fi
# set root:toor password
if [ $ROOTPASSWD -eq 1 ]; then echo "root:toor" | chpasswd; fi
# user scripts stage2
if [ $USCRIPTS -eq 1 ]; then uscripts_stage2; fi
# initrd / uinitrd
cd ~
if [[ -f "/root/99-initrd" ]]; then
	mkdir -p /etc/initramfs/post-update.d/
	mv -f /root/99-initrd /etc/initramfs/post-update.d/;
	chmod +x /etc/initramfs/post-update.d/99-initrd;
	chown root:root /etc/initramfs/post-update.d/99-initrd;
fi
if [[ "$EFI" == "true" ]]; then
	# uefi kernel, initrd, dtb and grub cfg script
	mkdir -p /etc/initramfs/post-update.d/
	if [[ "$FAMILY" == "broadcom" ]]; then
		mv -f /root/99-uefi-brcm /etc/initramfs/post-update.d/99-uefi;
		rm -f /root/99-uefi;
	else
		mv -f /root/99-uefi /etc/initramfs/post-update.d/;
		rm -f /root/99-uefi-brcm;
	fi
	chmod +x /etc/initramfs/post-update.d/99-uefi;
	chown root:root /etc/initramfs/post-update.d/99-uefi;
else
	rm -f /root/{99-uefi,99-uefi-brcm};
fi

# alsa asound.state file
if [[ -f "/root/asound.state" ]]; then
	mkdir -p /var/lib/alsa
	mv -f /root/asound.state /var/lib/alsa/asound.state
fi
if [[ -f "/root/asound.conf" ]]; then
	mkdir -p /etc
	mv -f /root/asound.conf /etc/asound.conf
fi

# led triggers
if [[ -f "/root/led-trigger" ]]; then
	mv -f /root/led-trigger /usr/local/sbin/led-trigger;
	chmod +x /usr/local/sbin/led-trigger;
	chown -R root:root /usr/local/sbin/;
fi

# bluetooth helper
if [[ "$BOARD" == "pinea64plus" ]]; then
	pine64_bthelper
	if [[ "$DISTRO" == "debian" || "$DISTRO" == "ubuntu" || "$DISTRO" == "kali" ]]; then
		pine64_bt_service > /dev/null 2>&1
	fi
fi

# brcm patchram
if [[ "$BOARD" == "nanopineoplus2" ]]; then
	echo ""
	echo "Installing brcm patchram plus ..."
	cd ~
	git clone https://github.com/pyavitz/brcm_patchram_plus.git patchram
	cd patchram
	make
	cp -f brcm_patchram_plus /usr/bin
	cd ~
	rm -fdr patchram
	echo "bluetooth" >> /etc/modules
	echo "hidp" >> /etc/modules
	echo "rfcomm" >> /etc/modules
	echo "bnep" >> /etc/modules
	echo "hci_uart" >> /etc/modules
fi

# cubietruck blacklist hci_uart / bluetooth
if [[ "$BOARD" == "cubietruck" ]]; then
	ct_blacklist
fi

# orangepi3 lts wifi
if [[ "$BOARD" == "orangepi3lts" ]]; then
	# disabled by default as the module is unstable and panics
	echo "# sprdwl_ng" >> /etc/modules
fi

# board information
if [[ -f "/etc/opt/board.txt" ]]; then
	:;
else
	mkdir -p /etc/opt
	cp /root/board.txt /etc/opt/
fi

# write2mmc script
cd ~
mv -f write2mmc /usr/local/bin/
echo 'DISCLAIMER="true"' | tee /etc/default/write2mmc > /dev/null 2>&1
echo 'VERBOSITY="1"' | tee -a /etc/default/write2mmc > /dev/null 2>&1
chmod +x /usr/local/bin/write2mmc
chown root:root /usr/local/bin/write2mmc

# scripts
echo ""
echo "Moving scripts ..."
sleep 1s
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
mv -f {add-overlay,bootcmd,menu-config,menu-config-update,setup,smon,sysinfo} /usr/local/bin/
if [[ "$SERIES" == "meson-g12a" || "$SERIES" == "meson-g12b" || "$SERIES" == "meson-sm1" ]] && [[ -f "/root/amlmixer" ]]; then
	mv -f amlmixer /usr/local/bin/
fi
# tweaks
if [[ -f "/usr/bin/tweaks" ]]; then
	tweaks_service > /dev/null 2>&1
fi
# tvbox flash recovery script
if [[ "$BOARD" == "x96air" ]]; then
	mv -f flash-recovery /usr/local/sbin/
	chmod +x /usr/local/sbin/flash-recovery
fi
if [ $NETWORKMANAGER -eq 0 ]; then
	wget -cq --show-progress ${SCRIPTS_URL}swh -P /usr/local/bin/
fi
wget -cq --show-progress ${SCRIPTS_URL}governor -P /usr/local/bin/
if [[ "$FAMILY" == "broadcom" ]]; then
	wget -cq --show-progress ${SCRIPTS_URL}update-fw -P /usr/local/bin/
	if [[ "$SERIES" == "bcm2711" ]]; then
		wget -cq --show-progress ${SCRIPTS_URL}deb-eeprom -P /usr/local/bin/
		#wget -cq --show-progress ${SCRIPTS_URL}write2usb -P /usr/local/bin/;
	fi
fi
mv -f growpart /usr/bin/
mv -f firstboot /usr/local/sbin/
chmod +x /usr/local/sbin/firstboot
chmod +x /usr/bin/growpart
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
chown -R root:root /usr/local/sbin/
if [[ "$BOARD" == "nanopineoplus2" ]]; then
	mv -f nanopi-bthelper /usr/local/sbin/bthelper
	chmod +x /usr/local/sbin/bthelper
fi
if [[ "$BOARD" == "tinker" ]]; then
	mv -f rtc-ds1307 /usr/local/sbin/
	chmod +x /usr/local/sbin/rtc-ds1307
fi
if [[ "$DISTRO" == "devuan" ]]; then
	mkdir -p /etc/init.d;
	mv -f firstboot.init /etc/init.d/firstboot
	mv -f leds.init /etc/init.d/leds
	mv -f credentials.init /etc/init.d/credentials
	mv -f governor.init /etc/init.d/governor
	if [ $NETWORKMANAGER -eq 1 ]; then
		rm -f network.init
	else
		mv -f network.init /etc/init.d/network
	fi
	mv -f zramswap.init /etc/init.d/zramswap
	if [[ "$BOARD" == "pinea64plus" ]]; then
		mv -f bthelper.init /etc/init.d/bthelper
		rm -f /etc/init.d/leds
	fi
	if [[ "$BOARD" == "nanopineoplus2" ]]; then
		mv -f bthelper.init /etc/init.d/bthelper
	fi
fi

# motd
mkdir -p /etc/update-motd.d
if [[ -f "/etc/update-motd.d/10-uname" ]]; then
	rm -f /etc/update-motd.d/10-uname
fi
if [[ -f "/etc/update-motd.d/10-help-text" ]]; then
	rm -f /etc/update-motd.d/10-help-text
fi
if [[ -f "/etc/update-motd.d/00-header" ]]; then
	rm -f /etc/update-motd.d/00-header
fi
mv -f {00-header,15-brand,20-sysinfo,90-dynamic-motd} /etc/update-motd.d/
chmod +x /etc/update-motd.d/*
echo "# DYNAMIC MOTD VARIABLES" > /etc/default/dynamic-motd
echo H_POS='"'-c'"' >> /etc/default/dynamic-motd
echo B_POS='"'-r'"' >> /etc/default/dynamic-motd
echo BRANDING='"'false'"' >> /etc/default/dynamic-motd
echo T_FONT='"'small'"' >> /etc/default/dynamic-motd
echo T_FILTER='"'metal'"' >> /etc/default/dynamic-motd
echo MENUCONFIG='"'true'"' >> /etc/default/dynamic-motd
chown -R root:root /etc/update-motd.d/{00-header,15-brand,20-sysinfo,90-dynamic-motd}
rm -f /etc/motd
echo "" > /etc/motd
chown root:root /etc/motd

# kali tweaks service
if [[ "$DISTRO" == "kali" ]] && [[ -f "/root/kali-tweaks" ]]; then
	mv -f /root/kali-tweaks /usr/local/sbin/kali-tweaks
	chmod +x /usr/local/sbin/kali-tweaks
	kali_tweaks > /dev/null 2>&1
fi

# clean
rm -f {amlmixer,asound.conf,asound.state,*-tweaks,*-bthelper,sysinfo,20-sysinfo,write2mmc,*.init,99-initrd,99-uefi,bootcmd,add-overlay,smon,flash-recovery,rtc-ds1307}

# move mc skins
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
chown -R root:root /root
if [ $USERACCT -eq 0 ]; then
	mkdir -p /home/${USERNAME}/.config/mc
	mv -f user-ini /home/${USERNAME}/.config/mc/ini
	mv -f nanorc-user /home/${USERNAME}/.nanorc
	chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}
fi

# firmware
if [[ "$FAMILY" == "allwinner" ]]; then
	if [[ "$BOARD" == "bananapim2zero" || "$BOARD" == "bananapip2zero" || "$BOARD" == "nanopineoplus2" || "$BOARD" == "cubietruck" ]]; then
		alt_firmware
	else
		extra_firmware
	fi
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$BOARD" == "radxazero" ]]; then
		radxazero_firmware
	else
		extra_firmware
	fi
fi
if [[ "$FAMILY" == "freescale" || "$FAMILY" == "rockchip" || "$FAMILY" == "samsung" ]]; then
	extra_firmware
fi
if [[ "$FAMILY" == "broadcom" ]]; then
	brcm_firmware
fi

# network setup
if [ $VERBOSE -eq 1 ]; then
	realtek_conf
	if [ $NETWORKMANAGER -eq 1 ]; then
		networkmanager-setup
		networkmanager-credentials
	else
		ifupdown-setup
		ifupdown-credentials
		router_ifupdown
	fi
	if [[ "$DISTRO" == "debian" || "$DISTRO" == "kali" || "$DISTRO" == "raspbian" || "$DISTRO" == "ubuntu" ]]; then
		credentials_service
	fi
else
	realtek_conf > /dev/null 2>&1
	if [ $NETWORKMANAGER -eq 1 ]; then
		networkmanager-setup > /dev/null 2>&1
		networkmanager-credentials > /dev/null 2>&1
	else
		ifupdown-setup > /dev/null 2>&1
		ifupdown-credentials > /dev/null 2>&1
		router_ifupdown > /dev/null 2>&1
	fi
	if [[ "$DISTRO" == "debian" || "$DISTRO" == "kali" || "$DISTRO" == "raspbian" || "$DISTRO" == "ubuntu" ]]; then
		credentials_service > /dev/null 2>&1
	fi
fi

# allocate zramswap
if [[ -f "/etc/default/zramswap" ]]; then
	sed -i 's/#ALLOCATION=256/ALLOCATION=1024/g' /etc/default/zramswap
	sed -i 's/#SIZE=256/SIZE=1024/g' /etc/default/zramswap
	sed -i 's/#PRIORITY=100/PRIORITY=100/g' /etc/default/zramswap
fi

# wireless regulatory db
wireless_regdb

# raspberry Pi
if [[ "$FAMILY" == "broadcom" ]]; then
	mkdir -p /etc/udev/rules.d/
	mkdir -p /lib/udev/rules.d/
	if [[ -f "/root/99-com.rules" ]]; then
		mv -f 99-com.rules /etc/udev/rules.d/
	fi
	if [[ -f "/root/10-local-rpi.rules" ]]; then
		# camera
		mv -f 10-local-rpi.rules /lib/udev/rules.d/
	fi
	if [[ -f "/root/60-rpi.gpio-common.rules" ]]; then
		mv -f 60-rpi.gpio-common.rules /lib/udev/rules.d/
	fi
	# sys-mods
	echo ""
	echo "Installing raspi-sys-mods ..."
	sleep .50
	git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git
	if [[ "$DISTRO" == "devuan" ]]; then
		mv raspberrypi-sys-mods.patch raspberrypi-sys-mods/
		cd raspberrypi-sys-mods
		git checkout -q 46ae4208397d662fc4f5d0cc9acc85395f852af1
		patch -p1 < raspberrypi-sys-mods.patch
		rm -f raspberrypi-sys-mods.patch
	else
		rm -f raspberrypi-sys-mods.patch
		cd raspberrypi-sys-mods
		git checkout -q 46ae4208397d662fc4f5d0cc9acc85395f852af1
	fi
	dpkg-buildpackage -us -uc
	cd ~
	dpkg -i raspberrypi-sys-mods*.deb
	rm -fdR raspberrypi-sys-mods*
	if [[ -f "/etc/apt/sources.list.d/vscode.list" ]]; then
		rm -f /etc/apt/sources.list.d/vscode.list
	fi
	if [[ -f "/etc/apt/trusted.gpg.d/microsoft.gpg" ]]; then
		rm -f /etc/apt/trusted.gpg.d/microsoft.gpg
	fi
	if [[ -f "/etc/apt/preferences.d/3rd_parties.pref" ]]; then
		rm -f /etc/apt/preferences.d/3rd_parties.pref
	fi
	echo "Done."
	# userland
	rpi_userland
	# eeprom
	if [[ "$SERIES" == "bcm2711" ]]; then
		${SERIES}_eeprom
	fi
	# modules
	brcm_modules > /dev/null 2>&1
	# clean misc files
	rm -f {*.patch,*led*,*eeprom*,*.rules}
fi

# sudoers file
if [[ -f "/etc/sudoers.d/010_pi-nopasswd" ]]; then
	rm -f /etc/sudoers.d/010_pi-nopasswd
fi
if [ $USERACCT -eq 0 ]; then
	echo ""
	tee /etc/sudoers.d/010_${USERNAME}-nopasswd <<EOF
${USERNAME} ALL=(ALL) NOPASSWD: ALL
EOF
fi

# remove zstd compression (not supported by vednor kernels)
if [[ `grep -w "COMPRESS=zstd" "/etc/initramfs-tools/initramfs.conf"` ]]; then
	sed -i 's/COMPRESS=zstd/COMPRESS=xz/g' /etc/initramfs-tools/initramfs.conf
fi

# uimage
if [[ "$BOARD" == "odroidc1" ]]; then
	make_uimage
fi

# u-boot and kernel packages
echo ""
echo "Installing linux and u-boot package ..."
apt update
apt upgrade -y
if [[ "$EFI" == "true" ]]; then
	apt install -y grub-efi
fi
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
sleep 1s
# take note of linux kernel release
if [ -f /usr/src/linux-headers-*/include/config/kernel.release ]; then
	KERNEL_RELEASE=`cat /usr/src/linux-headers-*/include/config/kernel.release`
else
	KERNEL_RELEASE=`ls /boot/config-* | sed 's/\/boot\/config-//g'`
fi
echo -e INSTALLED_KERNEL='"'$KERNEL_RELEASE'"' > /root/kernel.txt
if [[ "$EFI" == "true" ]]; then
	# 99-uefi uses /etc/opt/board.txt, this script does not.
	# re-source /root/board.txt to ensure no confusion.
	. /root/board.txt
fi

# system.journal corrupted or uncleanly shut down, renaming and replacing
if [[ -f "/etc/systemd/journald.conf" ]]; then
	sed -i 's/#Storage=auto/Storage=volatile/g' /etc/systemd/journald.conf
	sed -i 's/#SystemMaxFileSize=/SystemMaxFileSize=50M/g' /etc/systemd/journald.conf
	sed -i 's/#SystemMaxFiles=100/SystemMaxFiles=5/g' /etc/systemd/journald.conf
fi

# whiptail color palette
if [[ "$DISTRO" == "ubuntu" ]]; then
	mkdir -p /etc/newt
	cat <<EOF > "/etc/newt/palette.dark"
root=,black
checkbox=,black
entry=,black
label=black,
actlistbox=,black
helpline=,black
roottext=lightgray,black
emptyscale=black
disabledentry=black,
EOF
	ln -sf /etc/newt/palette.dark  /etc/alternatives/newt-palette
fi

# udev rules
if [[ "$FAMILY_EXT" == "odroid" || "$FAMILY_EXT" == "ac2xx" || "$FAMILY_EXT" == "rk3288" ]]; then
	${FAMILY_EXT}_udev_rules > /dev/null 2>&1
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	aml_gpiomem_rules > /dev/null 2>&1
fi
if [[ "$FAMILY_EXT" == "exynos" ]]; then
	mkdir -p /etc/modprobe.d/
	echo "blacklist ina231_sensor" > /etc/modprobe.d/blacklist-odroid.conf
fi
if [[ "$BOARD" == "nanopir4s" || "$BOARD" == "nanopir4se" || "$BOARD" == "nanopir5c" || "$BOARD" == "nanopir5s" ]]; then
	router_udev_rules
fi

# services
if [[ "$FAMILY" == "rockchip" ]] && [[ -f "/etc/default/haveged" ]]; then
	sed -i 's/#DAEMON_ARGS=""/DAEMON_ARGS="-w 1024"/g' /etc/default/haveged
fi

# bcm2835 hack
if [[ "$SERIES" == "bcm2835" ]] && [[ -f "/lib/ld-linux.so.3" ]]; then
	ln -s /lib/ld-linux.so.3 /lib/ld-linux-armhf.so.3
fi
if [[ "$SERIES" == "bcm2835" ]] && [[ "$DISTRO" == "debian" ]] && [[ -f "/etc/default/haveged" ]]; then
	mkdir -p /etc/systemd/system/haveged.service.d
	echo -e '[Service]\nSystemCallFilter=uname' > /etc/systemd/system/haveged.service.d/fix.conf
	systemctl daemon-reload > /dev/null 2>&1
	systemctl restart haveged > /dev/null 2>&1
fi
echo ""
echo "Enabling Services ..."
if [[ "$BOARD" == "nanopineoplus2" ]]; then
	if [[ "$DISTRO" == "devuan" ]]; then
		:;
	else
		nanopi_bt_service > /dev/null 2>&1
	fi
fi
if [[ "$DISTRO" == "devuan" ]]; then
	echo "== Sysvinit"
	enable_sysvinit > /dev/null 2>&1
else
	firstboot_service > /dev/null 2>&1
	governor_service > /dev/null 2>&1
	led_service > /dev/null 2>&1
	if [[ -f "/usr/local/sbin/led-trigger" ]]; then
		:;
	else
		systemctl disable leds > /dev/null 2>&1
	fi
	rc-local_service > /dev/null 2>&1
	echo "== Systemd"
	enable_systemd > /dev/null 2>&1
fi

# own it
if [ $USERACCT -eq 0 ]; then
	chown -R ${USERNAME}:${USERNAME} /home/${USERNAME};
fi
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/sbin/

# finish
echo ""
echo "Finalizing ..."
echo ""
sleep .75

umount /proc /sys
