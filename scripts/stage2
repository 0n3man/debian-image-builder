#!/usr/bin/env bash
source /root/userdata.txt > /dev/null 2>&1
if [ $verbose -eq 1 ]; then
	set -x;
fi
source /root/source.txt
source /root/board.txt > /dev/null 2>&1
source /root/services.txt
source /root/${FAMILY}.txt
source /root/networking.txt
SCRIPTS_URL="https://raw.githubusercontent.com/pyavitz/scripts/master/"

set -o errexit
set -o pipefail
set -o nounset

if [ $networkmanager -eq 0 ]; then
	if [[ "$DISTRO_VERSION" == "jammy" ]] || [[ "$DISTRO_VERSION" == "kinetic" ]]; then
		# systemd-resolved breaks static ip when using ifupdown
		# it will be disabled on jammy jellyfish
		unlink /etc/resolv.conf;
		if [ -f /etc/resolv.conf ]; then
			rm -f /etc/resolv.conf;
		fi
		systemctl disable systemd-resolved;
	fi
fi
echo "nameserver ${NAMESERVER1}" > /etc/resolv.conf
echo "nameserver ${NAMESERVER2}" >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

if [[ "$BOARD" == "raspi4" ]]; then
	if [[ "$DISTRO" == "ubuntu" ]]; then
		apt_preferences;
		echo "";
	fi
fi
apt-get update
apt-get install -y apt-utils

# Locales
set_locales

# Timezone
set_timezone

apt upgrade -y
apt dist-upgrade -y
apt autoremove -y
# Set network variables
if [ $networkmanager -eq 1 ]; then
	NETWORKING="network-manager";
	if [[ "$DISTRO" == "devuan" ]]; then
		NETWORKING_EXTRA="";
	fi
else
	NETWORKING="ifupdown";
	if [[ "$DISTRO" == "devuan" ]]; then
		NETWORKING_EXTRA="ifupdown-extra";
	fi
fi
# Install base and extra packages
if [[ "$DISTRO" == "debian" ]]; then
	apt install -y ${PKGS} ${USER_PKGS} ${FIRMWARE} resolvconf haveged ${NETWORKING};
fi
if [[ "$DISTRO" == "devuan" ]]; then
	apt install -y openssh-client openssh-server --no-install-recommends;
	apt install -y ${PKGS} ${USER_PKGS} ${FIRMWARE} openresolv haveged ${NETWORKING} ${NETWORKING_EXTRA};
fi
if [[ "$DISTRO" == "ubuntu" ]]; then
	apt install -y ${PKGS} ${USER_PKGS} openresolv rng-tools5 ${NETWORKING};
	if [ $networkmanager -eq 0 ]; then
		if [[ "$DISTRO_VERSION" == "jammy" ]] || [[ "$DISTRO_VERSION" == "kinetic" ]]; then
			# disable systemd-networkd and mask systemd-networkd-wait-online
			systemctl disable systemd-networkd;
			systemctl mask systemd-networkd-wait-online;
		fi
	fi
fi
if [[ "$DISTRO" == "kali" ]]; then
	apt install -y ${PKGS} ${USER_PKGS} ${FIRMWARE} dbus-user-session libical3 resolvconf haveged ${NETWORKING};
fi
if [[ "$BOARD" == "raspi4" ]]; then
	apt install -y ${RPI};
fi
# apt clean
apt -y clean
apt -y autoclean
# User scripts stage2
if [ $uscripts -eq 1 ]; then
	echo "";
	uscripts_stage2;
fi
# hostname / username / password
if [[ "$HOSTNAME" == "default" ]]; then
	# default hostname
	echo -n "${BOARD}" > /etc/hostname;
	sed -i "1 a 127.0.1.1	${BOARD}" /etc/hosts;
else
	# custom hostname
	echo -n "${HOSTNAME}" > /etc/hostname;
	sed -i "1 a 127.0.1.1	${HOSTNAME}" /etc/hosts;
fi
if [ $useracct -eq 0 ]; then
	echo "";
	adduser ${USERNAME} --gecos ${NAME} --disabled-password
	echo "${USERNAME}:${PASSWORD}" | chpasswd
	adduser ${USERNAME} sudo
	adduser ${USERNAME} audio
	adduser ${USERNAME} dialout
	adduser ${USERNAME} video
	adduser ${USERNAME} disk
	adduser ${USERNAME} plugdev
	adduser ${USERNAME} netdev
	adduser ${USERNAME} bluetooth
	adduser ${USERNAME} input
	adduser ${USERNAME} tty
	adduser ${USERNAME} i2c
	groupadd gpio
	groupadd spi
	adduser ${USERNAME} gpio
	adduser ${USERNAME} spi
fi
if [ $useracct -eq 1 ]; then
	mkdir -p /boot;
	mkdir -p /usr/local/sbin;
	mv -f /root/useracct/useraccount /usr/local/sbin/;
	chmod +x /usr/local/sbin/useraccount;
	mv -f /root/{nanorc-user,user-ini} /etc/opt/;
	mv -f /root/useracct/useraccount.txt /boot/rename_to_useraccount.txt;
	if [[ "$DISTRO" == "devuan" ]]; then
		mkdir -p /etc/init.d;
		mv -f /root/useracct/useraccount.init /etc/init.d/useraccount;
		chmod +x /etc/init.d/useraccount;
		update-rc.d useraccount defaults 5;
		rm -fdr /root/useracct;
	else
		mkdir -p /etc/systemd/system/;
		mv -f /root/useracct/useraccount.service /etc/systemd/system/;
		systemctl enable useraccount > /dev/null 2>&1;
		rm -fdr /root/useracct;
	fi
fi
if [ $rootpasswd -eq 1 ]; then
	root_password;
fi
# Initrd / uInitrd
cd ~
if [ -f /root/99-initrd ]; then
	mkdir -p /etc/initramfs/post-update.d/
	mv -f /root/99-initrd /etc/initramfs/post-update.d/;
	chmod +x /etc/initramfs/post-update.d/99-initrd;
	chown root:root /etc/initramfs/post-update.d/99-initrd;
fi
if [[ "$EFI" == "true" ]]; then
	# uefi kernel, initrd, dtb and grub cfg script
	mkdir -p /etc/initramfs/post-update.d/
	mv -f /root/99-uefi /etc/initramfs/post-update.d/;
	chmod +x /etc/initramfs/post-update.d/99-uefi;
	chown root:root /etc/initramfs/post-update.d/99-uefi;
else
	rm -f /root/99-uefi;
fi

# LED triggers
if [ -f "/root/led-trigger" ]; then 
	mv -f /root/led-trigger /usr/local/sbin/led-trigger;
	chmod +x /usr/local/sbin/led-trigger;
	chown -R root:root /usr/local/sbin/;
fi

# Bluetooth helper
if [[ "$BOARD" == "pine64" ]]; then
	pine64_bthelper > /dev/null 2>&1;
	if [[ "$DISTRO" == "devuan" ]]; then
		:;
	else
		pine64_bt_service > /dev/null 2>&1;
	fi
fi

# Brcm patchram
if [[ "$BOARD" == "nanopi" ]]; then
	echo ""
	echo "Installing brcm patchram plus ..."
	cd ~
	git clone https://github.com/pyavitz/brcm_patchram_plus.git patchram
	cd patchram
	make
	cp -f brcm_patchram_plus /usr/bin
	cd ~
	rm -fdr patchram
	echo "bluetooth" >> /etc/modules
	echo "hidp" >> /etc/modules
	echo "rfcomm" >> /etc/modules
	echo "bnep" >> /etc/modules
	echo "hci_uart" >> /etc/modules
	echo "Done.";
fi

# Cubietruck blacklist hci_uart / bluetooth
if [[ "$BOARD" == "cubietruck" ]]; then
	ct_blacklist;
fi

# eMMC flash tools
cd ~
mkdir -p /etc/opt
cp board.txt /etc/opt/
mv -f write2mmc /usr/local/bin/
# move u-boot bin(s)
if [[ "$FAMILY" == "allwinner" ]] || [[ "$FAMILY" == "broadcom" ]] || [[ "$FAMILY" == "freescale" ]] || [[ "$FAMILY" == "samsung" ]]; then
	mkdir -p /usr/lib/u-boot;
	mv -f *.bin /usr/lib/u-boot/;
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	if [ $petitboot -eq 1 ]; then
		:;
	else
		mkdir -p /usr/lib/u-boot;
		mv -f *.bin /usr/lib/u-boot/;
	fi
fi
if [[ "$FAMILY" == "rockchip" ]]; then
	mkdir -p /usr/lib/u-boot;
	mv -f *.bin *.itb /usr/lib/u-boot/;
fi
chmod +x /usr/local/bin/write2mmc
chown root:root /usr/local/bin/write2mmc

# Scripts
echo ""
echo "Moving scripts ..."
sleep 1s
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
mv -f setup /usr/local/bin/
mv -f sysinfo /usr/local/bin/
mv -f bootcmd /usr/local/bin/
mv -f menu-config /usr/local/bin
mv -f menu-config-update /usr/local/bin
# Amlogic tweaks
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$BOARD" == "lepotato" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
	if [[ "$BOARD" == "odroidn2" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
	if [[ "$BOARD" == "odroidn2plus" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
	if [[ "$BOARD" == "radxazero" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
fi
# Rockchip tweaks
if [[ "$FAMILY" == "rockchip" ]]; then
	if [[ "$BOARD" == "nanopc" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
	if [[ "$BOARD" == "nanopir5s" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
	if [[ "$BOARD" == "rockpro64" ]]; then
		tweaks_service > /dev/null 2>&1;
	fi
fi
mv -f smon /usr/local/bin/
if [ $networkmanager -eq 0 ]; then
	wget -cq --show-progress ${SCRIPTS_URL}swh -P /usr/local/bin/;
fi
wget -cq --show-progress ${SCRIPTS_URL}governor -P /usr/local/bin/
if [[ "$BOARD" == "raspi4" ]]; then
	wget -cq --show-progress ${SCRIPTS_URL}deb-eeprom -P /usr/local/bin/;
	wget -cq --show-progress ${SCRIPTS_URL}write2usb -P /usr/local/bin/;
	wget -cq --show-progress ${SCRIPTS_URL}update-fw -P /usr/local/bin/;
fi
mv -f growpart /usr/bin/
mv -f firstboot /usr/local/sbin/
chmod +x /usr/local/sbin/firstboot
chmod +x /usr/bin/growpart
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
chown -R root:root /usr/local/sbin/
if [[ "$BOARD" == "nanopi" ]]; then
	mv -f nanopi-bthelper /usr/local/sbin/;
	chmod +x /usr/local/sbin/nanopi-bthelper;
fi
if [[ "$DISTRO" == "devuan" ]]; then
	mkdir -p /etc/init.d;
	mv -f firstboot.init /etc/init.d/firstboot;
	mv -f leds.init /etc/init.d/leds;
	mv -f credentials.init /etc/init.d/credentials;
	mv -f governor.init /etc/init.d/governor;
	if [ $networkmanager -eq 1 ]; then
		rm -f network.init;
	else
		mv -f network.init /etc/init.d/network;
	fi
	mv -f zramswap.init /etc/init.d/zramswap;
	if [[ "$BOARD" == "pine64" ]]; then
		mv -f bthelper.init /etc/init.d/bthelper;
		rm -f /etc/init.d/leds;
	fi
	if [[ "$BOARD" == "nanopi" ]]; then
		mv -f bthelper.init /etc/init.d/bthelper;
	fi
fi
echo "Done."

# MOTD
mkdir -p /etc/update-motd.d
if [ -f /etc/update-motd.d/10-uname ]; then
	rm -f /etc/update-motd.d/10-uname;
fi
if [ -f /etc/update-motd.d/10-help-text ]; then
	rm -f /etc/update-motd.d/10-help-text;
fi
if [ -f /etc/update-motd.d/00-header ]; then
	rm -f /etc/update-motd.d/00-header;
fi
mv -f {00-header,15-brand,20-sysinfo,90-dynamic-motd} /etc/update-motd.d/
chmod +x /etc/update-motd.d/*
echo "# DYNAMIC MOTD VARIABLES" > /etc/default/dynamic-motd
echo "H_POS=-c" >> /etc/default/dynamic-motd
echo "B_POS=-r" >> /etc/default/dynamic-motd
echo "BRANDING=false" >> /etc/default/dynamic-motd
echo "T_FONT=small" >> /etc/default/dynamic-motd
echo "T_FILTER=metal" >> /etc/default/dynamic-motd
echo "MENUCONFIG=true" >> /etc/default/dynamic-motd
chown root:root /etc/update-motd.d/00-header
chown root:root /etc/update-motd.d/15-brand
chown root:root /etc/update-motd.d/20-sysinfo
chown root:root /etc/update-motd.d/90-dynamic-motd
rm -f /etc/motd
echo "" > /etc/motd
chown root:root /etc/motd

# Clean
rm -f {lepotato-tweaks,odroid-tweaks,irq-tweaks,nanopc-tweaks,nanopir5s-tweaks,rk3399-tweaks,rzero-tweaks,nanopi-bthelper,sysinfo,20-sysinfo,write2mmc,*.init,99-initrd,99-uefi,boot-cmd}

# Move mc skins
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
chown -R root:root /root
if [ $useracct -eq 0 ]; then
	mkdir -p /home/${USERNAME}/.config/mc;
	mv -f user-ini /home/${USERNAME}/.config/mc/ini;
	mv -f nanorc-user /home/${USERNAME}/.nanorc;
	chown -R ${USERNAME}:${USERNAME} /home/${USERNAME};
fi

# Firmware
if [[ "$FAMILY" == "allwinner" ]]; then
	if [[ "$BOARD" == "nanopi" ]] || [[ "$BOARD" == "cubietruck" ]]; then
		alt_firmware;
	else
		extra_firmware;
	fi
fi
if [[ "$FAMILY" == "amlogic" ]]; then
	if [[ "$BOARD" == "radxazero" ]]; then
		radxazero_firmware;
	else
		extra_firmware;
	fi
fi
if [[ "$FAMILY" == "freescale" ]]; then
	extra_firmware;
fi
if [[ "$BOARD" == "raspi4" ]]; then
	rpi_firmware;
fi
if [[ "$FAMILY" == "rockchip" ]]; then
	extra_firmware;
fi
if [ "$FAMILY" == "samsung" ]; then
	extra_firmware;
fi

# Network Setup
if [ $networkmanager -eq 1 ]; then
	networkmanager-setup > /dev/null 2>&1;
	networkmanager-credentials > /dev/null 2>&1;
else
	ifupdown-setup > /dev/null 2>&1;
	ifupdown-credentials > /dev/null 2>&1;
fi
if [[ "$DISTRO" == "devuan" ]]; then
	:;
else
	credentials_service > /dev/null 2>&1;
fi

# Allocate zramswap
if [ -f /etc/default/zramswap ]; then
	sed -i 's/#ALLOCATION=256/ALLOCATION=1024/g' /etc/default/zramswap;
	sed -i 's/#SIZE=256/SIZE=1024/g' /etc/default/zramswap;
	sed -i 's/#PRIORITY=100/PRIORITY=100/g' /etc/default/zramswap;
fi

# Regulatory db
wireless_regdb

# Bluetooth helper install
if [[ "$BOARD" == "pine64" ]]; then
	pine64_bthelper2;
fi

# Raspberry Pi
if [[ "$BOARD" == "raspi4" ]]; then
	mkdir -p /lib/udev/rules.d/;
	mv -f 99-com.rules /lib/udev/rules.d/99-com.rules;
	# Sys-mods
	echo "";
	echo "Installing raspi-sys-mods ...";
	sleep 1s;
	git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git;
	git checkout -q 46ae4208397d662fc4f5d0cc9acc85395f852af1
	if [[ "$DISTRO" == "devuan" ]]; then
		mv raspberrypi-sys-mods.patch raspberrypi-sys-mods/;
		cd raspberrypi-sys-mods;
		patch -p1 < raspberrypi-sys-mods.patch;
		rm -f raspberrypi-sys-mods.patch;
	else
		rm -f raspberrypi-sys-mods.patch;
		cd raspberrypi-sys-mods;
	fi
	dpkg-buildpackage -us -uc;
	cd ~;
	dpkg -i raspberrypi-sys-mods*.deb;
	rm -fdR raspberrypi-sys-mods*;
	if [ -e /etc/apt/sources.list.d/vscode.list ];
		then rm -f /etc/apt/sources.list.d/vscode.list;
	fi
	if [ -e /etc/apt/trusted.gpg.d/microsoft.gpg ];
		then rm -f /etc/apt/trusted.gpg.d/microsoft.gpg;
	fi
	if [ -e /etc/apt/preferences.d/3rd_parties.pref ];
		then rm -f /etc/apt/preferences.d/3rd_parties.pref;
	fi
	echo "Done.";
	# Userland
	armv8_userland;
	# Eeprom
	bcm2711_eeprom;
	# Modules
	bcm_modules > /dev/null 2>&1;
	# Clean misc files
	rm -f {*.patch,*led*,*eeprom*};
	# Vchiq permissions
	echo 'SUBSYSTEM=="vchiq",GROUP="video",MODE="0660"' > /etc/udev/rules.d/10-vchiq-permissions.rules
	echo 'SUBSYSTEM=="vcio",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
	echo 'SUBSYSTEM=="vc-mem",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
fi

# Sudoers file
if [ -f /etc/sudoers.d/010_pi-nopasswd ]; then
	rm -f /etc/sudoers.d/010_pi-nopasswd;
fi
if [ $useracct -eq 0 ]; then
	echo "";
	tee /etc/sudoers.d/010_${USERNAME}-nopasswd <<EOF
${USERNAME} ALL=(ALL) NOPASSWD: ALL
EOF
fi

# Remove zstd compression (not supported by vednor kernels)
if [[ "$DISTRO" == "ubuntu" ]]; then
	if [[ "$DISTRO_VERSION" == "jammy" ]] || [[ "$DISTRO_VERSION" == "kinetic" ]]; then
		if [[ `grep -w "COMPRESS=zstd" "/etc/initramfs-tools/initramfs.conf"` ]]; then
			sed -i 's/COMPRESS=zstd/COMPRESS=xz/g' /etc/initramfs-tools/initramfs.conf;
		fi
	fi
fi

# uImage
if [[ "$BOARD" == "odroidc1" ]]; then
	make_uimage > /dev/null 2>&1;
fi

# Kernel
echo ""
echo "Installing kernel ..."
apt update
apt upgrade -y
if [[ "$EFI" == "true" ]]; then
	apt install -y grub-efi;
fi
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
echo "Done."
sleep 1s
# take note of linux kernel release
if [ -f /usr/src/linux-headers-*/include/config/kernel.release ]; then
	KERNEL_RELEASE=`cat /usr/src/linux-headers-*/include/config/kernel.release`
else
	KERNEL_RELEASE=`ls /boot/config-* | sed 's/\/boot\/config-//g'`
fi
echo -e INSTALLED_KERNEL='"'$KERNEL_RELEASE'"' > /root/kernel.txt

if [[ "$EFI" == "true" ]]; then
	# 99-uefi uses /etc/opt/board.txt, this script does not.
	# re-source /root/board.txt to ensure no confusion.
	source /root/board.txt
fi

# system.journal corrupted or uncleanly shut down, renaming and replacing
if [ -f /etc/systemd/journald.conf ]; then
	sed -i 's/#Storage=auto/Storage=volatile/g' /etc/systemd/journald.conf;
	sed -i 's/#SystemMaxFileSize=/SystemMaxFileSize=50M/g' /etc/systemd/journald.conf;
	sed -i 's/#SystemMaxFiles=100/SystemMaxFiles=5/g' /etc/systemd/journald.conf;
fi

# Whiptail color palette
if [[ "$DISTRO" == "ubuntu" ]]; then
	mkdir -p /etc/newt;
	palette-dark > /dev/null 2>&1;
	ln -sf /etc/newt/palette.dark  /etc/alternatives/newt-palette;
fi

# Odroid udev rules
if [[ "$FAMILY_EXT" == "odroid" ]]; then
	odroid_udev_rules > /dev/null 2>&1;
fi

# Services
if [[ "$FAMILY" == "rockchip" ]]; then
	if [ -f /etc/default/haveged ]; then
		sed -i 's/#DAEMON_ARGS=""/DAEMON_ARGS="-w 1024"/g' /etc/default/haveged;
	fi
fi
echo ""
echo "Enabling Services ..."
if [[ "$DISTRO" == "kali" ]]; then
	kali_hack > /dev/null 2>&1;
fi
if [[ "$BOARD" == "nanopi" ]]; then
	if [[ "$DISTRO" == "devuan" ]]; then
		:;
	else
		nanopi_bt_service > /dev/null 2>&1;
	fi
fi
if [[ "$DISTRO" == "devuan" ]]; then
	echo "== Sysvinit"
	enable_sysvinit > /dev/null 2>&1;
else
	firstboot_service > /dev/null 2>&1;
	governor_service > /dev/null 2>&1;
	led_service > /dev/null 2>&1;
	if [ -f /usr/local/sbin/led-trigger ]; then
		:;
	else
		systemctl disable leds > /dev/null 2>&1;
	fi
	rc-local_service > /dev/null 2>&1;
	echo "== Systemd"
	enable_systemd > /dev/null 2>&1;
fi
echo "Done."

# Own it
if [ $useracct -eq 0 ]; then
	chown -R ${USERNAME}:${USERNAME} /home/${USERNAME};
fi
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/sbin/

# Finish
echo ""
echo "Finalizing ..."
echo ""
sleep 1s

umount /proc /sys
