#!/bin/bash
source lib/allwinner_func.txt
source lib/source.txt
source userdata.txt

set -x
RAM=0
PROXY=""
IMAGE_FOLDER="img/"
case `grep -Fx "tritium" "board.txt" >/dev/null; echo $?` in
  0)
	DEVICE_SOC="h5-libretech-all-h3-cc"
    ;;
esac
case `grep -Fx "nanopi" "board.txt" >/dev/null; echo $?` in
  0)
	DEVICE_SOC="h5-nanopi-neo-plus2"
    ;;
esac
case `grep -Fx "pine64" "board.txt" >/dev/null; echo $?` in
  0)
	DEVICE_SOC="a64-pine64-plus"
    ;;
esac
case `grep -Fx "opir1" "board.txt" >/dev/null; echo $?` in
  0)
	DEVICE_SOC="h2-plus-orangepi-r1"
    ;;
esac
set -eux -o pipefail
IMAGE_LINUX_LOADADDR="0x1080000"
IMAGE_FILE_SUFFIX="$(date +%F)"
IMAGE_FILE_NAME="${DEVICE_SOC}-debian-${DEBIAN_VERSION}-${IMAGE_FILE_SUFFIX}.img"
if [ $RAM -ne 0 ]; then
	IMAGE_FOLDER="ram/"
fi
mkdir -p "$IMAGE_FOLDER"
if [ $RAM -ne 0 ]; then
	mount -t tmpfs -o size=3G tmpfs $IMAGE_FOLDER
fi
case `grep -Fx 'DEBIAN_VERSION="unstable"' "userdata.txt" >/dev/null; echo $?` in
  0)
    truncate -s ${IMGSIZE_UNSTABLE} "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
    ;;
  1)
    truncate -s ${IMGSIZE} "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
    ;;
esac
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
2048
a
t
b
3613280

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p1"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p1
sync
umount p1
case `grep -Fx "tritium" "board.txt" >/dev/null; echo $?` in
  0)
   tritium_flashbin
    ;;
esac
case `grep -Fx "nanopi" "board.txt" >/dev/null; echo $?` in
  0)
   nanopi_flashbin
    ;;
esac
case `grep -Fx "pine64" "board.txt" >/dev/null; echo $?` in
  0)
   pine64_flashbin
    ;;
esac
case `grep -Fx "opir1" "board.txt" >/dev/null; echo $?` in
  0)
   opir1_flashbin
    ;;
esac
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p1

### fetch partition uuid
partition_uuid

### Rootfs

case `grep -Fx "armv7" "board.txt" >/dev/null; echo $?` in
  0)
    tar -xf debian-${DEBIAN_VERSION}-rootfs-armhf.tar.xz -C p1/
    ;;
  1)
    tar -xf debian-${DEBIAN_VERSION}-rootfs-aarch64.tar.xz -C p1/
    ;;
esac

mkdir -p p1/etc/apt/apt.conf.d p1/etc/dpkg/dpkg.cfg.d
echo "force-unsafe-io" > "p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io"

mkdir -p p1/usr/bin
case `grep -Fx "armv7" "board.txt" >/dev/null; echo $?` in
  0)
    cp $(which "qemu-arm-static") p1/usr/bin
    ;;
  1)
    cp $(which "qemu-aarch64-static") p1/usr/bin
    ;;
esac

# sources dot list
choose_release

tee p1/etc/fstab <<EOF
UUID=${ROOT_UUID}	/		ext4	defaults,noatime,nodiratime,commit=600,errors=remount-ro 0 1
tmpfs		/tmp	tmpfs	defaults,nosuid 0 0
EOF

if [ -n "$PROXY" ] ; then
	tee "p1/etc/apt/apt.conf.d/30proxy" <<EOF
Acquire::http::proxy "http://127.0.0.1:3142";
EOF
fi

# setup stage2
cp scripts/allwinner-stage2 p1/root
cp lib/allwinner_func.txt p1/root
cp lib/source.txt p1/root
cp userdata.txt p1/root
cp root-pid.txt p1/root
cp board.txt p1/root
cp files/misc/* p1/root
cp files/rules/* p1/root
cp files/scripts/* p1/root
cp files/users/* p1/root
cp firmware/fw-0a5c_21e8.hcd p1/root
cp ${ALLSRC}/*.deb p1/root
case `grep -Fx "tritium" "board.txt" >/dev/null; echo $?` in
  0)
    cp binary/tritium/u-boot-sunxi-with-spl.bin p1/root
    ;;
esac
case `grep -Fx "nanopi" "board.txt" >/dev/null; echo $?` in
  0)
    cp binary/nanopi/u-boot-sunxi-with-spl.bin p1/root
    ;;
esac
case `grep -Fx "pine64" "board.txt" >/dev/null; echo $?` in
  0)
    cp binary/pine64/u-boot-sunxi-with-spl.bin p1/root
    ;;
esac
case `grep -Fx "opir1" "board.txt" >/dev/null; echo $?` in
  0)
    cp binary/opir1/u-boot-sunxi-with-spl.bin p1/root
    cp binary/opir1/mkimage p1/boot
    ;;
esac
# mount and chroot
mount -o bind /dev p1/dev
mount -o bind /dev/pts p1/dev/pts
chroot p1 /root/allwinner-stage2
# unmount
umount p1/dev/pts
umount p1/dev
case `grep -Fx "armv7" "board.txt" >/dev/null; echo $?` in
  0)
    rm p1/usr/bin/qemu-arm-static
    ;;
  1)
    rm p1/usr/bin/qemu-aarch64-static
    ;;
esac
rm p1/root/allwinner-stage2
rm p1/root/source.txt
rm p1/root/userdata.txt
rm p1/root/root-pid.txt
rm p1/root/allwinner_func.txt
rm p1/root/board.txt
rm -f p1/var/cache/debconf/*

if [ -n "$PROXY" ] ; then
	rm p1/etc/apt/apt.conf.d/30proxy
fi
rm p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io

### Finish

e4defrag -c p1
umount p1

losetup -d "${IMAGE_LOOP_DEV}"
mv "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" "${IMAGE_FILE_NAME}"
if [ $RAM -ne 0 ]; then
	umount "${IMAGE_FOLDER}"
fi
rmdir "${IMAGE_FOLDER}"
rmdir p1
rm -f root-id.txt root-pid.txt board.txt