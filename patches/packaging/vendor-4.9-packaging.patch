diff -Naur a/scripts/package/builddeb b/scripts/package/builddeb
--- a/scripts/package/builddeb	2022-02-28 02:53:10.000000000 -0500
+++ b/scripts/package/builddeb	2022-05-19 20:43:49.571679296 -0400
@@ -31,7 +31,7 @@
 
 	# Create the package
 	dpkg-gencontrol $forcearch -Vkernel:debarch="${debarch}" -p$pname -P"$pdir"
-	dpkg --build "$pdir" ..
+	dpkg-deb -Zxz --build "$pdir" ..
 }
 
 set_debarch() {
@@ -142,6 +142,9 @@
 else
 	cp System.map "$tmpdir/boot/System.map-$version"
 	cp $KCONFIG_CONFIG "$tmpdir/boot/config-$version"
+	if [ -e arch/arm64/boot/Image ]; then
+		cp arch/arm64/boot/Image "$tmpdir/boot/Image";
+	fi
 fi
 # Not all arches include the boot path in KBUILD_IMAGE
 if [ -e $KBUILD_IMAGE ]; then
@@ -190,6 +193,26 @@
 	$MAKE headers_install KBUILD_SRC= INSTALL_HDR_PATH="$libc_headers_dir/usr"
 fi
 
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic ]; then
+	mkdir -p "$tmpdir/boot/amlogic"
+fi
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidc4.dtb ]; then
+	cp -r "$tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidc4.dtb" "$tmpdir/boot/amlogic/meson64_odroidc4.dtb"
+fi
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidhc4.dtb ]; then
+	cp -r "$tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidhc4.dtb" "$tmpdir/boot/amlogic/meson64_odroidhc4.dtb";
+fi
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidn2.dtb ]; then
+	cp -r "$tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidn2.dtb" "$tmpdir/boot/amlogic/meson64_odroidn2.dtb"
+fi
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidn2_plus.dtb ]; then
+	cp -r "$tmpdir/usr/lib/meson64-linux-image/amlogic/meson64_odroidn2_plus.dtb" "$tmpdir/boot/amlogic/meson64_odroidn2_plus.dtb"
+fi
+if [ -e $tmpdir/usr/lib/meson64-linux-image/amlogic/overlays ]; then
+	mkdir -p "$tmpdir/boot/amlogic/overlays";
+	cp -r "$tmpdir/usr/lib/meson64-linux-image/amlogic/overlays/" "$tmpdir/boot/amlogic/";
+fi
+
 # Install the maintainer scripts
 # Note: hook scripts under /etc/kernel are also executed by official Debian
 # kernel packages, as well as kernel packages built using make-kpkg.
@@ -220,6 +243,17 @@
 	chmod 755 "$tmpdir/DEBIAN/$script"
 done
 
+	cat > $tmpdir/DEBIAN/preinst <<EOT
+#!/bin/bash
+# remove initrd
+
+set -e
+
+rm -f /boot/{initrd.img*,uInitrd} 2>/dev/null
+exit 0
+EOT
+        chmod 755 $tmpdir/DEBIAN/preinst
+
 # Try to determine maintainer and email values
 if [ -n "$DEBEMAIL" ]; then
        email=$DEBEMAIL
@@ -342,6 +376,45 @@
 (cd $objtree; cp $KCONFIG_CONFIG $destdir/.config) # copy .config manually to be where it's expected to be
 ln -sf "/usr/src/linux-headers-$version" "$kernel_headers_dir/lib/modules/$version/build"
 rm -f "$objtree/debian/hdrsrcfiles" "$objtree/debian/hdrobjfiles"
+if [ -e headers-byteshift.patch ]; then
+	cp headers-byteshift.patch $destdir/
+	mkdir -p $kernel_headers_dir/DEBIAN
+	cat > $kernel_headers_dir/DEBIAN/postinst <<EOT
+#!/bin/bash
+# compile headers
+
+set -e
+
+clean_headers(){
+find -type f -exec touch {} +
+echo 'y' | make ARCH=arm64 M=scripts clean
+patch -p1 < headers-byteshift.patch
+rm -f headers-byteshift.patch
+echo 'y' | make ARCH=arm64 -j\$(grep -c 'processor' /proc/cpuinfo) -s scripts
+echo 'y' | make ARCH=arm64 -j\$(grep -c 'processor' /proc/cpuinfo) -s M=scripts/mod/
+if [ -e .config.old ]; then
+	rm -f .config.old;
+fi
+}
+
+cd /usr/src/linux-headers-$version
+echo -e "Compiling headers ..."
+clean_headers > /dev/null 2>&1;
+exit 0
+EOT
+	chmod 755 $kernel_headers_dir/DEBIAN/postinst
+fi
+	mkdir -p $kernel_headers_dir/DEBIAN
+	cat > $kernel_headers_dir/DEBIAN/preinst <<EOT
+#!/bin/sh
+# remove old linux headers
+
+set -e
+
+rm -fdr /usr/src/linux-headers-* > /dev/null 2>&1
+exit 0
+EOT
+        chmod 755 $kernel_headers_dir/DEBIAN/preinst
 
 cat <<EOF >> debian/control
 
